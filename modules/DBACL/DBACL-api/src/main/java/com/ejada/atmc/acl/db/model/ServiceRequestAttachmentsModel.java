/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ejada.atmc.acl.db.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.sql.Blob;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the ServiceRequestAttachments service. Represents a row in the &quot;SERVICE_REQUEST_ATTACHMENTS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.ejada.atmc.acl.db.model.impl.ServiceRequestAttachmentsModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.ejada.atmc.acl.db.model.impl.ServiceRequestAttachmentsImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ServiceRequestAttachments
 * @generated
 */
@ProviderType
public interface ServiceRequestAttachmentsModel
	extends BaseModel<ServiceRequestAttachments> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a service request attachments model instance should use the {@link ServiceRequestAttachments} interface instead.
	 */

	/**
	 * Returns the primary key of this service request attachments.
	 *
	 * @return the primary key of this service request attachments
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this service request attachments.
	 *
	 * @param primaryKey the primary key of this service request attachments
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the file_id of this service request attachments.
	 *
	 * @return the file_id of this service request attachments
	 */
	public long getFILE_ID();

	/**
	 * Sets the file_id of this service request attachments.
	 *
	 * @param FILE_ID the file_id of this service request attachments
	 */
	public void setFILE_ID(long FILE_ID);

	/**
	 * Returns the reference_no of this service request attachments.
	 *
	 * @return the reference_no of this service request attachments
	 */
	@AutoEscape
	public String getREFERENCE_NO();

	/**
	 * Sets the reference_no of this service request attachments.
	 *
	 * @param REFERENCE_NO the reference_no of this service request attachments
	 */
	public void setREFERENCE_NO(String REFERENCE_NO);

	/**
	 * Returns the action_id of this service request attachments.
	 *
	 * @return the action_id of this service request attachments
	 */
	@AutoEscape
	public String getACTION_ID();

	/**
	 * Sets the action_id of this service request attachments.
	 *
	 * @param ACTION_ID the action_id of this service request attachments
	 */
	public void setACTION_ID(String ACTION_ID);

	/**
	 * Returns the file_content of this service request attachments.
	 *
	 * @return the file_content of this service request attachments
	 */
	public Blob getFILE_CONTENT();

	/**
	 * Sets the file_content of this service request attachments.
	 *
	 * @param FILE_CONTENT the file_content of this service request attachments
	 */
	public void setFILE_CONTENT(Blob FILE_CONTENT);

	/**
	 * Returns the file_name of this service request attachments.
	 *
	 * @return the file_name of this service request attachments
	 */
	@AutoEscape
	public String getFILE_NAME();

	/**
	 * Sets the file_name of this service request attachments.
	 *
	 * @param FILE_NAME the file_name of this service request attachments
	 */
	public void setFILE_NAME(String FILE_NAME);

}