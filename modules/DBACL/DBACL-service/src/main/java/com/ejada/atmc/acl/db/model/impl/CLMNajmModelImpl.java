/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ejada.atmc.acl.db.model.impl;

import com.ejada.atmc.acl.db.model.CLMNajm;
import com.ejada.atmc.acl.db.model.CLMNajmModel;
import com.ejada.atmc.acl.db.model.CLMNajmSoap;
import com.ejada.atmc.acl.db.service.persistence.CLMNajmPK;

import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.ProxyUtil;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the CLMNajm service. Represents a row in the &quot;MDM_CLM_NAJM&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>CLMNajmModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CLMNajmImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see CLMNajmImpl
 * @generated
 */
@JSON(strict = true)
public class CLMNajmModelImpl
	extends BaseModelImpl<CLMNajm> implements CLMNajmModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a clm najm model instance should use the <code>CLMNajm</code> interface instead.
	 */
	public static final String TABLE_NAME = "MDM_CLM_NAJM";

	public static final Object[][] TABLE_COLUMNS = {
		{"CIAI_CASE_NO", Types.VARCHAR}, {"CIPI_ID", Types.VARCHAR},
		{"CIAI_CALL_DT", Types.VARCHAR}, {"CIAI_CITY", Types.VARCHAR},
		{"CIPI_NAME", Types.VARCHAR}, {"CIPI_PHONE_NO", Types.VARCHAR},
		{"CIPI_AGE", Types.VARCHAR}, {"CIPI_NATIONALITY", Types.VARCHAR},
		{"CIPI_PLATE_NO", Types.VARCHAR},
		{"CIPI_LIABILITY_PERC", Types.VARCHAR},
		{"CIPI_LIABILITY_AMT", Types.VARCHAR},
		{"CIPI_CUSTOM_ID", Types.VARCHAR}, {"CIPI_SEQ_NO", Types.VARCHAR},
		{"CIII_ENGLISH_NAME", Types.VARCHAR}, {"CIII_POL_NO", Types.VARCHAR},
		{"CIII_NAJM_PLATE_NO", Types.VARCHAR},
		{"CIII_NAJM_CHASSIS_NO", Types.VARCHAR},
		{"CIII_NAJM_VEH_ID", Types.VARCHAR}, {"CIAAI_CAUSE_ARB", Types.VARCHAR},
		{"CIAAI_CAUSE_ENG", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("CIAI_CASE_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CIPI_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CIAI_CALL_DT", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CIAI_CITY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CIPI_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CIPI_PHONE_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CIPI_AGE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CIPI_NATIONALITY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CIPI_PLATE_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CIPI_LIABILITY_PERC", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CIPI_LIABILITY_AMT", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CIPI_CUSTOM_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CIPI_SEQ_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CIII_ENGLISH_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CIII_POL_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CIII_NAJM_PLATE_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CIII_NAJM_CHASSIS_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CIII_NAJM_VEH_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CIAAI_CAUSE_ARB", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CIAAI_CAUSE_ENG", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table MDM_CLM_NAJM (CIAI_CASE_NO VARCHAR(75) not null,CIPI_ID VARCHAR(75) not null,CIAI_CALL_DT VARCHAR(75) null,CIAI_CITY VARCHAR(75) null,CIPI_NAME VARCHAR(75) null,CIPI_PHONE_NO VARCHAR(75) null,CIPI_AGE VARCHAR(75) null,CIPI_NATIONALITY VARCHAR(75) null,CIPI_PLATE_NO VARCHAR(75) null,CIPI_LIABILITY_PERC VARCHAR(75) null,CIPI_LIABILITY_AMT VARCHAR(75) null,CIPI_CUSTOM_ID VARCHAR(75) null,CIPI_SEQ_NO VARCHAR(75) null,CIII_ENGLISH_NAME VARCHAR(75) null,CIII_POL_NO VARCHAR(75) null,CIII_NAJM_PLATE_NO VARCHAR(75) null,CIII_NAJM_CHASSIS_NO VARCHAR(75) null,CIII_NAJM_VEH_ID VARCHAR(75) null,CIAAI_CAUSE_ARB VARCHAR(75) null,CIAAI_CAUSE_ENG VARCHAR(75) null,primary key (CIAI_CASE_NO, CIPI_ID))";

	public static final String TABLE_SQL_DROP = "drop table MDM_CLM_NAJM";

	public static final String ORDER_BY_JPQL =
		" ORDER BY clmNajm.id.caseNo ASC, clmNajm.id.cipiId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY MDM_CLM_NAJM.CIAI_CASE_NO ASC, MDM_CLM_NAJM.CIPI_ID ASC";

	public static final String DATA_SOURCE = "extDS";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long CASENO_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long CUSTOMID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long ENGLISHNAME_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long NAJMPLATENO_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)
	 */
	@Deprecated
	public static final long CIPIID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static CLMNajm toModel(CLMNajmSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		CLMNajm model = new CLMNajmImpl();

		model.setCaseNo(soapModel.getCaseNo());
		model.setCipiId(soapModel.getCipiId());
		model.setCallDt(soapModel.getCallDt());
		model.setCity(soapModel.getCity());
		model.setName(soapModel.getName());
		model.setPhoneNo(soapModel.getPhoneNo());
		model.setAge(soapModel.getAge());
		model.setNationality(soapModel.getNationality());
		model.setPlateNo(soapModel.getPlateNo());
		model.setLiabiltiyPerc(soapModel.getLiabiltiyPerc());
		model.setLiabiltiyAmt(soapModel.getLiabiltiyAmt());
		model.setCustomId(soapModel.getCustomId());
		model.setSeqNo(soapModel.getSeqNo());
		model.setEnglishName(soapModel.getEnglishName());
		model.setPolNo(soapModel.getPolNo());
		model.setNajmPlateNo(soapModel.getNajmPlateNo());
		model.setNajmChassisNo(soapModel.getNajmChassisNo());
		model.setNajmVEHNo(soapModel.getNajmVEHNo());
		model.setCauseAr(soapModel.getCauseAr());
		model.setCauseEn(soapModel.getCauseEn());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static List<CLMNajm> toModels(CLMNajmSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<CLMNajm> models = new ArrayList<CLMNajm>(soapModels.length);

		for (CLMNajmSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public CLMNajmModelImpl() {
	}

	@Override
	public CLMNajmPK getPrimaryKey() {
		return new CLMNajmPK(_caseNo, _cipiId);
	}

	@Override
	public void setPrimaryKey(CLMNajmPK primaryKey) {
		setCaseNo(primaryKey.caseNo);
		setCipiId(primaryKey.cipiId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new CLMNajmPK(_caseNo, _cipiId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((CLMNajmPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return CLMNajm.class;
	}

	@Override
	public String getModelClassName() {
		return CLMNajm.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<CLMNajm, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<CLMNajm, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CLMNajm, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((CLMNajm)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<CLMNajm, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<CLMNajm, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(CLMNajm)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<CLMNajm, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<CLMNajm, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, CLMNajm>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			CLMNajm.class.getClassLoader(), CLMNajm.class, ModelWrapper.class);

		try {
			Constructor<CLMNajm> constructor =
				(Constructor<CLMNajm>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<CLMNajm, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<CLMNajm, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<CLMNajm, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<CLMNajm, Object>>();
		Map<String, BiConsumer<CLMNajm, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<CLMNajm, ?>>();

		attributeGetterFunctions.put("caseNo", CLMNajm::getCaseNo);
		attributeSetterBiConsumers.put(
			"caseNo", (BiConsumer<CLMNajm, String>)CLMNajm::setCaseNo);
		attributeGetterFunctions.put("cipiId", CLMNajm::getCipiId);
		attributeSetterBiConsumers.put(
			"cipiId", (BiConsumer<CLMNajm, String>)CLMNajm::setCipiId);
		attributeGetterFunctions.put("callDt", CLMNajm::getCallDt);
		attributeSetterBiConsumers.put(
			"callDt", (BiConsumer<CLMNajm, String>)CLMNajm::setCallDt);
		attributeGetterFunctions.put("city", CLMNajm::getCity);
		attributeSetterBiConsumers.put(
			"city", (BiConsumer<CLMNajm, String>)CLMNajm::setCity);
		attributeGetterFunctions.put("name", CLMNajm::getName);
		attributeSetterBiConsumers.put(
			"name", (BiConsumer<CLMNajm, String>)CLMNajm::setName);
		attributeGetterFunctions.put("phoneNo", CLMNajm::getPhoneNo);
		attributeSetterBiConsumers.put(
			"phoneNo", (BiConsumer<CLMNajm, String>)CLMNajm::setPhoneNo);
		attributeGetterFunctions.put("age", CLMNajm::getAge);
		attributeSetterBiConsumers.put(
			"age", (BiConsumer<CLMNajm, String>)CLMNajm::setAge);
		attributeGetterFunctions.put("nationality", CLMNajm::getNationality);
		attributeSetterBiConsumers.put(
			"nationality",
			(BiConsumer<CLMNajm, String>)CLMNajm::setNationality);
		attributeGetterFunctions.put("plateNo", CLMNajm::getPlateNo);
		attributeSetterBiConsumers.put(
			"plateNo", (BiConsumer<CLMNajm, String>)CLMNajm::setPlateNo);
		attributeGetterFunctions.put(
			"liabiltiyPerc", CLMNajm::getLiabiltiyPerc);
		attributeSetterBiConsumers.put(
			"liabiltiyPerc",
			(BiConsumer<CLMNajm, String>)CLMNajm::setLiabiltiyPerc);
		attributeGetterFunctions.put("liabiltiyAmt", CLMNajm::getLiabiltiyAmt);
		attributeSetterBiConsumers.put(
			"liabiltiyAmt",
			(BiConsumer<CLMNajm, String>)CLMNajm::setLiabiltiyAmt);
		attributeGetterFunctions.put("customId", CLMNajm::getCustomId);
		attributeSetterBiConsumers.put(
			"customId", (BiConsumer<CLMNajm, String>)CLMNajm::setCustomId);
		attributeGetterFunctions.put("seqNo", CLMNajm::getSeqNo);
		attributeSetterBiConsumers.put(
			"seqNo", (BiConsumer<CLMNajm, String>)CLMNajm::setSeqNo);
		attributeGetterFunctions.put("englishName", CLMNajm::getEnglishName);
		attributeSetterBiConsumers.put(
			"englishName",
			(BiConsumer<CLMNajm, String>)CLMNajm::setEnglishName);
		attributeGetterFunctions.put("polNo", CLMNajm::getPolNo);
		attributeSetterBiConsumers.put(
			"polNo", (BiConsumer<CLMNajm, String>)CLMNajm::setPolNo);
		attributeGetterFunctions.put("najmPlateNo", CLMNajm::getNajmPlateNo);
		attributeSetterBiConsumers.put(
			"najmPlateNo",
			(BiConsumer<CLMNajm, String>)CLMNajm::setNajmPlateNo);
		attributeGetterFunctions.put(
			"najmChassisNo", CLMNajm::getNajmChassisNo);
		attributeSetterBiConsumers.put(
			"najmChassisNo",
			(BiConsumer<CLMNajm, String>)CLMNajm::setNajmChassisNo);
		attributeGetterFunctions.put("najmVEHNo", CLMNajm::getNajmVEHNo);
		attributeSetterBiConsumers.put(
			"najmVEHNo", (BiConsumer<CLMNajm, String>)CLMNajm::setNajmVEHNo);
		attributeGetterFunctions.put("causeAr", CLMNajm::getCauseAr);
		attributeSetterBiConsumers.put(
			"causeAr", (BiConsumer<CLMNajm, String>)CLMNajm::setCauseAr);
		attributeGetterFunctions.put("causeEn", CLMNajm::getCauseEn);
		attributeSetterBiConsumers.put(
			"causeEn", (BiConsumer<CLMNajm, String>)CLMNajm::setCauseEn);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getCaseNo() {
		if (_caseNo == null) {
			return "";
		}
		else {
			return _caseNo;
		}
	}

	@Override
	public void setCaseNo(String caseNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_caseNo = caseNo;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalCaseNo() {
		return getColumnOriginalValue("CIAI_CASE_NO");
	}

	@JSON
	@Override
	public String getCipiId() {
		if (_cipiId == null) {
			return "";
		}
		else {
			return _cipiId;
		}
	}

	@Override
	public void setCipiId(String cipiId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cipiId = cipiId;
	}

	@JSON
	@Override
	public String getCallDt() {
		if (_callDt == null) {
			return "";
		}
		else {
			return _callDt;
		}
	}

	@Override
	public void setCallDt(String callDt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_callDt = callDt;
	}

	@JSON
	@Override
	public String getCity() {
		if (_city == null) {
			return "";
		}
		else {
			return _city;
		}
	}

	@Override
	public void setCity(String city) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_city = city;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return "";
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_name = name;
	}

	@JSON
	@Override
	public String getPhoneNo() {
		if (_phoneNo == null) {
			return "";
		}
		else {
			return _phoneNo;
		}
	}

	@Override
	public void setPhoneNo(String phoneNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_phoneNo = phoneNo;
	}

	@JSON
	@Override
	public String getAge() {
		if (_age == null) {
			return "";
		}
		else {
			return _age;
		}
	}

	@Override
	public void setAge(String age) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_age = age;
	}

	@JSON
	@Override
	public String getNationality() {
		if (_nationality == null) {
			return "";
		}
		else {
			return _nationality;
		}
	}

	@Override
	public void setNationality(String nationality) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nationality = nationality;
	}

	@JSON
	@Override
	public String getPlateNo() {
		if (_plateNo == null) {
			return "";
		}
		else {
			return _plateNo;
		}
	}

	@Override
	public void setPlateNo(String plateNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_plateNo = plateNo;
	}

	@JSON
	@Override
	public String getLiabiltiyPerc() {
		if (_liabiltiyPerc == null) {
			return "";
		}
		else {
			return _liabiltiyPerc;
		}
	}

	@Override
	public void setLiabiltiyPerc(String liabiltiyPerc) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_liabiltiyPerc = liabiltiyPerc;
	}

	@JSON
	@Override
	public String getLiabiltiyAmt() {
		if (_liabiltiyAmt == null) {
			return "";
		}
		else {
			return _liabiltiyAmt;
		}
	}

	@Override
	public void setLiabiltiyAmt(String liabiltiyAmt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_liabiltiyAmt = liabiltiyAmt;
	}

	@JSON
	@Override
	public String getCustomId() {
		if (_customId == null) {
			return "";
		}
		else {
			return _customId;
		}
	}

	@Override
	public void setCustomId(String customId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_customId = customId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalCustomId() {
		return getColumnOriginalValue("CIPI_CUSTOM_ID");
	}

	@JSON
	@Override
	public String getSeqNo() {
		if (_seqNo == null) {
			return "";
		}
		else {
			return _seqNo;
		}
	}

	@Override
	public void setSeqNo(String seqNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_seqNo = seqNo;
	}

	@JSON
	@Override
	public String getEnglishName() {
		if (_englishName == null) {
			return "";
		}
		else {
			return _englishName;
		}
	}

	@Override
	public void setEnglishName(String englishName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_englishName = englishName;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalEnglishName() {
		return getColumnOriginalValue("CIII_ENGLISH_NAME");
	}

	@JSON
	@Override
	public String getPolNo() {
		if (_polNo == null) {
			return "";
		}
		else {
			return _polNo;
		}
	}

	@Override
	public void setPolNo(String polNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_polNo = polNo;
	}

	@JSON
	@Override
	public String getNajmPlateNo() {
		if (_najmPlateNo == null) {
			return "";
		}
		else {
			return _najmPlateNo;
		}
	}

	@Override
	public void setNajmPlateNo(String najmPlateNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_najmPlateNo = najmPlateNo;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalNajmPlateNo() {
		return getColumnOriginalValue("CIII_NAJM_PLATE_NO");
	}

	@JSON
	@Override
	public String getNajmChassisNo() {
		if (_najmChassisNo == null) {
			return "";
		}
		else {
			return _najmChassisNo;
		}
	}

	@Override
	public void setNajmChassisNo(String najmChassisNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_najmChassisNo = najmChassisNo;
	}

	@JSON
	@Override
	public String getNajmVEHNo() {
		if (_najmVEHNo == null) {
			return "";
		}
		else {
			return _najmVEHNo;
		}
	}

	@Override
	public void setNajmVEHNo(String najmVEHNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_najmVEHNo = najmVEHNo;
	}

	@JSON
	@Override
	public String getCauseAr() {
		if (_causeAr == null) {
			return "";
		}
		else {
			return _causeAr;
		}
	}

	@Override
	public void setCauseAr(String causeAr) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_causeAr = causeAr;
	}

	@JSON
	@Override
	public String getCauseEn() {
		if (_causeEn == null) {
			return "";
		}
		else {
			return _causeEn;
		}
	}

	@Override
	public void setCauseEn(String causeEn) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_causeEn = causeEn;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (entry.getValue() != getColumnValue(entry.getKey())) {
				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public CLMNajm toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, CLMNajm>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CLMNajmImpl clmNajmImpl = new CLMNajmImpl();

		clmNajmImpl.setCaseNo(getCaseNo());
		clmNajmImpl.setCipiId(getCipiId());
		clmNajmImpl.setCallDt(getCallDt());
		clmNajmImpl.setCity(getCity());
		clmNajmImpl.setName(getName());
		clmNajmImpl.setPhoneNo(getPhoneNo());
		clmNajmImpl.setAge(getAge());
		clmNajmImpl.setNationality(getNationality());
		clmNajmImpl.setPlateNo(getPlateNo());
		clmNajmImpl.setLiabiltiyPerc(getLiabiltiyPerc());
		clmNajmImpl.setLiabiltiyAmt(getLiabiltiyAmt());
		clmNajmImpl.setCustomId(getCustomId());
		clmNajmImpl.setSeqNo(getSeqNo());
		clmNajmImpl.setEnglishName(getEnglishName());
		clmNajmImpl.setPolNo(getPolNo());
		clmNajmImpl.setNajmPlateNo(getNajmPlateNo());
		clmNajmImpl.setNajmChassisNo(getNajmChassisNo());
		clmNajmImpl.setNajmVEHNo(getNajmVEHNo());
		clmNajmImpl.setCauseAr(getCauseAr());
		clmNajmImpl.setCauseEn(getCauseEn());

		clmNajmImpl.resetOriginalValues();

		return clmNajmImpl;
	}

	@Override
	public int compareTo(CLMNajm clmNajm) {
		CLMNajmPK primaryKey = clmNajm.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof CLMNajm)) {
			return false;
		}

		CLMNajm clmNajm = (CLMNajm)object;

		CLMNajmPK primaryKey = clmNajm.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<CLMNajm> toCacheModel() {
		CLMNajmCacheModel clmNajmCacheModel = new CLMNajmCacheModel();

		clmNajmCacheModel.clmNajmPK = getPrimaryKey();

		clmNajmCacheModel.caseNo = getCaseNo();

		String caseNo = clmNajmCacheModel.caseNo;

		if ((caseNo != null) && (caseNo.length() == 0)) {
			clmNajmCacheModel.caseNo = null;
		}

		clmNajmCacheModel.cipiId = getCipiId();

		String cipiId = clmNajmCacheModel.cipiId;

		if ((cipiId != null) && (cipiId.length() == 0)) {
			clmNajmCacheModel.cipiId = null;
		}

		clmNajmCacheModel.callDt = getCallDt();

		String callDt = clmNajmCacheModel.callDt;

		if ((callDt != null) && (callDt.length() == 0)) {
			clmNajmCacheModel.callDt = null;
		}

		clmNajmCacheModel.city = getCity();

		String city = clmNajmCacheModel.city;

		if ((city != null) && (city.length() == 0)) {
			clmNajmCacheModel.city = null;
		}

		clmNajmCacheModel.name = getName();

		String name = clmNajmCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			clmNajmCacheModel.name = null;
		}

		clmNajmCacheModel.phoneNo = getPhoneNo();

		String phoneNo = clmNajmCacheModel.phoneNo;

		if ((phoneNo != null) && (phoneNo.length() == 0)) {
			clmNajmCacheModel.phoneNo = null;
		}

		clmNajmCacheModel.age = getAge();

		String age = clmNajmCacheModel.age;

		if ((age != null) && (age.length() == 0)) {
			clmNajmCacheModel.age = null;
		}

		clmNajmCacheModel.nationality = getNationality();

		String nationality = clmNajmCacheModel.nationality;

		if ((nationality != null) && (nationality.length() == 0)) {
			clmNajmCacheModel.nationality = null;
		}

		clmNajmCacheModel.plateNo = getPlateNo();

		String plateNo = clmNajmCacheModel.plateNo;

		if ((plateNo != null) && (plateNo.length() == 0)) {
			clmNajmCacheModel.plateNo = null;
		}

		clmNajmCacheModel.liabiltiyPerc = getLiabiltiyPerc();

		String liabiltiyPerc = clmNajmCacheModel.liabiltiyPerc;

		if ((liabiltiyPerc != null) && (liabiltiyPerc.length() == 0)) {
			clmNajmCacheModel.liabiltiyPerc = null;
		}

		clmNajmCacheModel.liabiltiyAmt = getLiabiltiyAmt();

		String liabiltiyAmt = clmNajmCacheModel.liabiltiyAmt;

		if ((liabiltiyAmt != null) && (liabiltiyAmt.length() == 0)) {
			clmNajmCacheModel.liabiltiyAmt = null;
		}

		clmNajmCacheModel.customId = getCustomId();

		String customId = clmNajmCacheModel.customId;

		if ((customId != null) && (customId.length() == 0)) {
			clmNajmCacheModel.customId = null;
		}

		clmNajmCacheModel.seqNo = getSeqNo();

		String seqNo = clmNajmCacheModel.seqNo;

		if ((seqNo != null) && (seqNo.length() == 0)) {
			clmNajmCacheModel.seqNo = null;
		}

		clmNajmCacheModel.englishName = getEnglishName();

		String englishName = clmNajmCacheModel.englishName;

		if ((englishName != null) && (englishName.length() == 0)) {
			clmNajmCacheModel.englishName = null;
		}

		clmNajmCacheModel.polNo = getPolNo();

		String polNo = clmNajmCacheModel.polNo;

		if ((polNo != null) && (polNo.length() == 0)) {
			clmNajmCacheModel.polNo = null;
		}

		clmNajmCacheModel.najmPlateNo = getNajmPlateNo();

		String najmPlateNo = clmNajmCacheModel.najmPlateNo;

		if ((najmPlateNo != null) && (najmPlateNo.length() == 0)) {
			clmNajmCacheModel.najmPlateNo = null;
		}

		clmNajmCacheModel.najmChassisNo = getNajmChassisNo();

		String najmChassisNo = clmNajmCacheModel.najmChassisNo;

		if ((najmChassisNo != null) && (najmChassisNo.length() == 0)) {
			clmNajmCacheModel.najmChassisNo = null;
		}

		clmNajmCacheModel.najmVEHNo = getNajmVEHNo();

		String najmVEHNo = clmNajmCacheModel.najmVEHNo;

		if ((najmVEHNo != null) && (najmVEHNo.length() == 0)) {
			clmNajmCacheModel.najmVEHNo = null;
		}

		clmNajmCacheModel.causeAr = getCauseAr();

		String causeAr = clmNajmCacheModel.causeAr;

		if ((causeAr != null) && (causeAr.length() == 0)) {
			clmNajmCacheModel.causeAr = null;
		}

		clmNajmCacheModel.causeEn = getCauseEn();

		String causeEn = clmNajmCacheModel.causeEn;

		if ((causeEn != null) && (causeEn.length() == 0)) {
			clmNajmCacheModel.causeEn = null;
		}

		return clmNajmCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<CLMNajm, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(4 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<CLMNajm, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CLMNajm, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((CLMNajm)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<CLMNajm, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<CLMNajm, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CLMNajm, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((CLMNajm)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, CLMNajm>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private String _caseNo;
	private String _cipiId;
	private String _callDt;
	private String _city;
	private String _name;
	private String _phoneNo;
	private String _age;
	private String _nationality;
	private String _plateNo;
	private String _liabiltiyPerc;
	private String _liabiltiyAmt;
	private String _customId;
	private String _seqNo;
	private String _englishName;
	private String _polNo;
	private String _najmPlateNo;
	private String _najmChassisNo;
	private String _najmVEHNo;
	private String _causeAr;
	private String _causeEn;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<CLMNajm, Object> function = _attributeGetterFunctions.get(
			columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((CLMNajm)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("CIAI_CASE_NO", _caseNo);
		_columnOriginalValues.put("CIPI_ID", _cipiId);
		_columnOriginalValues.put("CIAI_CALL_DT", _callDt);
		_columnOriginalValues.put("CIAI_CITY", _city);
		_columnOriginalValues.put("CIPI_NAME", _name);
		_columnOriginalValues.put("CIPI_PHONE_NO", _phoneNo);
		_columnOriginalValues.put("CIPI_AGE", _age);
		_columnOriginalValues.put("CIPI_NATIONALITY", _nationality);
		_columnOriginalValues.put("CIPI_PLATE_NO", _plateNo);
		_columnOriginalValues.put("CIPI_LIABILITY_PERC", _liabiltiyPerc);
		_columnOriginalValues.put("CIPI_LIABILITY_AMT", _liabiltiyAmt);
		_columnOriginalValues.put("CIPI_CUSTOM_ID", _customId);
		_columnOriginalValues.put("CIPI_SEQ_NO", _seqNo);
		_columnOriginalValues.put("CIII_ENGLISH_NAME", _englishName);
		_columnOriginalValues.put("CIII_POL_NO", _polNo);
		_columnOriginalValues.put("CIII_NAJM_PLATE_NO", _najmPlateNo);
		_columnOriginalValues.put("CIII_NAJM_CHASSIS_NO", _najmChassisNo);
		_columnOriginalValues.put("CIII_NAJM_VEH_ID", _najmVEHNo);
		_columnOriginalValues.put("CIAAI_CAUSE_ARB", _causeAr);
		_columnOriginalValues.put("CIAAI_CAUSE_ENG", _causeEn);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("CIAI_CASE_NO", "caseNo");
		attributeNames.put("CIPI_ID", "cipiId");
		attributeNames.put("CIAI_CALL_DT", "callDt");
		attributeNames.put("CIAI_CITY", "city");
		attributeNames.put("CIPI_NAME", "name");
		attributeNames.put("CIPI_PHONE_NO", "phoneNo");
		attributeNames.put("CIPI_AGE", "age");
		attributeNames.put("CIPI_NATIONALITY", "nationality");
		attributeNames.put("CIPI_PLATE_NO", "plateNo");
		attributeNames.put("CIPI_LIABILITY_PERC", "liabiltiyPerc");
		attributeNames.put("CIPI_LIABILITY_AMT", "liabiltiyAmt");
		attributeNames.put("CIPI_CUSTOM_ID", "customId");
		attributeNames.put("CIPI_SEQ_NO", "seqNo");
		attributeNames.put("CIII_ENGLISH_NAME", "englishName");
		attributeNames.put("CIII_POL_NO", "polNo");
		attributeNames.put("CIII_NAJM_PLATE_NO", "najmPlateNo");
		attributeNames.put("CIII_NAJM_CHASSIS_NO", "najmChassisNo");
		attributeNames.put("CIII_NAJM_VEH_ID", "najmVEHNo");
		attributeNames.put("CIAAI_CAUSE_ARB", "causeAr");
		attributeNames.put("CIAAI_CAUSE_ENG", "causeEn");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("CIAI_CASE_NO", 1L);

		columnBitmasks.put("CIPI_ID", 2L);

		columnBitmasks.put("CIAI_CALL_DT", 4L);

		columnBitmasks.put("CIAI_CITY", 8L);

		columnBitmasks.put("CIPI_NAME", 16L);

		columnBitmasks.put("CIPI_PHONE_NO", 32L);

		columnBitmasks.put("CIPI_AGE", 64L);

		columnBitmasks.put("CIPI_NATIONALITY", 128L);

		columnBitmasks.put("CIPI_PLATE_NO", 256L);

		columnBitmasks.put("CIPI_LIABILITY_PERC", 512L);

		columnBitmasks.put("CIPI_LIABILITY_AMT", 1024L);

		columnBitmasks.put("CIPI_CUSTOM_ID", 2048L);

		columnBitmasks.put("CIPI_SEQ_NO", 4096L);

		columnBitmasks.put("CIII_ENGLISH_NAME", 8192L);

		columnBitmasks.put("CIII_POL_NO", 16384L);

		columnBitmasks.put("CIII_NAJM_PLATE_NO", 32768L);

		columnBitmasks.put("CIII_NAJM_CHASSIS_NO", 65536L);

		columnBitmasks.put("CIII_NAJM_VEH_ID", 131072L);

		columnBitmasks.put("CIAAI_CAUSE_ARB", 262144L);

		columnBitmasks.put("CIAAI_CAUSE_ENG", 524288L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private CLMNajm _escapedModel;

}