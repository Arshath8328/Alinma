/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ejada.atmc.acl.db.model.impl;

import com.ejada.atmc.acl.db.model.ClaimIntimationMtr;
import com.ejada.atmc.acl.db.model.ClaimIntimationMtrModel;
import com.ejada.atmc.acl.db.model.ClaimIntimationMtrSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the ClaimIntimationMtr service. Represents a row in the &quot;CLAIM_INTIMATION_MTR&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>ClaimIntimationMtrModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ClaimIntimationMtrImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ClaimIntimationMtrImpl
 * @generated
 */
@JSON(strict = true)
public class ClaimIntimationMtrModelImpl
	extends BaseModelImpl<ClaimIntimationMtr>
	implements ClaimIntimationMtrModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a claim intimation mtr model instance should use the <code>ClaimIntimationMtr</code> interface instead.
	 */
	public static final String TABLE_NAME = "CLAIM_INTIMATION_MTR";

	public static final Object[][] TABLE_COLUMNS = {
		{"cim_sys_id", Types.BIGINT}, {"intimation_ref", Types.VARCHAR},
		{"claimant_type", Types.VARCHAR}, {"Policy_No", Types.VARCHAR},
		{"Vehicle_Plate_No", Types.VARCHAR}, {"Sequence_No", Types.BIGINT},
		{"Chassis_No", Types.VARCHAR}, {"Mobile_No", Types.VARCHAR},
		{"Cause_of_loss", Types.VARCHAR}, {"Date_of_Loss", Types.TIMESTAMP},
		{"Accident_City", Types.VARCHAR}, {"Desc_of_Accident", Types.VARCHAR},
		{"src_accident_report", Types.VARCHAR},
		{"Accident_Report_No", Types.VARCHAR}, {"Vehicle_Make", Types.VARCHAR},
		{"vehicle_model", Types.VARCHAR}, {"Driver_Name", Types.VARCHAR},
		{"Driver_Nationality", Types.VARCHAR},
		{"Driver_National_ID", Types.BIGINT},
		{"Driver_Birth_Date", Types.TIMESTAMP},
		{"Driver_Gender", Types.VARCHAR},
		{"attachment_reference", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("cim_sys_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("intimation_ref", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("claimant_type", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Policy_No", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Vehicle_Plate_No", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Sequence_No", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("Chassis_No", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Mobile_No", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Cause_of_loss", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Date_of_Loss", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("Accident_City", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Desc_of_Accident", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("src_accident_report", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Accident_Report_No", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Vehicle_Make", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("vehicle_model", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Driver_Name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Driver_Nationality", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Driver_National_ID", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("Driver_Birth_Date", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("Driver_Gender", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("attachment_reference", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table CLAIM_INTIMATION_MTR (cim_sys_id LONG not null primary key,intimation_ref VARCHAR(75) null,claimant_type VARCHAR(75) null,Policy_No VARCHAR(75) null,Vehicle_Plate_No VARCHAR(75) null,Sequence_No LONG,Chassis_No VARCHAR(75) null,Mobile_No VARCHAR(75) null,Cause_of_loss VARCHAR(75) null,Date_of_Loss DATE null,Accident_City VARCHAR(75) null,Desc_of_Accident VARCHAR(75) null,src_accident_report VARCHAR(75) null,Accident_Report_No VARCHAR(75) null,Vehicle_Make VARCHAR(75) null,vehicle_model VARCHAR(75) null,Driver_Name VARCHAR(75) null,Driver_Nationality VARCHAR(75) null,Driver_National_ID LONG,Driver_Birth_Date DATE null,Driver_Gender VARCHAR(75) null,attachment_reference VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP =
		"drop table CLAIM_INTIMATION_MTR";

	public static final String ORDER_BY_JPQL =
		" ORDER BY claimIntimationMtr.claimIntimationMotorId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY CLAIM_INTIMATION_MTR.cim_sys_id ASC";

	public static final String DATA_SOURCE = "extDS";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long DRIVERNATIONALID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long INTIMATIONREFERENCENO_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long MOBILENO_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)
	 */
	@Deprecated
	public static final long CLAIMINTIMATIONMOTORID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static ClaimIntimationMtr toModel(ClaimIntimationMtrSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ClaimIntimationMtr model = new ClaimIntimationMtrImpl();

		model.setClaimIntimationMotorId(soapModel.getClaimIntimationMotorId());
		model.setIntimationReferenceNo(soapModel.getIntimationReferenceNo());
		model.setClaimantType(soapModel.getClaimantType());
		model.setPolicyNo(soapModel.getPolicyNo());
		model.setVehiclePlateNo(soapModel.getVehiclePlateNo());
		model.setSequenceNo(soapModel.getSequenceNo());
		model.setChassisNo(soapModel.getChassisNo());
		model.setMobileNo(soapModel.getMobileNo());
		model.setCauseOfLoss(soapModel.getCauseOfLoss());
		model.setDateOfLoss(soapModel.getDateOfLoss());
		model.setAccidentCity(soapModel.getAccidentCity());
		model.setDescOfAccident(soapModel.getDescOfAccident());
		model.setSrcOfAccidentReport(soapModel.getSrcOfAccidentReport());
		model.setAccidentReportNo(soapModel.getAccidentReportNo());
		model.setVehicleMake(soapModel.getVehicleMake());
		model.setVehicleModel(soapModel.getVehicleModel());
		model.setDriverName(soapModel.getDriverName());
		model.setDriverNationality(soapModel.getDriverNationality());
		model.setDriverNationalId(soapModel.getDriverNationalId());
		model.setDriverBirthDate(soapModel.getDriverBirthDate());
		model.setDriverGender(soapModel.getDriverGender());
		model.setAttachmentReference(soapModel.getAttachmentReference());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static List<ClaimIntimationMtr> toModels(
		ClaimIntimationMtrSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<ClaimIntimationMtr> models = new ArrayList<ClaimIntimationMtr>(
			soapModels.length);

		for (ClaimIntimationMtrSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public ClaimIntimationMtrModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _claimIntimationMotorId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setClaimIntimationMotorId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _claimIntimationMotorId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ClaimIntimationMtr.class;
	}

	@Override
	public String getModelClassName() {
		return ClaimIntimationMtr.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<ClaimIntimationMtr, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<ClaimIntimationMtr, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ClaimIntimationMtr, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((ClaimIntimationMtr)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<ClaimIntimationMtr, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<ClaimIntimationMtr, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(ClaimIntimationMtr)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<ClaimIntimationMtr, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<ClaimIntimationMtr, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, ClaimIntimationMtr>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			ClaimIntimationMtr.class.getClassLoader(), ClaimIntimationMtr.class,
			ModelWrapper.class);

		try {
			Constructor<ClaimIntimationMtr> constructor =
				(Constructor<ClaimIntimationMtr>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<ClaimIntimationMtr, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<ClaimIntimationMtr, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<ClaimIntimationMtr, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<ClaimIntimationMtr, Object>>();
		Map<String, BiConsumer<ClaimIntimationMtr, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap<String, BiConsumer<ClaimIntimationMtr, ?>>();

		attributeGetterFunctions.put(
			"claimIntimationMotorId",
			ClaimIntimationMtr::getClaimIntimationMotorId);
		attributeSetterBiConsumers.put(
			"claimIntimationMotorId",
			(BiConsumer<ClaimIntimationMtr, Long>)
				ClaimIntimationMtr::setClaimIntimationMotorId);
		attributeGetterFunctions.put(
			"intimationReferenceNo",
			ClaimIntimationMtr::getIntimationReferenceNo);
		attributeSetterBiConsumers.put(
			"intimationReferenceNo",
			(BiConsumer<ClaimIntimationMtr, String>)
				ClaimIntimationMtr::setIntimationReferenceNo);
		attributeGetterFunctions.put(
			"claimantType", ClaimIntimationMtr::getClaimantType);
		attributeSetterBiConsumers.put(
			"claimantType",
			(BiConsumer<ClaimIntimationMtr, String>)
				ClaimIntimationMtr::setClaimantType);
		attributeGetterFunctions.put(
			"policyNo", ClaimIntimationMtr::getPolicyNo);
		attributeSetterBiConsumers.put(
			"policyNo",
			(BiConsumer<ClaimIntimationMtr, String>)
				ClaimIntimationMtr::setPolicyNo);
		attributeGetterFunctions.put(
			"vehiclePlateNo", ClaimIntimationMtr::getVehiclePlateNo);
		attributeSetterBiConsumers.put(
			"vehiclePlateNo",
			(BiConsumer<ClaimIntimationMtr, String>)
				ClaimIntimationMtr::setVehiclePlateNo);
		attributeGetterFunctions.put(
			"sequenceNo", ClaimIntimationMtr::getSequenceNo);
		attributeSetterBiConsumers.put(
			"sequenceNo",
			(BiConsumer<ClaimIntimationMtr, Long>)
				ClaimIntimationMtr::setSequenceNo);
		attributeGetterFunctions.put(
			"chassisNo", ClaimIntimationMtr::getChassisNo);
		attributeSetterBiConsumers.put(
			"chassisNo",
			(BiConsumer<ClaimIntimationMtr, String>)
				ClaimIntimationMtr::setChassisNo);
		attributeGetterFunctions.put(
			"mobileNo", ClaimIntimationMtr::getMobileNo);
		attributeSetterBiConsumers.put(
			"mobileNo",
			(BiConsumer<ClaimIntimationMtr, String>)
				ClaimIntimationMtr::setMobileNo);
		attributeGetterFunctions.put(
			"causeOfLoss", ClaimIntimationMtr::getCauseOfLoss);
		attributeSetterBiConsumers.put(
			"causeOfLoss",
			(BiConsumer<ClaimIntimationMtr, String>)
				ClaimIntimationMtr::setCauseOfLoss);
		attributeGetterFunctions.put(
			"dateOfLoss", ClaimIntimationMtr::getDateOfLoss);
		attributeSetterBiConsumers.put(
			"dateOfLoss",
			(BiConsumer<ClaimIntimationMtr, Date>)
				ClaimIntimationMtr::setDateOfLoss);
		attributeGetterFunctions.put(
			"accidentCity", ClaimIntimationMtr::getAccidentCity);
		attributeSetterBiConsumers.put(
			"accidentCity",
			(BiConsumer<ClaimIntimationMtr, String>)
				ClaimIntimationMtr::setAccidentCity);
		attributeGetterFunctions.put(
			"descOfAccident", ClaimIntimationMtr::getDescOfAccident);
		attributeSetterBiConsumers.put(
			"descOfAccident",
			(BiConsumer<ClaimIntimationMtr, String>)
				ClaimIntimationMtr::setDescOfAccident);
		attributeGetterFunctions.put(
			"srcOfAccidentReport", ClaimIntimationMtr::getSrcOfAccidentReport);
		attributeSetterBiConsumers.put(
			"srcOfAccidentReport",
			(BiConsumer<ClaimIntimationMtr, String>)
				ClaimIntimationMtr::setSrcOfAccidentReport);
		attributeGetterFunctions.put(
			"accidentReportNo", ClaimIntimationMtr::getAccidentReportNo);
		attributeSetterBiConsumers.put(
			"accidentReportNo",
			(BiConsumer<ClaimIntimationMtr, String>)
				ClaimIntimationMtr::setAccidentReportNo);
		attributeGetterFunctions.put(
			"vehicleMake", ClaimIntimationMtr::getVehicleMake);
		attributeSetterBiConsumers.put(
			"vehicleMake",
			(BiConsumer<ClaimIntimationMtr, String>)
				ClaimIntimationMtr::setVehicleMake);
		attributeGetterFunctions.put(
			"vehicleModel", ClaimIntimationMtr::getVehicleModel);
		attributeSetterBiConsumers.put(
			"vehicleModel",
			(BiConsumer<ClaimIntimationMtr, String>)
				ClaimIntimationMtr::setVehicleModel);
		attributeGetterFunctions.put(
			"driverName", ClaimIntimationMtr::getDriverName);
		attributeSetterBiConsumers.put(
			"driverName",
			(BiConsumer<ClaimIntimationMtr, String>)
				ClaimIntimationMtr::setDriverName);
		attributeGetterFunctions.put(
			"driverNationality", ClaimIntimationMtr::getDriverNationality);
		attributeSetterBiConsumers.put(
			"driverNationality",
			(BiConsumer<ClaimIntimationMtr, String>)
				ClaimIntimationMtr::setDriverNationality);
		attributeGetterFunctions.put(
			"driverNationalId", ClaimIntimationMtr::getDriverNationalId);
		attributeSetterBiConsumers.put(
			"driverNationalId",
			(BiConsumer<ClaimIntimationMtr, Long>)
				ClaimIntimationMtr::setDriverNationalId);
		attributeGetterFunctions.put(
			"driverBirthDate", ClaimIntimationMtr::getDriverBirthDate);
		attributeSetterBiConsumers.put(
			"driverBirthDate",
			(BiConsumer<ClaimIntimationMtr, Date>)
				ClaimIntimationMtr::setDriverBirthDate);
		attributeGetterFunctions.put(
			"driverGender", ClaimIntimationMtr::getDriverGender);
		attributeSetterBiConsumers.put(
			"driverGender",
			(BiConsumer<ClaimIntimationMtr, String>)
				ClaimIntimationMtr::setDriverGender);
		attributeGetterFunctions.put(
			"attachmentReference", ClaimIntimationMtr::getAttachmentReference);
		attributeSetterBiConsumers.put(
			"attachmentReference",
			(BiConsumer<ClaimIntimationMtr, String>)
				ClaimIntimationMtr::setAttachmentReference);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getClaimIntimationMotorId() {
		return _claimIntimationMotorId;
	}

	@Override
	public void setClaimIntimationMotorId(long claimIntimationMotorId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_claimIntimationMotorId = claimIntimationMotorId;
	}

	@JSON
	@Override
	public String getIntimationReferenceNo() {
		if (_intimationReferenceNo == null) {
			return "";
		}
		else {
			return _intimationReferenceNo;
		}
	}

	@Override
	public void setIntimationReferenceNo(String intimationReferenceNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_intimationReferenceNo = intimationReferenceNo;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalIntimationReferenceNo() {
		return getColumnOriginalValue("intimation_ref");
	}

	@JSON
	@Override
	public String getClaimantType() {
		if (_claimantType == null) {
			return "";
		}
		else {
			return _claimantType;
		}
	}

	@Override
	public void setClaimantType(String claimantType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_claimantType = claimantType;
	}

	@JSON
	@Override
	public String getPolicyNo() {
		if (_policyNo == null) {
			return "";
		}
		else {
			return _policyNo;
		}
	}

	@Override
	public void setPolicyNo(String policyNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_policyNo = policyNo;
	}

	@JSON
	@Override
	public String getVehiclePlateNo() {
		if (_vehiclePlateNo == null) {
			return "";
		}
		else {
			return _vehiclePlateNo;
		}
	}

	@Override
	public void setVehiclePlateNo(String vehiclePlateNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehiclePlateNo = vehiclePlateNo;
	}

	@JSON
	@Override
	public long getSequenceNo() {
		return _sequenceNo;
	}

	@Override
	public void setSequenceNo(long sequenceNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sequenceNo = sequenceNo;
	}

	@JSON
	@Override
	public String getChassisNo() {
		if (_chassisNo == null) {
			return "";
		}
		else {
			return _chassisNo;
		}
	}

	@Override
	public void setChassisNo(String chassisNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_chassisNo = chassisNo;
	}

	@JSON
	@Override
	public String getMobileNo() {
		if (_mobileNo == null) {
			return "";
		}
		else {
			return _mobileNo;
		}
	}

	@Override
	public void setMobileNo(String mobileNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_mobileNo = mobileNo;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalMobileNo() {
		return getColumnOriginalValue("Mobile_No");
	}

	@JSON
	@Override
	public String getCauseOfLoss() {
		if (_causeOfLoss == null) {
			return "";
		}
		else {
			return _causeOfLoss;
		}
	}

	@Override
	public void setCauseOfLoss(String causeOfLoss) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_causeOfLoss = causeOfLoss;
	}

	@JSON
	@Override
	public Date getDateOfLoss() {
		return _dateOfLoss;
	}

	@Override
	public void setDateOfLoss(Date dateOfLoss) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dateOfLoss = dateOfLoss;
	}

	@JSON
	@Override
	public String getAccidentCity() {
		if (_accidentCity == null) {
			return "";
		}
		else {
			return _accidentCity;
		}
	}

	@Override
	public void setAccidentCity(String accidentCity) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_accidentCity = accidentCity;
	}

	@JSON
	@Override
	public String getDescOfAccident() {
		if (_descOfAccident == null) {
			return "";
		}
		else {
			return _descOfAccident;
		}
	}

	@Override
	public void setDescOfAccident(String descOfAccident) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_descOfAccident = descOfAccident;
	}

	@JSON
	@Override
	public String getSrcOfAccidentReport() {
		if (_srcOfAccidentReport == null) {
			return "";
		}
		else {
			return _srcOfAccidentReport;
		}
	}

	@Override
	public void setSrcOfAccidentReport(String srcOfAccidentReport) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_srcOfAccidentReport = srcOfAccidentReport;
	}

	@JSON
	@Override
	public String getAccidentReportNo() {
		if (_accidentReportNo == null) {
			return "";
		}
		else {
			return _accidentReportNo;
		}
	}

	@Override
	public void setAccidentReportNo(String accidentReportNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_accidentReportNo = accidentReportNo;
	}

	@JSON
	@Override
	public String getVehicleMake() {
		if (_vehicleMake == null) {
			return "";
		}
		else {
			return _vehicleMake;
		}
	}

	@Override
	public void setVehicleMake(String vehicleMake) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehicleMake = vehicleMake;
	}

	@JSON
	@Override
	public String getVehicleModel() {
		if (_vehicleModel == null) {
			return "";
		}
		else {
			return _vehicleModel;
		}
	}

	@Override
	public void setVehicleModel(String vehicleModel) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehicleModel = vehicleModel;
	}

	@JSON
	@Override
	public String getDriverName() {
		if (_driverName == null) {
			return "";
		}
		else {
			return _driverName;
		}
	}

	@Override
	public void setDriverName(String driverName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_driverName = driverName;
	}

	@JSON
	@Override
	public String getDriverNationality() {
		if (_driverNationality == null) {
			return "";
		}
		else {
			return _driverNationality;
		}
	}

	@Override
	public void setDriverNationality(String driverNationality) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_driverNationality = driverNationality;
	}

	@JSON
	@Override
	public long getDriverNationalId() {
		return _driverNationalId;
	}

	@Override
	public void setDriverNationalId(long driverNationalId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_driverNationalId = driverNationalId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalDriverNationalId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("Driver_National_ID"));
	}

	@JSON
	@Override
	public Date getDriverBirthDate() {
		return _driverBirthDate;
	}

	@Override
	public void setDriverBirthDate(Date driverBirthDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_driverBirthDate = driverBirthDate;
	}

	@JSON
	@Override
	public String getDriverGender() {
		if (_driverGender == null) {
			return "";
		}
		else {
			return _driverGender;
		}
	}

	@Override
	public void setDriverGender(String driverGender) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_driverGender = driverGender;
	}

	@JSON
	@Override
	public String getAttachmentReference() {
		if (_attachmentReference == null) {
			return "";
		}
		else {
			return _attachmentReference;
		}
	}

	@Override
	public void setAttachmentReference(String attachmentReference) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_attachmentReference = attachmentReference;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (entry.getValue() != getColumnValue(entry.getKey())) {
				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, ClaimIntimationMtr.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ClaimIntimationMtr toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, ClaimIntimationMtr>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ClaimIntimationMtrImpl claimIntimationMtrImpl =
			new ClaimIntimationMtrImpl();

		claimIntimationMtrImpl.setClaimIntimationMotorId(
			getClaimIntimationMotorId());
		claimIntimationMtrImpl.setIntimationReferenceNo(
			getIntimationReferenceNo());
		claimIntimationMtrImpl.setClaimantType(getClaimantType());
		claimIntimationMtrImpl.setPolicyNo(getPolicyNo());
		claimIntimationMtrImpl.setVehiclePlateNo(getVehiclePlateNo());
		claimIntimationMtrImpl.setSequenceNo(getSequenceNo());
		claimIntimationMtrImpl.setChassisNo(getChassisNo());
		claimIntimationMtrImpl.setMobileNo(getMobileNo());
		claimIntimationMtrImpl.setCauseOfLoss(getCauseOfLoss());
		claimIntimationMtrImpl.setDateOfLoss(getDateOfLoss());
		claimIntimationMtrImpl.setAccidentCity(getAccidentCity());
		claimIntimationMtrImpl.setDescOfAccident(getDescOfAccident());
		claimIntimationMtrImpl.setSrcOfAccidentReport(getSrcOfAccidentReport());
		claimIntimationMtrImpl.setAccidentReportNo(getAccidentReportNo());
		claimIntimationMtrImpl.setVehicleMake(getVehicleMake());
		claimIntimationMtrImpl.setVehicleModel(getVehicleModel());
		claimIntimationMtrImpl.setDriverName(getDriverName());
		claimIntimationMtrImpl.setDriverNationality(getDriverNationality());
		claimIntimationMtrImpl.setDriverNationalId(getDriverNationalId());
		claimIntimationMtrImpl.setDriverBirthDate(getDriverBirthDate());
		claimIntimationMtrImpl.setDriverGender(getDriverGender());
		claimIntimationMtrImpl.setAttachmentReference(getAttachmentReference());

		claimIntimationMtrImpl.resetOriginalValues();

		return claimIntimationMtrImpl;
	}

	@Override
	public int compareTo(ClaimIntimationMtr claimIntimationMtr) {
		long primaryKey = claimIntimationMtr.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof ClaimIntimationMtr)) {
			return false;
		}

		ClaimIntimationMtr claimIntimationMtr = (ClaimIntimationMtr)object;

		long primaryKey = claimIntimationMtr.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<ClaimIntimationMtr> toCacheModel() {
		ClaimIntimationMtrCacheModel claimIntimationMtrCacheModel =
			new ClaimIntimationMtrCacheModel();

		claimIntimationMtrCacheModel.claimIntimationMotorId =
			getClaimIntimationMotorId();

		claimIntimationMtrCacheModel.intimationReferenceNo =
			getIntimationReferenceNo();

		String intimationReferenceNo =
			claimIntimationMtrCacheModel.intimationReferenceNo;

		if ((intimationReferenceNo != null) &&
			(intimationReferenceNo.length() == 0)) {

			claimIntimationMtrCacheModel.intimationReferenceNo = null;
		}

		claimIntimationMtrCacheModel.claimantType = getClaimantType();

		String claimantType = claimIntimationMtrCacheModel.claimantType;

		if ((claimantType != null) && (claimantType.length() == 0)) {
			claimIntimationMtrCacheModel.claimantType = null;
		}

		claimIntimationMtrCacheModel.policyNo = getPolicyNo();

		String policyNo = claimIntimationMtrCacheModel.policyNo;

		if ((policyNo != null) && (policyNo.length() == 0)) {
			claimIntimationMtrCacheModel.policyNo = null;
		}

		claimIntimationMtrCacheModel.vehiclePlateNo = getVehiclePlateNo();

		String vehiclePlateNo = claimIntimationMtrCacheModel.vehiclePlateNo;

		if ((vehiclePlateNo != null) && (vehiclePlateNo.length() == 0)) {
			claimIntimationMtrCacheModel.vehiclePlateNo = null;
		}

		claimIntimationMtrCacheModel.sequenceNo = getSequenceNo();

		claimIntimationMtrCacheModel.chassisNo = getChassisNo();

		String chassisNo = claimIntimationMtrCacheModel.chassisNo;

		if ((chassisNo != null) && (chassisNo.length() == 0)) {
			claimIntimationMtrCacheModel.chassisNo = null;
		}

		claimIntimationMtrCacheModel.mobileNo = getMobileNo();

		String mobileNo = claimIntimationMtrCacheModel.mobileNo;

		if ((mobileNo != null) && (mobileNo.length() == 0)) {
			claimIntimationMtrCacheModel.mobileNo = null;
		}

		claimIntimationMtrCacheModel.causeOfLoss = getCauseOfLoss();

		String causeOfLoss = claimIntimationMtrCacheModel.causeOfLoss;

		if ((causeOfLoss != null) && (causeOfLoss.length() == 0)) {
			claimIntimationMtrCacheModel.causeOfLoss = null;
		}

		Date dateOfLoss = getDateOfLoss();

		if (dateOfLoss != null) {
			claimIntimationMtrCacheModel.dateOfLoss = dateOfLoss.getTime();
		}
		else {
			claimIntimationMtrCacheModel.dateOfLoss = Long.MIN_VALUE;
		}

		claimIntimationMtrCacheModel.accidentCity = getAccidentCity();

		String accidentCity = claimIntimationMtrCacheModel.accidentCity;

		if ((accidentCity != null) && (accidentCity.length() == 0)) {
			claimIntimationMtrCacheModel.accidentCity = null;
		}

		claimIntimationMtrCacheModel.descOfAccident = getDescOfAccident();

		String descOfAccident = claimIntimationMtrCacheModel.descOfAccident;

		if ((descOfAccident != null) && (descOfAccident.length() == 0)) {
			claimIntimationMtrCacheModel.descOfAccident = null;
		}

		claimIntimationMtrCacheModel.srcOfAccidentReport =
			getSrcOfAccidentReport();

		String srcOfAccidentReport =
			claimIntimationMtrCacheModel.srcOfAccidentReport;

		if ((srcOfAccidentReport != null) &&
			(srcOfAccidentReport.length() == 0)) {

			claimIntimationMtrCacheModel.srcOfAccidentReport = null;
		}

		claimIntimationMtrCacheModel.accidentReportNo = getAccidentReportNo();

		String accidentReportNo = claimIntimationMtrCacheModel.accidentReportNo;

		if ((accidentReportNo != null) && (accidentReportNo.length() == 0)) {
			claimIntimationMtrCacheModel.accidentReportNo = null;
		}

		claimIntimationMtrCacheModel.vehicleMake = getVehicleMake();

		String vehicleMake = claimIntimationMtrCacheModel.vehicleMake;

		if ((vehicleMake != null) && (vehicleMake.length() == 0)) {
			claimIntimationMtrCacheModel.vehicleMake = null;
		}

		claimIntimationMtrCacheModel.vehicleModel = getVehicleModel();

		String vehicleModel = claimIntimationMtrCacheModel.vehicleModel;

		if ((vehicleModel != null) && (vehicleModel.length() == 0)) {
			claimIntimationMtrCacheModel.vehicleModel = null;
		}

		claimIntimationMtrCacheModel.driverName = getDriverName();

		String driverName = claimIntimationMtrCacheModel.driverName;

		if ((driverName != null) && (driverName.length() == 0)) {
			claimIntimationMtrCacheModel.driverName = null;
		}

		claimIntimationMtrCacheModel.driverNationality = getDriverNationality();

		String driverNationality =
			claimIntimationMtrCacheModel.driverNationality;

		if ((driverNationality != null) && (driverNationality.length() == 0)) {
			claimIntimationMtrCacheModel.driverNationality = null;
		}

		claimIntimationMtrCacheModel.driverNationalId = getDriverNationalId();

		Date driverBirthDate = getDriverBirthDate();

		if (driverBirthDate != null) {
			claimIntimationMtrCacheModel.driverBirthDate =
				driverBirthDate.getTime();
		}
		else {
			claimIntimationMtrCacheModel.driverBirthDate = Long.MIN_VALUE;
		}

		claimIntimationMtrCacheModel.driverGender = getDriverGender();

		String driverGender = claimIntimationMtrCacheModel.driverGender;

		if ((driverGender != null) && (driverGender.length() == 0)) {
			claimIntimationMtrCacheModel.driverGender = null;
		}

		claimIntimationMtrCacheModel.attachmentReference =
			getAttachmentReference();

		String attachmentReference =
			claimIntimationMtrCacheModel.attachmentReference;

		if ((attachmentReference != null) &&
			(attachmentReference.length() == 0)) {

			claimIntimationMtrCacheModel.attachmentReference = null;
		}

		return claimIntimationMtrCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<ClaimIntimationMtr, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(4 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<ClaimIntimationMtr, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ClaimIntimationMtr, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((ClaimIntimationMtr)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<ClaimIntimationMtr, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<ClaimIntimationMtr, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ClaimIntimationMtr, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((ClaimIntimationMtr)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, ClaimIntimationMtr>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private long _claimIntimationMotorId;
	private String _intimationReferenceNo;
	private String _claimantType;
	private String _policyNo;
	private String _vehiclePlateNo;
	private long _sequenceNo;
	private String _chassisNo;
	private String _mobileNo;
	private String _causeOfLoss;
	private Date _dateOfLoss;
	private String _accidentCity;
	private String _descOfAccident;
	private String _srcOfAccidentReport;
	private String _accidentReportNo;
	private String _vehicleMake;
	private String _vehicleModel;
	private String _driverName;
	private String _driverNationality;
	private long _driverNationalId;
	private Date _driverBirthDate;
	private String _driverGender;
	private String _attachmentReference;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<ClaimIntimationMtr, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((ClaimIntimationMtr)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("cim_sys_id", _claimIntimationMotorId);
		_columnOriginalValues.put("intimation_ref", _intimationReferenceNo);
		_columnOriginalValues.put("claimant_type", _claimantType);
		_columnOriginalValues.put("Policy_No", _policyNo);
		_columnOriginalValues.put("Vehicle_Plate_No", _vehiclePlateNo);
		_columnOriginalValues.put("Sequence_No", _sequenceNo);
		_columnOriginalValues.put("Chassis_No", _chassisNo);
		_columnOriginalValues.put("Mobile_No", _mobileNo);
		_columnOriginalValues.put("Cause_of_loss", _causeOfLoss);
		_columnOriginalValues.put("Date_of_Loss", _dateOfLoss);
		_columnOriginalValues.put("Accident_City", _accidentCity);
		_columnOriginalValues.put("Desc_of_Accident", _descOfAccident);
		_columnOriginalValues.put("src_accident_report", _srcOfAccidentReport);
		_columnOriginalValues.put("Accident_Report_No", _accidentReportNo);
		_columnOriginalValues.put("Vehicle_Make", _vehicleMake);
		_columnOriginalValues.put("vehicle_model", _vehicleModel);
		_columnOriginalValues.put("Driver_Name", _driverName);
		_columnOriginalValues.put("Driver_Nationality", _driverNationality);
		_columnOriginalValues.put("Driver_National_ID", _driverNationalId);
		_columnOriginalValues.put("Driver_Birth_Date", _driverBirthDate);
		_columnOriginalValues.put("Driver_Gender", _driverGender);
		_columnOriginalValues.put("attachment_reference", _attachmentReference);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("cim_sys_id", "claimIntimationMotorId");
		attributeNames.put("intimation_ref", "intimationReferenceNo");
		attributeNames.put("claimant_type", "claimantType");
		attributeNames.put("Policy_No", "policyNo");
		attributeNames.put("Vehicle_Plate_No", "vehiclePlateNo");
		attributeNames.put("Sequence_No", "sequenceNo");
		attributeNames.put("Chassis_No", "chassisNo");
		attributeNames.put("Mobile_No", "mobileNo");
		attributeNames.put("Cause_of_loss", "causeOfLoss");
		attributeNames.put("Date_of_Loss", "dateOfLoss");
		attributeNames.put("Accident_City", "accidentCity");
		attributeNames.put("Desc_of_Accident", "descOfAccident");
		attributeNames.put("src_accident_report", "srcOfAccidentReport");
		attributeNames.put("Accident_Report_No", "accidentReportNo");
		attributeNames.put("Vehicle_Make", "vehicleMake");
		attributeNames.put("vehicle_model", "vehicleModel");
		attributeNames.put("Driver_Name", "driverName");
		attributeNames.put("Driver_Nationality", "driverNationality");
		attributeNames.put("Driver_National_ID", "driverNationalId");
		attributeNames.put("Driver_Birth_Date", "driverBirthDate");
		attributeNames.put("Driver_Gender", "driverGender");
		attributeNames.put("attachment_reference", "attachmentReference");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("cim_sys_id", 1L);

		columnBitmasks.put("intimation_ref", 2L);

		columnBitmasks.put("claimant_type", 4L);

		columnBitmasks.put("Policy_No", 8L);

		columnBitmasks.put("Vehicle_Plate_No", 16L);

		columnBitmasks.put("Sequence_No", 32L);

		columnBitmasks.put("Chassis_No", 64L);

		columnBitmasks.put("Mobile_No", 128L);

		columnBitmasks.put("Cause_of_loss", 256L);

		columnBitmasks.put("Date_of_Loss", 512L);

		columnBitmasks.put("Accident_City", 1024L);

		columnBitmasks.put("Desc_of_Accident", 2048L);

		columnBitmasks.put("src_accident_report", 4096L);

		columnBitmasks.put("Accident_Report_No", 8192L);

		columnBitmasks.put("Vehicle_Make", 16384L);

		columnBitmasks.put("vehicle_model", 32768L);

		columnBitmasks.put("Driver_Name", 65536L);

		columnBitmasks.put("Driver_Nationality", 131072L);

		columnBitmasks.put("Driver_National_ID", 262144L);

		columnBitmasks.put("Driver_Birth_Date", 524288L);

		columnBitmasks.put("Driver_Gender", 1048576L);

		columnBitmasks.put("attachment_reference", 2097152L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private ClaimIntimationMtr _escapedModel;

}