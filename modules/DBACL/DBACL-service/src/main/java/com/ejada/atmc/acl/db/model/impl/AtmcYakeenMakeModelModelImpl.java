/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ejada.atmc.acl.db.model.impl;

import com.ejada.atmc.acl.db.model.AtmcYakeenMakeModel;
import com.ejada.atmc.acl.db.model.AtmcYakeenMakeModelModel;
import com.ejada.atmc.acl.db.model.AtmcYakeenMakeModelSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.ProxyUtil;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the AtmcYakeenMakeModel service. Represents a row in the &quot;ATMC_YAKEEN_MAKEMODEL&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>AtmcYakeenMakeModelModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AtmcYakeenMakeModelImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AtmcYakeenMakeModelImpl
 * @generated
 */
@JSON(strict = true)
public class AtmcYakeenMakeModelModelImpl
	extends BaseModelImpl<AtmcYakeenMakeModel>
	implements AtmcYakeenMakeModelModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a atmc yakeen make model model instance should use the <code>AtmcYakeenMakeModel</code> interface instead.
	 */
	public static final String TABLE_NAME = "ATMC_YAKEEN_MAKEMODEL";

	public static final Object[][] TABLE_COLUMNS = {
		{"YAKEENMAKEID", Types.BIGINT}, {"YAKEENELMMAKEVALUE", Types.VARCHAR},
		{"YAKEENMAKEDESC", Types.VARCHAR}, {"YAKEENMAKEMAP", Types.VARCHAR},
		{"YAKEENMODELID", Types.BIGINT}, {"YAKEENMODELARABIC", Types.VARCHAR},
		{"YAKEENMODELENGLISH", Types.VARCHAR},
		{"YAKEENMODELMAP", Types.VARCHAR},
		{"YAKEENELMMODELVALUE", Types.VARCHAR},
		{"ATMCVEHICLENATIONALITY", Types.VARCHAR},
		{"ATMCBODYTYPE", Types.VARCHAR}, {"ATMCSEATINGCAPACITY", Types.VARCHAR},
		{"MAPMAKEMODELNAME", Types.VARCHAR}, {"ESKAMAKEID", Types.VARCHAR},
		{"ESKAMODELID", Types.VARCHAR}, {"MAPMAKEMODELID", Types.VARCHAR},
		{"ESKABODYTYPEID", Types.VARCHAR},
		{"ESKAVEHNALTIONALITYID", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("YAKEENMAKEID", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("YAKEENELMMAKEVALUE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("YAKEENMAKEDESC", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("YAKEENMAKEMAP", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("YAKEENMODELID", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("YAKEENMODELARABIC", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("YAKEENMODELENGLISH", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("YAKEENMODELMAP", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("YAKEENELMMODELVALUE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ATMCVEHICLENATIONALITY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ATMCBODYTYPE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ATMCSEATINGCAPACITY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MAPMAKEMODELNAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ESKAMAKEID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ESKAMODELID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MAPMAKEMODELID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ESKABODYTYPEID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ESKAVEHNALTIONALITYID", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table ATMC_YAKEEN_MAKEMODEL (YAKEENMAKEID LONG not null primary key,YAKEENELMMAKEVALUE VARCHAR(75) null,YAKEENMAKEDESC VARCHAR(75) null,YAKEENMAKEMAP VARCHAR(75) null,YAKEENMODELID LONG,YAKEENMODELARABIC VARCHAR(75) null,YAKEENMODELENGLISH VARCHAR(75) null,YAKEENMODELMAP VARCHAR(75) null,YAKEENELMMODELVALUE VARCHAR(75) null,ATMCVEHICLENATIONALITY VARCHAR(75) null,ATMCBODYTYPE VARCHAR(75) null,ATMCSEATINGCAPACITY VARCHAR(75) null,MAPMAKEMODELNAME VARCHAR(75) null,ESKAMAKEID VARCHAR(75) null,ESKAMODELID VARCHAR(75) null,MAPMAKEMODELID VARCHAR(75) null,ESKABODYTYPEID VARCHAR(75) null,ESKAVEHNALTIONALITYID VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP =
		"drop table ATMC_YAKEEN_MAKEMODEL";

	public static final String ORDER_BY_JPQL =
		" ORDER BY atmcYakeenMakeModel.yakeenMakeId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY ATMC_YAKEEN_MAKEMODEL.YAKEENMAKEID ASC";

	public static final String DATA_SOURCE = "extDS";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long ESKAMAKEID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long ESKAMODELID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long YAKEENMAKEVALUE_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long YAKEENMODELVALUE_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)
	 */
	@Deprecated
	public static final long YAKEENMAKEID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static AtmcYakeenMakeModel toModel(
		AtmcYakeenMakeModelSoap soapModel) {

		if (soapModel == null) {
			return null;
		}

		AtmcYakeenMakeModel model = new AtmcYakeenMakeModelImpl();

		model.setYakeenMakeId(soapModel.getYakeenMakeId());
		model.setYakeenMakeValue(soapModel.getYakeenMakeValue());
		model.setYakeenMakeDesc(soapModel.getYakeenMakeDesc());
		model.setYakeenMakeMap(soapModel.getYakeenMakeMap());
		model.setYakeenModelId(soapModel.getYakeenModelId());
		model.setYakeenModelArabic(soapModel.getYakeenModelArabic());
		model.setYakeenModelEnglish(soapModel.getYakeenModelEnglish());
		model.setYakeenNodelMap(soapModel.getYakeenNodelMap());
		model.setYakeenModelValue(soapModel.getYakeenModelValue());
		model.setAtmcVehicleNationality(soapModel.getAtmcVehicleNationality());
		model.setAtmcBodyType(soapModel.getAtmcBodyType());
		model.setAtmcSeatingCapacity(soapModel.getAtmcSeatingCapacity());
		model.setMapMakeModelName(soapModel.getMapMakeModelName());
		model.setEskaMakeId(soapModel.getEskaMakeId());
		model.setEskaModelId(soapModel.getEskaModelId());
		model.setMapMakeModelId(soapModel.getMapMakeModelId());
		model.setEskaBodyTypeId(soapModel.getEskaBodyTypeId());
		model.setEskaVehNationalityId(soapModel.getEskaVehNationalityId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static List<AtmcYakeenMakeModel> toModels(
		AtmcYakeenMakeModelSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<AtmcYakeenMakeModel> models = new ArrayList<AtmcYakeenMakeModel>(
			soapModels.length);

		for (AtmcYakeenMakeModelSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public AtmcYakeenMakeModelModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _yakeenMakeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setYakeenMakeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _yakeenMakeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AtmcYakeenMakeModel.class;
	}

	@Override
	public String getModelClassName() {
		return AtmcYakeenMakeModel.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<AtmcYakeenMakeModel, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<AtmcYakeenMakeModel, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AtmcYakeenMakeModel, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((AtmcYakeenMakeModel)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<AtmcYakeenMakeModel, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<AtmcYakeenMakeModel, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(AtmcYakeenMakeModel)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<AtmcYakeenMakeModel, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<AtmcYakeenMakeModel, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, AtmcYakeenMakeModel>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			AtmcYakeenMakeModel.class.getClassLoader(),
			AtmcYakeenMakeModel.class, ModelWrapper.class);

		try {
			Constructor<AtmcYakeenMakeModel> constructor =
				(Constructor<AtmcYakeenMakeModel>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<AtmcYakeenMakeModel, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<AtmcYakeenMakeModel, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<AtmcYakeenMakeModel, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<AtmcYakeenMakeModel, Object>>();
		Map<String, BiConsumer<AtmcYakeenMakeModel, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap<String, BiConsumer<AtmcYakeenMakeModel, ?>>();

		attributeGetterFunctions.put(
			"yakeenMakeId", AtmcYakeenMakeModel::getYakeenMakeId);
		attributeSetterBiConsumers.put(
			"yakeenMakeId",
			(BiConsumer<AtmcYakeenMakeModel, Long>)
				AtmcYakeenMakeModel::setYakeenMakeId);
		attributeGetterFunctions.put(
			"yakeenMakeValue", AtmcYakeenMakeModel::getYakeenMakeValue);
		attributeSetterBiConsumers.put(
			"yakeenMakeValue",
			(BiConsumer<AtmcYakeenMakeModel, String>)
				AtmcYakeenMakeModel::setYakeenMakeValue);
		attributeGetterFunctions.put(
			"yakeenMakeDesc", AtmcYakeenMakeModel::getYakeenMakeDesc);
		attributeSetterBiConsumers.put(
			"yakeenMakeDesc",
			(BiConsumer<AtmcYakeenMakeModel, String>)
				AtmcYakeenMakeModel::setYakeenMakeDesc);
		attributeGetterFunctions.put(
			"yakeenMakeMap", AtmcYakeenMakeModel::getYakeenMakeMap);
		attributeSetterBiConsumers.put(
			"yakeenMakeMap",
			(BiConsumer<AtmcYakeenMakeModel, String>)
				AtmcYakeenMakeModel::setYakeenMakeMap);
		attributeGetterFunctions.put(
			"yakeenModelId", AtmcYakeenMakeModel::getYakeenModelId);
		attributeSetterBiConsumers.put(
			"yakeenModelId",
			(BiConsumer<AtmcYakeenMakeModel, Long>)
				AtmcYakeenMakeModel::setYakeenModelId);
		attributeGetterFunctions.put(
			"yakeenModelArabic", AtmcYakeenMakeModel::getYakeenModelArabic);
		attributeSetterBiConsumers.put(
			"yakeenModelArabic",
			(BiConsumer<AtmcYakeenMakeModel, String>)
				AtmcYakeenMakeModel::setYakeenModelArabic);
		attributeGetterFunctions.put(
			"yakeenModelEnglish", AtmcYakeenMakeModel::getYakeenModelEnglish);
		attributeSetterBiConsumers.put(
			"yakeenModelEnglish",
			(BiConsumer<AtmcYakeenMakeModel, String>)
				AtmcYakeenMakeModel::setYakeenModelEnglish);
		attributeGetterFunctions.put(
			"yakeenNodelMap", AtmcYakeenMakeModel::getYakeenNodelMap);
		attributeSetterBiConsumers.put(
			"yakeenNodelMap",
			(BiConsumer<AtmcYakeenMakeModel, String>)
				AtmcYakeenMakeModel::setYakeenNodelMap);
		attributeGetterFunctions.put(
			"yakeenModelValue", AtmcYakeenMakeModel::getYakeenModelValue);
		attributeSetterBiConsumers.put(
			"yakeenModelValue",
			(BiConsumer<AtmcYakeenMakeModel, String>)
				AtmcYakeenMakeModel::setYakeenModelValue);
		attributeGetterFunctions.put(
			"atmcVehicleNationality",
			AtmcYakeenMakeModel::getAtmcVehicleNationality);
		attributeSetterBiConsumers.put(
			"atmcVehicleNationality",
			(BiConsumer<AtmcYakeenMakeModel, String>)
				AtmcYakeenMakeModel::setAtmcVehicleNationality);
		attributeGetterFunctions.put(
			"atmcBodyType", AtmcYakeenMakeModel::getAtmcBodyType);
		attributeSetterBiConsumers.put(
			"atmcBodyType",
			(BiConsumer<AtmcYakeenMakeModel, String>)
				AtmcYakeenMakeModel::setAtmcBodyType);
		attributeGetterFunctions.put(
			"atmcSeatingCapacity", AtmcYakeenMakeModel::getAtmcSeatingCapacity);
		attributeSetterBiConsumers.put(
			"atmcSeatingCapacity",
			(BiConsumer<AtmcYakeenMakeModel, String>)
				AtmcYakeenMakeModel::setAtmcSeatingCapacity);
		attributeGetterFunctions.put(
			"mapMakeModelName", AtmcYakeenMakeModel::getMapMakeModelName);
		attributeSetterBiConsumers.put(
			"mapMakeModelName",
			(BiConsumer<AtmcYakeenMakeModel, String>)
				AtmcYakeenMakeModel::setMapMakeModelName);
		attributeGetterFunctions.put(
			"eskaMakeId", AtmcYakeenMakeModel::getEskaMakeId);
		attributeSetterBiConsumers.put(
			"eskaMakeId",
			(BiConsumer<AtmcYakeenMakeModel, String>)
				AtmcYakeenMakeModel::setEskaMakeId);
		attributeGetterFunctions.put(
			"eskaModelId", AtmcYakeenMakeModel::getEskaModelId);
		attributeSetterBiConsumers.put(
			"eskaModelId",
			(BiConsumer<AtmcYakeenMakeModel, String>)
				AtmcYakeenMakeModel::setEskaModelId);
		attributeGetterFunctions.put(
			"mapMakeModelId", AtmcYakeenMakeModel::getMapMakeModelId);
		attributeSetterBiConsumers.put(
			"mapMakeModelId",
			(BiConsumer<AtmcYakeenMakeModel, String>)
				AtmcYakeenMakeModel::setMapMakeModelId);
		attributeGetterFunctions.put(
			"eskaBodyTypeId", AtmcYakeenMakeModel::getEskaBodyTypeId);
		attributeSetterBiConsumers.put(
			"eskaBodyTypeId",
			(BiConsumer<AtmcYakeenMakeModel, String>)
				AtmcYakeenMakeModel::setEskaBodyTypeId);
		attributeGetterFunctions.put(
			"eskaVehNationalityId",
			AtmcYakeenMakeModel::getEskaVehNationalityId);
		attributeSetterBiConsumers.put(
			"eskaVehNationalityId",
			(BiConsumer<AtmcYakeenMakeModel, String>)
				AtmcYakeenMakeModel::setEskaVehNationalityId);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getYakeenMakeId() {
		return _yakeenMakeId;
	}

	@Override
	public void setYakeenMakeId(long yakeenMakeId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_yakeenMakeId = yakeenMakeId;
	}

	@JSON
	@Override
	public String getYakeenMakeValue() {
		if (_yakeenMakeValue == null) {
			return "";
		}
		else {
			return _yakeenMakeValue;
		}
	}

	@Override
	public void setYakeenMakeValue(String yakeenMakeValue) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_yakeenMakeValue = yakeenMakeValue;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalYakeenMakeValue() {
		return getColumnOriginalValue("YAKEENELMMAKEVALUE");
	}

	@JSON
	@Override
	public String getYakeenMakeDesc() {
		if (_yakeenMakeDesc == null) {
			return "";
		}
		else {
			return _yakeenMakeDesc;
		}
	}

	@Override
	public void setYakeenMakeDesc(String yakeenMakeDesc) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_yakeenMakeDesc = yakeenMakeDesc;
	}

	@JSON
	@Override
	public String getYakeenMakeMap() {
		if (_yakeenMakeMap == null) {
			return "";
		}
		else {
			return _yakeenMakeMap;
		}
	}

	@Override
	public void setYakeenMakeMap(String yakeenMakeMap) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_yakeenMakeMap = yakeenMakeMap;
	}

	@JSON
	@Override
	public long getYakeenModelId() {
		return _yakeenModelId;
	}

	@Override
	public void setYakeenModelId(long yakeenModelId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_yakeenModelId = yakeenModelId;
	}

	@JSON
	@Override
	public String getYakeenModelArabic() {
		if (_yakeenModelArabic == null) {
			return "";
		}
		else {
			return _yakeenModelArabic;
		}
	}

	@Override
	public void setYakeenModelArabic(String yakeenModelArabic) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_yakeenModelArabic = yakeenModelArabic;
	}

	@JSON
	@Override
	public String getYakeenModelEnglish() {
		if (_yakeenModelEnglish == null) {
			return "";
		}
		else {
			return _yakeenModelEnglish;
		}
	}

	@Override
	public void setYakeenModelEnglish(String yakeenModelEnglish) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_yakeenModelEnglish = yakeenModelEnglish;
	}

	@JSON
	@Override
	public String getYakeenNodelMap() {
		if (_yakeenNodelMap == null) {
			return "";
		}
		else {
			return _yakeenNodelMap;
		}
	}

	@Override
	public void setYakeenNodelMap(String yakeenNodelMap) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_yakeenNodelMap = yakeenNodelMap;
	}

	@JSON
	@Override
	public String getYakeenModelValue() {
		if (_yakeenModelValue == null) {
			return "";
		}
		else {
			return _yakeenModelValue;
		}
	}

	@Override
	public void setYakeenModelValue(String yakeenModelValue) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_yakeenModelValue = yakeenModelValue;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalYakeenModelValue() {
		return getColumnOriginalValue("YAKEENELMMODELVALUE");
	}

	@JSON
	@Override
	public String getAtmcVehicleNationality() {
		if (_atmcVehicleNationality == null) {
			return "";
		}
		else {
			return _atmcVehicleNationality;
		}
	}

	@Override
	public void setAtmcVehicleNationality(String atmcVehicleNationality) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_atmcVehicleNationality = atmcVehicleNationality;
	}

	@JSON
	@Override
	public String getAtmcBodyType() {
		if (_atmcBodyType == null) {
			return "";
		}
		else {
			return _atmcBodyType;
		}
	}

	@Override
	public void setAtmcBodyType(String atmcBodyType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_atmcBodyType = atmcBodyType;
	}

	@JSON
	@Override
	public String getAtmcSeatingCapacity() {
		if (_atmcSeatingCapacity == null) {
			return "";
		}
		else {
			return _atmcSeatingCapacity;
		}
	}

	@Override
	public void setAtmcSeatingCapacity(String atmcSeatingCapacity) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_atmcSeatingCapacity = atmcSeatingCapacity;
	}

	@JSON
	@Override
	public String getMapMakeModelName() {
		if (_mapMakeModelName == null) {
			return "";
		}
		else {
			return _mapMakeModelName;
		}
	}

	@Override
	public void setMapMakeModelName(String mapMakeModelName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_mapMakeModelName = mapMakeModelName;
	}

	@JSON
	@Override
	public String getEskaMakeId() {
		if (_eskaMakeId == null) {
			return "";
		}
		else {
			return _eskaMakeId;
		}
	}

	@Override
	public void setEskaMakeId(String eskaMakeId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_eskaMakeId = eskaMakeId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalEskaMakeId() {
		return getColumnOriginalValue("ESKAMAKEID");
	}

	@JSON
	@Override
	public String getEskaModelId() {
		if (_eskaModelId == null) {
			return "";
		}
		else {
			return _eskaModelId;
		}
	}

	@Override
	public void setEskaModelId(String eskaModelId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_eskaModelId = eskaModelId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalEskaModelId() {
		return getColumnOriginalValue("ESKAMODELID");
	}

	@JSON
	@Override
	public String getMapMakeModelId() {
		if (_mapMakeModelId == null) {
			return "";
		}
		else {
			return _mapMakeModelId;
		}
	}

	@Override
	public void setMapMakeModelId(String mapMakeModelId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_mapMakeModelId = mapMakeModelId;
	}

	@JSON
	@Override
	public String getEskaBodyTypeId() {
		if (_eskaBodyTypeId == null) {
			return "";
		}
		else {
			return _eskaBodyTypeId;
		}
	}

	@Override
	public void setEskaBodyTypeId(String eskaBodyTypeId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_eskaBodyTypeId = eskaBodyTypeId;
	}

	@JSON
	@Override
	public String getEskaVehNationalityId() {
		if (_eskaVehNationalityId == null) {
			return "";
		}
		else {
			return _eskaVehNationalityId;
		}
	}

	@Override
	public void setEskaVehNationalityId(String eskaVehNationalityId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_eskaVehNationalityId = eskaVehNationalityId;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (entry.getValue() != getColumnValue(entry.getKey())) {
				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, AtmcYakeenMakeModel.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AtmcYakeenMakeModel toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, AtmcYakeenMakeModel>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AtmcYakeenMakeModelImpl atmcYakeenMakeModelImpl =
			new AtmcYakeenMakeModelImpl();

		atmcYakeenMakeModelImpl.setYakeenMakeId(getYakeenMakeId());
		atmcYakeenMakeModelImpl.setYakeenMakeValue(getYakeenMakeValue());
		atmcYakeenMakeModelImpl.setYakeenMakeDesc(getYakeenMakeDesc());
		atmcYakeenMakeModelImpl.setYakeenMakeMap(getYakeenMakeMap());
		atmcYakeenMakeModelImpl.setYakeenModelId(getYakeenModelId());
		atmcYakeenMakeModelImpl.setYakeenModelArabic(getYakeenModelArabic());
		atmcYakeenMakeModelImpl.setYakeenModelEnglish(getYakeenModelEnglish());
		atmcYakeenMakeModelImpl.setYakeenNodelMap(getYakeenNodelMap());
		atmcYakeenMakeModelImpl.setYakeenModelValue(getYakeenModelValue());
		atmcYakeenMakeModelImpl.setAtmcVehicleNationality(
			getAtmcVehicleNationality());
		atmcYakeenMakeModelImpl.setAtmcBodyType(getAtmcBodyType());
		atmcYakeenMakeModelImpl.setAtmcSeatingCapacity(
			getAtmcSeatingCapacity());
		atmcYakeenMakeModelImpl.setMapMakeModelName(getMapMakeModelName());
		atmcYakeenMakeModelImpl.setEskaMakeId(getEskaMakeId());
		atmcYakeenMakeModelImpl.setEskaModelId(getEskaModelId());
		atmcYakeenMakeModelImpl.setMapMakeModelId(getMapMakeModelId());
		atmcYakeenMakeModelImpl.setEskaBodyTypeId(getEskaBodyTypeId());
		atmcYakeenMakeModelImpl.setEskaVehNationalityId(
			getEskaVehNationalityId());

		atmcYakeenMakeModelImpl.resetOriginalValues();

		return atmcYakeenMakeModelImpl;
	}

	@Override
	public int compareTo(AtmcYakeenMakeModel atmcYakeenMakeModel) {
		long primaryKey = atmcYakeenMakeModel.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof AtmcYakeenMakeModel)) {
			return false;
		}

		AtmcYakeenMakeModel atmcYakeenMakeModel = (AtmcYakeenMakeModel)object;

		long primaryKey = atmcYakeenMakeModel.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<AtmcYakeenMakeModel> toCacheModel() {
		AtmcYakeenMakeModelCacheModel atmcYakeenMakeModelCacheModel =
			new AtmcYakeenMakeModelCacheModel();

		atmcYakeenMakeModelCacheModel.yakeenMakeId = getYakeenMakeId();

		atmcYakeenMakeModelCacheModel.yakeenMakeValue = getYakeenMakeValue();

		String yakeenMakeValue = atmcYakeenMakeModelCacheModel.yakeenMakeValue;

		if ((yakeenMakeValue != null) && (yakeenMakeValue.length() == 0)) {
			atmcYakeenMakeModelCacheModel.yakeenMakeValue = null;
		}

		atmcYakeenMakeModelCacheModel.yakeenMakeDesc = getYakeenMakeDesc();

		String yakeenMakeDesc = atmcYakeenMakeModelCacheModel.yakeenMakeDesc;

		if ((yakeenMakeDesc != null) && (yakeenMakeDesc.length() == 0)) {
			atmcYakeenMakeModelCacheModel.yakeenMakeDesc = null;
		}

		atmcYakeenMakeModelCacheModel.yakeenMakeMap = getYakeenMakeMap();

		String yakeenMakeMap = atmcYakeenMakeModelCacheModel.yakeenMakeMap;

		if ((yakeenMakeMap != null) && (yakeenMakeMap.length() == 0)) {
			atmcYakeenMakeModelCacheModel.yakeenMakeMap = null;
		}

		atmcYakeenMakeModelCacheModel.yakeenModelId = getYakeenModelId();

		atmcYakeenMakeModelCacheModel.yakeenModelArabic =
			getYakeenModelArabic();

		String yakeenModelArabic =
			atmcYakeenMakeModelCacheModel.yakeenModelArabic;

		if ((yakeenModelArabic != null) && (yakeenModelArabic.length() == 0)) {
			atmcYakeenMakeModelCacheModel.yakeenModelArabic = null;
		}

		atmcYakeenMakeModelCacheModel.yakeenModelEnglish =
			getYakeenModelEnglish();

		String yakeenModelEnglish =
			atmcYakeenMakeModelCacheModel.yakeenModelEnglish;

		if ((yakeenModelEnglish != null) &&
			(yakeenModelEnglish.length() == 0)) {

			atmcYakeenMakeModelCacheModel.yakeenModelEnglish = null;
		}

		atmcYakeenMakeModelCacheModel.yakeenNodelMap = getYakeenNodelMap();

		String yakeenNodelMap = atmcYakeenMakeModelCacheModel.yakeenNodelMap;

		if ((yakeenNodelMap != null) && (yakeenNodelMap.length() == 0)) {
			atmcYakeenMakeModelCacheModel.yakeenNodelMap = null;
		}

		atmcYakeenMakeModelCacheModel.yakeenModelValue = getYakeenModelValue();

		String yakeenModelValue =
			atmcYakeenMakeModelCacheModel.yakeenModelValue;

		if ((yakeenModelValue != null) && (yakeenModelValue.length() == 0)) {
			atmcYakeenMakeModelCacheModel.yakeenModelValue = null;
		}

		atmcYakeenMakeModelCacheModel.atmcVehicleNationality =
			getAtmcVehicleNationality();

		String atmcVehicleNationality =
			atmcYakeenMakeModelCacheModel.atmcVehicleNationality;

		if ((atmcVehicleNationality != null) &&
			(atmcVehicleNationality.length() == 0)) {

			atmcYakeenMakeModelCacheModel.atmcVehicleNationality = null;
		}

		atmcYakeenMakeModelCacheModel.atmcBodyType = getAtmcBodyType();

		String atmcBodyType = atmcYakeenMakeModelCacheModel.atmcBodyType;

		if ((atmcBodyType != null) && (atmcBodyType.length() == 0)) {
			atmcYakeenMakeModelCacheModel.atmcBodyType = null;
		}

		atmcYakeenMakeModelCacheModel.atmcSeatingCapacity =
			getAtmcSeatingCapacity();

		String atmcSeatingCapacity =
			atmcYakeenMakeModelCacheModel.atmcSeatingCapacity;

		if ((atmcSeatingCapacity != null) &&
			(atmcSeatingCapacity.length() == 0)) {

			atmcYakeenMakeModelCacheModel.atmcSeatingCapacity = null;
		}

		atmcYakeenMakeModelCacheModel.mapMakeModelName = getMapMakeModelName();

		String mapMakeModelName =
			atmcYakeenMakeModelCacheModel.mapMakeModelName;

		if ((mapMakeModelName != null) && (mapMakeModelName.length() == 0)) {
			atmcYakeenMakeModelCacheModel.mapMakeModelName = null;
		}

		atmcYakeenMakeModelCacheModel.eskaMakeId = getEskaMakeId();

		String eskaMakeId = atmcYakeenMakeModelCacheModel.eskaMakeId;

		if ((eskaMakeId != null) && (eskaMakeId.length() == 0)) {
			atmcYakeenMakeModelCacheModel.eskaMakeId = null;
		}

		atmcYakeenMakeModelCacheModel.eskaModelId = getEskaModelId();

		String eskaModelId = atmcYakeenMakeModelCacheModel.eskaModelId;

		if ((eskaModelId != null) && (eskaModelId.length() == 0)) {
			atmcYakeenMakeModelCacheModel.eskaModelId = null;
		}

		atmcYakeenMakeModelCacheModel.mapMakeModelId = getMapMakeModelId();

		String mapMakeModelId = atmcYakeenMakeModelCacheModel.mapMakeModelId;

		if ((mapMakeModelId != null) && (mapMakeModelId.length() == 0)) {
			atmcYakeenMakeModelCacheModel.mapMakeModelId = null;
		}

		atmcYakeenMakeModelCacheModel.eskaBodyTypeId = getEskaBodyTypeId();

		String eskaBodyTypeId = atmcYakeenMakeModelCacheModel.eskaBodyTypeId;

		if ((eskaBodyTypeId != null) && (eskaBodyTypeId.length() == 0)) {
			atmcYakeenMakeModelCacheModel.eskaBodyTypeId = null;
		}

		atmcYakeenMakeModelCacheModel.eskaVehNationalityId =
			getEskaVehNationalityId();

		String eskaVehNationalityId =
			atmcYakeenMakeModelCacheModel.eskaVehNationalityId;

		if ((eskaVehNationalityId != null) &&
			(eskaVehNationalityId.length() == 0)) {

			atmcYakeenMakeModelCacheModel.eskaVehNationalityId = null;
		}

		return atmcYakeenMakeModelCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<AtmcYakeenMakeModel, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(4 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<AtmcYakeenMakeModel, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AtmcYakeenMakeModel, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((AtmcYakeenMakeModel)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<AtmcYakeenMakeModel, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<AtmcYakeenMakeModel, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AtmcYakeenMakeModel, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((AtmcYakeenMakeModel)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, AtmcYakeenMakeModel>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private long _yakeenMakeId;
	private String _yakeenMakeValue;
	private String _yakeenMakeDesc;
	private String _yakeenMakeMap;
	private long _yakeenModelId;
	private String _yakeenModelArabic;
	private String _yakeenModelEnglish;
	private String _yakeenNodelMap;
	private String _yakeenModelValue;
	private String _atmcVehicleNationality;
	private String _atmcBodyType;
	private String _atmcSeatingCapacity;
	private String _mapMakeModelName;
	private String _eskaMakeId;
	private String _eskaModelId;
	private String _mapMakeModelId;
	private String _eskaBodyTypeId;
	private String _eskaVehNationalityId;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<AtmcYakeenMakeModel, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((AtmcYakeenMakeModel)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("YAKEENMAKEID", _yakeenMakeId);
		_columnOriginalValues.put("YAKEENELMMAKEVALUE", _yakeenMakeValue);
		_columnOriginalValues.put("YAKEENMAKEDESC", _yakeenMakeDesc);
		_columnOriginalValues.put("YAKEENMAKEMAP", _yakeenMakeMap);
		_columnOriginalValues.put("YAKEENMODELID", _yakeenModelId);
		_columnOriginalValues.put("YAKEENMODELARABIC", _yakeenModelArabic);
		_columnOriginalValues.put("YAKEENMODELENGLISH", _yakeenModelEnglish);
		_columnOriginalValues.put("YAKEENMODELMAP", _yakeenNodelMap);
		_columnOriginalValues.put("YAKEENELMMODELVALUE", _yakeenModelValue);
		_columnOriginalValues.put(
			"ATMCVEHICLENATIONALITY", _atmcVehicleNationality);
		_columnOriginalValues.put("ATMCBODYTYPE", _atmcBodyType);
		_columnOriginalValues.put("ATMCSEATINGCAPACITY", _atmcSeatingCapacity);
		_columnOriginalValues.put("MAPMAKEMODELNAME", _mapMakeModelName);
		_columnOriginalValues.put("ESKAMAKEID", _eskaMakeId);
		_columnOriginalValues.put("ESKAMODELID", _eskaModelId);
		_columnOriginalValues.put("MAPMAKEMODELID", _mapMakeModelId);
		_columnOriginalValues.put("ESKABODYTYPEID", _eskaBodyTypeId);
		_columnOriginalValues.put(
			"ESKAVEHNALTIONALITYID", _eskaVehNationalityId);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("YAKEENMAKEID", "yakeenMakeId");
		attributeNames.put("YAKEENELMMAKEVALUE", "yakeenMakeValue");
		attributeNames.put("YAKEENMAKEDESC", "yakeenMakeDesc");
		attributeNames.put("YAKEENMAKEMAP", "yakeenMakeMap");
		attributeNames.put("YAKEENMODELID", "yakeenModelId");
		attributeNames.put("YAKEENMODELARABIC", "yakeenModelArabic");
		attributeNames.put("YAKEENMODELENGLISH", "yakeenModelEnglish");
		attributeNames.put("YAKEENMODELMAP", "yakeenNodelMap");
		attributeNames.put("YAKEENELMMODELVALUE", "yakeenModelValue");
		attributeNames.put("ATMCVEHICLENATIONALITY", "atmcVehicleNationality");
		attributeNames.put("ATMCBODYTYPE", "atmcBodyType");
		attributeNames.put("ATMCSEATINGCAPACITY", "atmcSeatingCapacity");
		attributeNames.put("MAPMAKEMODELNAME", "mapMakeModelName");
		attributeNames.put("ESKAMAKEID", "eskaMakeId");
		attributeNames.put("ESKAMODELID", "eskaModelId");
		attributeNames.put("MAPMAKEMODELID", "mapMakeModelId");
		attributeNames.put("ESKABODYTYPEID", "eskaBodyTypeId");
		attributeNames.put("ESKAVEHNALTIONALITYID", "eskaVehNationalityId");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("YAKEENMAKEID", 1L);

		columnBitmasks.put("YAKEENELMMAKEVALUE", 2L);

		columnBitmasks.put("YAKEENMAKEDESC", 4L);

		columnBitmasks.put("YAKEENMAKEMAP", 8L);

		columnBitmasks.put("YAKEENMODELID", 16L);

		columnBitmasks.put("YAKEENMODELARABIC", 32L);

		columnBitmasks.put("YAKEENMODELENGLISH", 64L);

		columnBitmasks.put("YAKEENMODELMAP", 128L);

		columnBitmasks.put("YAKEENELMMODELVALUE", 256L);

		columnBitmasks.put("ATMCVEHICLENATIONALITY", 512L);

		columnBitmasks.put("ATMCBODYTYPE", 1024L);

		columnBitmasks.put("ATMCSEATINGCAPACITY", 2048L);

		columnBitmasks.put("MAPMAKEMODELNAME", 4096L);

		columnBitmasks.put("ESKAMAKEID", 8192L);

		columnBitmasks.put("ESKAMODELID", 16384L);

		columnBitmasks.put("MAPMAKEMODELID", 32768L);

		columnBitmasks.put("ESKABODYTYPEID", 65536L);

		columnBitmasks.put("ESKAVEHNALTIONALITYID", 131072L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private AtmcYakeenMakeModel _escapedModel;

}