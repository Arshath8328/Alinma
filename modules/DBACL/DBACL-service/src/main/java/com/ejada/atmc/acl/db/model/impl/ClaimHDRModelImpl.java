/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ejada.atmc.acl.db.model.impl;

import com.ejada.atmc.acl.db.model.ClaimHDR;
import com.ejada.atmc.acl.db.model.ClaimHDRModel;
import com.ejada.atmc.acl.db.model.ClaimHDRSoap;
import com.ejada.atmc.acl.db.service.persistence.ClaimHDRPK;

import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.ProxyUtil;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the ClaimHDR service. Represents a row in the &quot;ODS_CLAIM_HDR&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>ClaimHDRModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ClaimHDRImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ClaimHDRImpl
 * @generated
 */
@JSON(strict = true)
public class ClaimHDRModelImpl
	extends BaseModelImpl<ClaimHDR> implements ClaimHDRModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a claim hdr model instance should use the <code>ClaimHDR</code> interface instead.
	 */
	public static final String TABLE_NAME = "ODS_CLAIM_HDR";

	public static final Object[][] TABLE_COLUMNS = {
		{"ODS_POLICY_NO", Types.VARCHAR}, {"ODS_CLAIM_NO", Types.VARCHAR},
		{"ODS_CLAIM_STATUS", Types.VARCHAR}, {"ODS_IQAMA_ID", Types.VARCHAR},
		{"ODS_REPORT_TYPE", Types.VARCHAR}, {"ODS_REPORT_NO", Types.VARCHAR},
		{"ODS_ENG_PLATE_NO", Types.VARCHAR},
		{"ODS_ENG_PLATE_L1", Types.VARCHAR},
		{"ODS_ENG_PLATE_L2", Types.VARCHAR},
		{"ODS_ENG_PLATE_L3", Types.VARCHAR},
		{"ODS_ARB_PLATE_NO", Types.VARCHAR},
		{"ODS_ARB_PLATE_L1", Types.VARCHAR},
		{"ODS_ARB_PLATE_L2", Types.VARCHAR},
		{"ODS_ARB_PLATE_L3", Types.VARCHAR},
		{"ODS_NATUREOF_LOSS", Types.VARCHAR}, {"ODS_CAUSE_CODE", Types.VARCHAR},
		{"ODS_TYPEOF_CLAIM", Types.VARCHAR},
		{"ODS_CLAIM_LOSS_DT", Types.TIMESTAMP},
		{"ODS_LOSS_REMARKS", Types.VARCHAR},
		{"ODS_FAULT_PERCENT", Types.VARCHAR},
		{"ODS_LOSS_LOCATION", Types.VARCHAR},
		{"ODS_CLAIM_AMOUNT", Types.VARCHAR},
		{"ODS_CLAIM_INTM_DT", Types.TIMESTAMP},
		{"ODS_CLAIM_SETL_DT", Types.TIMESTAMP},
		{"ODS_CLAIMANT_NAME", Types.VARCHAR},
		{"ODS_DRIVER_NAME", Types.VARCHAR},
		{"ODS_CLAIMANT_PHONE", Types.VARCHAR}, {"ODS_IBAN", Types.VARCHAR},
		{"ODS_TP_DRIVER_NAME", Types.VARCHAR}, {"ODS_TP_AGE", Types.VARCHAR},
		{"ODS_TP_ID", Types.VARCHAR}, {"ODS_TP_PLATE_NO", Types.VARCHAR},
		{"ODS_TP_PLATE_L1", Types.VARCHAR}, {"ODS_TP_PLATE_L2", Types.VARCHAR},
		{"ODS_TP_PLATE_L3", Types.VARCHAR},
		{"ODS_TP_INSURANCE_CO", Types.VARCHAR},
		{"ODS_TP_MOBILE_NO", Types.VARCHAR},
		{"ODS_TP_NATIONALITY", Types.VARCHAR}, {"ODS_TP_IBAN", Types.VARCHAR},
		{"ODS_PROD_CODE", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ODS_POLICY_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_CLAIM_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_CLAIM_STATUS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_IQAMA_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_REPORT_TYPE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_REPORT_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_ENG_PLATE_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_ENG_PLATE_L1", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_ENG_PLATE_L2", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_ENG_PLATE_L3", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_ARB_PLATE_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_ARB_PLATE_L1", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_ARB_PLATE_L2", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_ARB_PLATE_L3", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_NATUREOF_LOSS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_CAUSE_CODE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_TYPEOF_CLAIM", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_CLAIM_LOSS_DT", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ODS_LOSS_REMARKS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_FAULT_PERCENT", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_LOSS_LOCATION", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_CLAIM_AMOUNT", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_CLAIM_INTM_DT", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ODS_CLAIM_SETL_DT", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ODS_CLAIMANT_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_DRIVER_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_CLAIMANT_PHONE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_IBAN", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_TP_DRIVER_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_TP_AGE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_TP_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_TP_PLATE_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_TP_PLATE_L1", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_TP_PLATE_L2", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_TP_PLATE_L3", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_TP_INSURANCE_CO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_TP_MOBILE_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_TP_NATIONALITY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_TP_IBAN", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_PROD_CODE", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table ODS_CLAIM_HDR (ODS_POLICY_NO VARCHAR(75) not null,ODS_CLAIM_NO VARCHAR(75) not null,ODS_CLAIM_STATUS VARCHAR(75) null,ODS_IQAMA_ID VARCHAR(75) null,ODS_REPORT_TYPE VARCHAR(75) null,ODS_REPORT_NO VARCHAR(75) null,ODS_ENG_PLATE_NO VARCHAR(75) null,ODS_ENG_PLATE_L1 VARCHAR(75) null,ODS_ENG_PLATE_L2 VARCHAR(75) null,ODS_ENG_PLATE_L3 VARCHAR(75) null,ODS_ARB_PLATE_NO VARCHAR(75) null,ODS_ARB_PLATE_L1 VARCHAR(75) null,ODS_ARB_PLATE_L2 VARCHAR(75) null,ODS_ARB_PLATE_L3 VARCHAR(75) null,ODS_NATUREOF_LOSS VARCHAR(75) null,ODS_CAUSE_CODE VARCHAR(75) null,ODS_TYPEOF_CLAIM VARCHAR(75) null,ODS_CLAIM_LOSS_DT DATE null,ODS_LOSS_REMARKS VARCHAR(75) null,ODS_FAULT_PERCENT VARCHAR(75) null,ODS_LOSS_LOCATION VARCHAR(75) null,ODS_CLAIM_AMOUNT VARCHAR(75) null,ODS_CLAIM_INTM_DT DATE null,ODS_CLAIM_SETL_DT DATE null,ODS_CLAIMANT_NAME VARCHAR(75) null,ODS_DRIVER_NAME VARCHAR(75) null,ODS_CLAIMANT_PHONE VARCHAR(75) null,ODS_IBAN VARCHAR(75) null,ODS_TP_DRIVER_NAME VARCHAR(75) null,ODS_TP_AGE VARCHAR(75) null,ODS_TP_ID VARCHAR(75) null,ODS_TP_PLATE_NO VARCHAR(75) null,ODS_TP_PLATE_L1 VARCHAR(75) null,ODS_TP_PLATE_L2 VARCHAR(75) null,ODS_TP_PLATE_L3 VARCHAR(75) null,ODS_TP_INSURANCE_CO VARCHAR(75) null,ODS_TP_MOBILE_NO VARCHAR(75) null,ODS_TP_NATIONALITY VARCHAR(75) null,ODS_TP_IBAN VARCHAR(75) null,ODS_PROD_CODE VARCHAR(75) null,primary key (ODS_POLICY_NO, ODS_CLAIM_NO))";

	public static final String TABLE_SQL_DROP = "drop table ODS_CLAIM_HDR";

	public static final String ORDER_BY_JPQL =
		" ORDER BY claimHDR.id.policyNo ASC, claimHDR.id.claimNo ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY ODS_CLAIM_HDR.ODS_POLICY_NO ASC, ODS_CLAIM_HDR.ODS_CLAIM_NO ASC";

	public static final String DATA_SOURCE = "extDS";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long CLAIMNO_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long IQAMAID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)
	 */
	@Deprecated
	public static final long POLICYNO_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static ClaimHDR toModel(ClaimHDRSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ClaimHDR model = new ClaimHDRImpl();

		model.setPolicyNo(soapModel.getPolicyNo());
		model.setClaimNo(soapModel.getClaimNo());
		model.setClaimStatus(soapModel.getClaimStatus());
		model.setIqamaId(soapModel.getIqamaId());
		model.setReportType(soapModel.getReportType());
		model.setReportNo(soapModel.getReportNo());
		model.setEnPlateNo(soapModel.getEnPlateNo());
		model.setEnPlateL1(soapModel.getEnPlateL1());
		model.setEnPlateL2(soapModel.getEnPlateL2());
		model.setEnPlateL3(soapModel.getEnPlateL3());
		model.setArPlateNo(soapModel.getArPlateNo());
		model.setArPlateL1(soapModel.getArPlateL1());
		model.setArPlateL2(soapModel.getArPlateL2());
		model.setArPlateL3(soapModel.getArPlateL3());
		model.setNatureOfLoss(soapModel.getNatureOfLoss());
		model.setCauseCode(soapModel.getCauseCode());
		model.setTypeOfClaim(soapModel.getTypeOfClaim());
		model.setClaimLossDate(soapModel.getClaimLossDate());
		model.setLossRemarks(soapModel.getLossRemarks());
		model.setFaultPercent(soapModel.getFaultPercent());
		model.setLossLocation(soapModel.getLossLocation());
		model.setClaimAmount(soapModel.getClaimAmount());
		model.setClaimIntmDate(soapModel.getClaimIntmDate());
		model.setClaimSetlDate(soapModel.getClaimSetlDate());
		model.setClaimantName(soapModel.getClaimantName());
		model.setDriverName(soapModel.getDriverName());
		model.setClaimantPhone(soapModel.getClaimantPhone());
		model.setIban(soapModel.getIban());
		model.setTpDriverName(soapModel.getTpDriverName());
		model.setTpAge(soapModel.getTpAge());
		model.setTpID(soapModel.getTpID());
		model.setTpPlateNo(soapModel.getTpPlateNo());
		model.setTpPlateL1(soapModel.getTpPlateL1());
		model.setTpPlateL2(soapModel.getTpPlateL2());
		model.setTpPlateL3(soapModel.getTpPlateL3());
		model.setTpInsuranceCo(soapModel.getTpInsuranceCo());
		model.setTpMobileNo(soapModel.getTpMobileNo());
		model.setTpNationality(soapModel.getTpNationality());
		model.setTpIban(soapModel.getTpIban());
		model.setProdCode(soapModel.getProdCode());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static List<ClaimHDR> toModels(ClaimHDRSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<ClaimHDR> models = new ArrayList<ClaimHDR>(soapModels.length);

		for (ClaimHDRSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public ClaimHDRModelImpl() {
	}

	@Override
	public ClaimHDRPK getPrimaryKey() {
		return new ClaimHDRPK(_policyNo, _claimNo);
	}

	@Override
	public void setPrimaryKey(ClaimHDRPK primaryKey) {
		setPolicyNo(primaryKey.policyNo);
		setClaimNo(primaryKey.claimNo);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new ClaimHDRPK(_policyNo, _claimNo);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((ClaimHDRPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return ClaimHDR.class;
	}

	@Override
	public String getModelClassName() {
		return ClaimHDR.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<ClaimHDR, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<ClaimHDR, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ClaimHDR, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((ClaimHDR)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<ClaimHDR, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<ClaimHDR, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(ClaimHDR)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<ClaimHDR, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<ClaimHDR, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, ClaimHDR>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			ClaimHDR.class.getClassLoader(), ClaimHDR.class,
			ModelWrapper.class);

		try {
			Constructor<ClaimHDR> constructor =
				(Constructor<ClaimHDR>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<ClaimHDR, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<ClaimHDR, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<ClaimHDR, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<ClaimHDR, Object>>();
		Map<String, BiConsumer<ClaimHDR, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<ClaimHDR, ?>>();

		attributeGetterFunctions.put("policyNo", ClaimHDR::getPolicyNo);
		attributeSetterBiConsumers.put(
			"policyNo", (BiConsumer<ClaimHDR, String>)ClaimHDR::setPolicyNo);
		attributeGetterFunctions.put("claimNo", ClaimHDR::getClaimNo);
		attributeSetterBiConsumers.put(
			"claimNo", (BiConsumer<ClaimHDR, String>)ClaimHDR::setClaimNo);
		attributeGetterFunctions.put("claimStatus", ClaimHDR::getClaimStatus);
		attributeSetterBiConsumers.put(
			"claimStatus",
			(BiConsumer<ClaimHDR, String>)ClaimHDR::setClaimStatus);
		attributeGetterFunctions.put("iqamaId", ClaimHDR::getIqamaId);
		attributeSetterBiConsumers.put(
			"iqamaId", (BiConsumer<ClaimHDR, String>)ClaimHDR::setIqamaId);
		attributeGetterFunctions.put("reportType", ClaimHDR::getReportType);
		attributeSetterBiConsumers.put(
			"reportType",
			(BiConsumer<ClaimHDR, String>)ClaimHDR::setReportType);
		attributeGetterFunctions.put("reportNo", ClaimHDR::getReportNo);
		attributeSetterBiConsumers.put(
			"reportNo", (BiConsumer<ClaimHDR, String>)ClaimHDR::setReportNo);
		attributeGetterFunctions.put("enPlateNo", ClaimHDR::getEnPlateNo);
		attributeSetterBiConsumers.put(
			"enPlateNo", (BiConsumer<ClaimHDR, String>)ClaimHDR::setEnPlateNo);
		attributeGetterFunctions.put("enPlateL1", ClaimHDR::getEnPlateL1);
		attributeSetterBiConsumers.put(
			"enPlateL1", (BiConsumer<ClaimHDR, String>)ClaimHDR::setEnPlateL1);
		attributeGetterFunctions.put("enPlateL2", ClaimHDR::getEnPlateL2);
		attributeSetterBiConsumers.put(
			"enPlateL2", (BiConsumer<ClaimHDR, String>)ClaimHDR::setEnPlateL2);
		attributeGetterFunctions.put("enPlateL3", ClaimHDR::getEnPlateL3);
		attributeSetterBiConsumers.put(
			"enPlateL3", (BiConsumer<ClaimHDR, String>)ClaimHDR::setEnPlateL3);
		attributeGetterFunctions.put("arPlateNo", ClaimHDR::getArPlateNo);
		attributeSetterBiConsumers.put(
			"arPlateNo", (BiConsumer<ClaimHDR, String>)ClaimHDR::setArPlateNo);
		attributeGetterFunctions.put("arPlateL1", ClaimHDR::getArPlateL1);
		attributeSetterBiConsumers.put(
			"arPlateL1", (BiConsumer<ClaimHDR, String>)ClaimHDR::setArPlateL1);
		attributeGetterFunctions.put("arPlateL2", ClaimHDR::getArPlateL2);
		attributeSetterBiConsumers.put(
			"arPlateL2", (BiConsumer<ClaimHDR, String>)ClaimHDR::setArPlateL2);
		attributeGetterFunctions.put("arPlateL3", ClaimHDR::getArPlateL3);
		attributeSetterBiConsumers.put(
			"arPlateL3", (BiConsumer<ClaimHDR, String>)ClaimHDR::setArPlateL3);
		attributeGetterFunctions.put("natureOfLoss", ClaimHDR::getNatureOfLoss);
		attributeSetterBiConsumers.put(
			"natureOfLoss",
			(BiConsumer<ClaimHDR, String>)ClaimHDR::setNatureOfLoss);
		attributeGetterFunctions.put("causeCode", ClaimHDR::getCauseCode);
		attributeSetterBiConsumers.put(
			"causeCode", (BiConsumer<ClaimHDR, String>)ClaimHDR::setCauseCode);
		attributeGetterFunctions.put("typeOfClaim", ClaimHDR::getTypeOfClaim);
		attributeSetterBiConsumers.put(
			"typeOfClaim",
			(BiConsumer<ClaimHDR, String>)ClaimHDR::setTypeOfClaim);
		attributeGetterFunctions.put(
			"claimLossDate", ClaimHDR::getClaimLossDate);
		attributeSetterBiConsumers.put(
			"claimLossDate",
			(BiConsumer<ClaimHDR, Date>)ClaimHDR::setClaimLossDate);
		attributeGetterFunctions.put("lossRemarks", ClaimHDR::getLossRemarks);
		attributeSetterBiConsumers.put(
			"lossRemarks",
			(BiConsumer<ClaimHDR, String>)ClaimHDR::setLossRemarks);
		attributeGetterFunctions.put("faultPercent", ClaimHDR::getFaultPercent);
		attributeSetterBiConsumers.put(
			"faultPercent",
			(BiConsumer<ClaimHDR, String>)ClaimHDR::setFaultPercent);
		attributeGetterFunctions.put("lossLocation", ClaimHDR::getLossLocation);
		attributeSetterBiConsumers.put(
			"lossLocation",
			(BiConsumer<ClaimHDR, String>)ClaimHDR::setLossLocation);
		attributeGetterFunctions.put("claimAmount", ClaimHDR::getClaimAmount);
		attributeSetterBiConsumers.put(
			"claimAmount",
			(BiConsumer<ClaimHDR, String>)ClaimHDR::setClaimAmount);
		attributeGetterFunctions.put(
			"claimIntmDate", ClaimHDR::getClaimIntmDate);
		attributeSetterBiConsumers.put(
			"claimIntmDate",
			(BiConsumer<ClaimHDR, Date>)ClaimHDR::setClaimIntmDate);
		attributeGetterFunctions.put(
			"claimSetlDate", ClaimHDR::getClaimSetlDate);
		attributeSetterBiConsumers.put(
			"claimSetlDate",
			(BiConsumer<ClaimHDR, Date>)ClaimHDR::setClaimSetlDate);
		attributeGetterFunctions.put("claimantName", ClaimHDR::getClaimantName);
		attributeSetterBiConsumers.put(
			"claimantName",
			(BiConsumer<ClaimHDR, String>)ClaimHDR::setClaimantName);
		attributeGetterFunctions.put("driverName", ClaimHDR::getDriverName);
		attributeSetterBiConsumers.put(
			"driverName",
			(BiConsumer<ClaimHDR, String>)ClaimHDR::setDriverName);
		attributeGetterFunctions.put(
			"claimantPhone", ClaimHDR::getClaimantPhone);
		attributeSetterBiConsumers.put(
			"claimantPhone",
			(BiConsumer<ClaimHDR, String>)ClaimHDR::setClaimantPhone);
		attributeGetterFunctions.put("iban", ClaimHDR::getIban);
		attributeSetterBiConsumers.put(
			"iban", (BiConsumer<ClaimHDR, String>)ClaimHDR::setIban);
		attributeGetterFunctions.put("tpDriverName", ClaimHDR::getTpDriverName);
		attributeSetterBiConsumers.put(
			"tpDriverName",
			(BiConsumer<ClaimHDR, String>)ClaimHDR::setTpDriverName);
		attributeGetterFunctions.put("tpAge", ClaimHDR::getTpAge);
		attributeSetterBiConsumers.put(
			"tpAge", (BiConsumer<ClaimHDR, String>)ClaimHDR::setTpAge);
		attributeGetterFunctions.put("tpID", ClaimHDR::getTpID);
		attributeSetterBiConsumers.put(
			"tpID", (BiConsumer<ClaimHDR, String>)ClaimHDR::setTpID);
		attributeGetterFunctions.put("tpPlateNo", ClaimHDR::getTpPlateNo);
		attributeSetterBiConsumers.put(
			"tpPlateNo", (BiConsumer<ClaimHDR, String>)ClaimHDR::setTpPlateNo);
		attributeGetterFunctions.put("tpPlateL1", ClaimHDR::getTpPlateL1);
		attributeSetterBiConsumers.put(
			"tpPlateL1", (BiConsumer<ClaimHDR, String>)ClaimHDR::setTpPlateL1);
		attributeGetterFunctions.put("tpPlateL2", ClaimHDR::getTpPlateL2);
		attributeSetterBiConsumers.put(
			"tpPlateL2", (BiConsumer<ClaimHDR, String>)ClaimHDR::setTpPlateL2);
		attributeGetterFunctions.put("tpPlateL3", ClaimHDR::getTpPlateL3);
		attributeSetterBiConsumers.put(
			"tpPlateL3", (BiConsumer<ClaimHDR, String>)ClaimHDR::setTpPlateL3);
		attributeGetterFunctions.put(
			"tpInsuranceCo", ClaimHDR::getTpInsuranceCo);
		attributeSetterBiConsumers.put(
			"tpInsuranceCo",
			(BiConsumer<ClaimHDR, String>)ClaimHDR::setTpInsuranceCo);
		attributeGetterFunctions.put("tpMobileNo", ClaimHDR::getTpMobileNo);
		attributeSetterBiConsumers.put(
			"tpMobileNo",
			(BiConsumer<ClaimHDR, String>)ClaimHDR::setTpMobileNo);
		attributeGetterFunctions.put(
			"tpNationality", ClaimHDR::getTpNationality);
		attributeSetterBiConsumers.put(
			"tpNationality",
			(BiConsumer<ClaimHDR, String>)ClaimHDR::setTpNationality);
		attributeGetterFunctions.put("tpIban", ClaimHDR::getTpIban);
		attributeSetterBiConsumers.put(
			"tpIban", (BiConsumer<ClaimHDR, String>)ClaimHDR::setTpIban);
		attributeGetterFunctions.put("prodCode", ClaimHDR::getProdCode);
		attributeSetterBiConsumers.put(
			"prodCode", (BiConsumer<ClaimHDR, String>)ClaimHDR::setProdCode);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getPolicyNo() {
		if (_policyNo == null) {
			return "";
		}
		else {
			return _policyNo;
		}
	}

	@Override
	public void setPolicyNo(String policyNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_policyNo = policyNo;
	}

	@JSON
	@Override
	public String getClaimNo() {
		if (_claimNo == null) {
			return "";
		}
		else {
			return _claimNo;
		}
	}

	@Override
	public void setClaimNo(String claimNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_claimNo = claimNo;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalClaimNo() {
		return getColumnOriginalValue("ODS_CLAIM_NO");
	}

	@JSON
	@Override
	public String getClaimStatus() {
		if (_claimStatus == null) {
			return "";
		}
		else {
			return _claimStatus;
		}
	}

	@Override
	public void setClaimStatus(String claimStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_claimStatus = claimStatus;
	}

	@JSON
	@Override
	public String getIqamaId() {
		if (_iqamaId == null) {
			return "";
		}
		else {
			return _iqamaId;
		}
	}

	@Override
	public void setIqamaId(String iqamaId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_iqamaId = iqamaId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalIqamaId() {
		return getColumnOriginalValue("ODS_IQAMA_ID");
	}

	@JSON
	@Override
	public String getReportType() {
		if (_reportType == null) {
			return "";
		}
		else {
			return _reportType;
		}
	}

	@Override
	public void setReportType(String reportType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_reportType = reportType;
	}

	@JSON
	@Override
	public String getReportNo() {
		if (_reportNo == null) {
			return "";
		}
		else {
			return _reportNo;
		}
	}

	@Override
	public void setReportNo(String reportNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_reportNo = reportNo;
	}

	@JSON
	@Override
	public String getEnPlateNo() {
		if (_enPlateNo == null) {
			return "";
		}
		else {
			return _enPlateNo;
		}
	}

	@Override
	public void setEnPlateNo(String enPlateNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_enPlateNo = enPlateNo;
	}

	@JSON
	@Override
	public String getEnPlateL1() {
		if (_enPlateL1 == null) {
			return "";
		}
		else {
			return _enPlateL1;
		}
	}

	@Override
	public void setEnPlateL1(String enPlateL1) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_enPlateL1 = enPlateL1;
	}

	@JSON
	@Override
	public String getEnPlateL2() {
		if (_enPlateL2 == null) {
			return "";
		}
		else {
			return _enPlateL2;
		}
	}

	@Override
	public void setEnPlateL2(String enPlateL2) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_enPlateL2 = enPlateL2;
	}

	@JSON
	@Override
	public String getEnPlateL3() {
		if (_enPlateL3 == null) {
			return "";
		}
		else {
			return _enPlateL3;
		}
	}

	@Override
	public void setEnPlateL3(String enPlateL3) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_enPlateL3 = enPlateL3;
	}

	@JSON
	@Override
	public String getArPlateNo() {
		if (_arPlateNo == null) {
			return "";
		}
		else {
			return _arPlateNo;
		}
	}

	@Override
	public void setArPlateNo(String arPlateNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_arPlateNo = arPlateNo;
	}

	@JSON
	@Override
	public String getArPlateL1() {
		if (_arPlateL1 == null) {
			return "";
		}
		else {
			return _arPlateL1;
		}
	}

	@Override
	public void setArPlateL1(String arPlateL1) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_arPlateL1 = arPlateL1;
	}

	@JSON
	@Override
	public String getArPlateL2() {
		if (_arPlateL2 == null) {
			return "";
		}
		else {
			return _arPlateL2;
		}
	}

	@Override
	public void setArPlateL2(String arPlateL2) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_arPlateL2 = arPlateL2;
	}

	@JSON
	@Override
	public String getArPlateL3() {
		if (_arPlateL3 == null) {
			return "";
		}
		else {
			return _arPlateL3;
		}
	}

	@Override
	public void setArPlateL3(String arPlateL3) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_arPlateL3 = arPlateL3;
	}

	@JSON
	@Override
	public String getNatureOfLoss() {
		if (_natureOfLoss == null) {
			return "";
		}
		else {
			return _natureOfLoss;
		}
	}

	@Override
	public void setNatureOfLoss(String natureOfLoss) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_natureOfLoss = natureOfLoss;
	}

	@JSON
	@Override
	public String getCauseCode() {
		if (_causeCode == null) {
			return "";
		}
		else {
			return _causeCode;
		}
	}

	@Override
	public void setCauseCode(String causeCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_causeCode = causeCode;
	}

	@JSON
	@Override
	public String getTypeOfClaim() {
		if (_typeOfClaim == null) {
			return "";
		}
		else {
			return _typeOfClaim;
		}
	}

	@Override
	public void setTypeOfClaim(String typeOfClaim) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_typeOfClaim = typeOfClaim;
	}

	@JSON
	@Override
	public Date getClaimLossDate() {
		return _claimLossDate;
	}

	@Override
	public void setClaimLossDate(Date claimLossDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_claimLossDate = claimLossDate;
	}

	@JSON
	@Override
	public String getLossRemarks() {
		if (_lossRemarks == null) {
			return "";
		}
		else {
			return _lossRemarks;
		}
	}

	@Override
	public void setLossRemarks(String lossRemarks) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_lossRemarks = lossRemarks;
	}

	@JSON
	@Override
	public String getFaultPercent() {
		if (_faultPercent == null) {
			return "";
		}
		else {
			return _faultPercent;
		}
	}

	@Override
	public void setFaultPercent(String faultPercent) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_faultPercent = faultPercent;
	}

	@JSON
	@Override
	public String getLossLocation() {
		if (_lossLocation == null) {
			return "";
		}
		else {
			return _lossLocation;
		}
	}

	@Override
	public void setLossLocation(String lossLocation) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_lossLocation = lossLocation;
	}

	@JSON
	@Override
	public String getClaimAmount() {
		if (_claimAmount == null) {
			return "";
		}
		else {
			return _claimAmount;
		}
	}

	@Override
	public void setClaimAmount(String claimAmount) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_claimAmount = claimAmount;
	}

	@JSON
	@Override
	public Date getClaimIntmDate() {
		return _claimIntmDate;
	}

	@Override
	public void setClaimIntmDate(Date claimIntmDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_claimIntmDate = claimIntmDate;
	}

	@JSON
	@Override
	public Date getClaimSetlDate() {
		return _claimSetlDate;
	}

	@Override
	public void setClaimSetlDate(Date claimSetlDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_claimSetlDate = claimSetlDate;
	}

	@JSON
	@Override
	public String getClaimantName() {
		if (_claimantName == null) {
			return "";
		}
		else {
			return _claimantName;
		}
	}

	@Override
	public void setClaimantName(String claimantName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_claimantName = claimantName;
	}

	@JSON
	@Override
	public String getDriverName() {
		if (_driverName == null) {
			return "";
		}
		else {
			return _driverName;
		}
	}

	@Override
	public void setDriverName(String driverName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_driverName = driverName;
	}

	@JSON
	@Override
	public String getClaimantPhone() {
		if (_claimantPhone == null) {
			return "";
		}
		else {
			return _claimantPhone;
		}
	}

	@Override
	public void setClaimantPhone(String claimantPhone) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_claimantPhone = claimantPhone;
	}

	@JSON
	@Override
	public String getIban() {
		if (_iban == null) {
			return "";
		}
		else {
			return _iban;
		}
	}

	@Override
	public void setIban(String iban) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_iban = iban;
	}

	@JSON
	@Override
	public String getTpDriverName() {
		if (_tpDriverName == null) {
			return "";
		}
		else {
			return _tpDriverName;
		}
	}

	@Override
	public void setTpDriverName(String tpDriverName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tpDriverName = tpDriverName;
	}

	@JSON
	@Override
	public String getTpAge() {
		if (_tpAge == null) {
			return "";
		}
		else {
			return _tpAge;
		}
	}

	@Override
	public void setTpAge(String tpAge) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tpAge = tpAge;
	}

	@JSON
	@Override
	public String getTpID() {
		if (_tpID == null) {
			return "";
		}
		else {
			return _tpID;
		}
	}

	@Override
	public void setTpID(String tpID) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tpID = tpID;
	}

	@JSON
	@Override
	public String getTpPlateNo() {
		if (_tpPlateNo == null) {
			return "";
		}
		else {
			return _tpPlateNo;
		}
	}

	@Override
	public void setTpPlateNo(String tpPlateNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tpPlateNo = tpPlateNo;
	}

	@JSON
	@Override
	public String getTpPlateL1() {
		if (_tpPlateL1 == null) {
			return "";
		}
		else {
			return _tpPlateL1;
		}
	}

	@Override
	public void setTpPlateL1(String tpPlateL1) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tpPlateL1 = tpPlateL1;
	}

	@JSON
	@Override
	public String getTpPlateL2() {
		if (_tpPlateL2 == null) {
			return "";
		}
		else {
			return _tpPlateL2;
		}
	}

	@Override
	public void setTpPlateL2(String tpPlateL2) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tpPlateL2 = tpPlateL2;
	}

	@JSON
	@Override
	public String getTpPlateL3() {
		if (_tpPlateL3 == null) {
			return "";
		}
		else {
			return _tpPlateL3;
		}
	}

	@Override
	public void setTpPlateL3(String tpPlateL3) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tpPlateL3 = tpPlateL3;
	}

	@JSON
	@Override
	public String getTpInsuranceCo() {
		if (_tpInsuranceCo == null) {
			return "";
		}
		else {
			return _tpInsuranceCo;
		}
	}

	@Override
	public void setTpInsuranceCo(String tpInsuranceCo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tpInsuranceCo = tpInsuranceCo;
	}

	@JSON
	@Override
	public String getTpMobileNo() {
		if (_tpMobileNo == null) {
			return "";
		}
		else {
			return _tpMobileNo;
		}
	}

	@Override
	public void setTpMobileNo(String tpMobileNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tpMobileNo = tpMobileNo;
	}

	@JSON
	@Override
	public String getTpNationality() {
		if (_tpNationality == null) {
			return "";
		}
		else {
			return _tpNationality;
		}
	}

	@Override
	public void setTpNationality(String tpNationality) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tpNationality = tpNationality;
	}

	@JSON
	@Override
	public String getTpIban() {
		if (_tpIban == null) {
			return "";
		}
		else {
			return _tpIban;
		}
	}

	@Override
	public void setTpIban(String tpIban) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tpIban = tpIban;
	}

	@JSON
	@Override
	public String getProdCode() {
		if (_prodCode == null) {
			return "";
		}
		else {
			return _prodCode;
		}
	}

	@Override
	public void setProdCode(String prodCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_prodCode = prodCode;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (entry.getValue() != getColumnValue(entry.getKey())) {
				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ClaimHDR toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, ClaimHDR>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ClaimHDRImpl claimHDRImpl = new ClaimHDRImpl();

		claimHDRImpl.setPolicyNo(getPolicyNo());
		claimHDRImpl.setClaimNo(getClaimNo());
		claimHDRImpl.setClaimStatus(getClaimStatus());
		claimHDRImpl.setIqamaId(getIqamaId());
		claimHDRImpl.setReportType(getReportType());
		claimHDRImpl.setReportNo(getReportNo());
		claimHDRImpl.setEnPlateNo(getEnPlateNo());
		claimHDRImpl.setEnPlateL1(getEnPlateL1());
		claimHDRImpl.setEnPlateL2(getEnPlateL2());
		claimHDRImpl.setEnPlateL3(getEnPlateL3());
		claimHDRImpl.setArPlateNo(getArPlateNo());
		claimHDRImpl.setArPlateL1(getArPlateL1());
		claimHDRImpl.setArPlateL2(getArPlateL2());
		claimHDRImpl.setArPlateL3(getArPlateL3());
		claimHDRImpl.setNatureOfLoss(getNatureOfLoss());
		claimHDRImpl.setCauseCode(getCauseCode());
		claimHDRImpl.setTypeOfClaim(getTypeOfClaim());
		claimHDRImpl.setClaimLossDate(getClaimLossDate());
		claimHDRImpl.setLossRemarks(getLossRemarks());
		claimHDRImpl.setFaultPercent(getFaultPercent());
		claimHDRImpl.setLossLocation(getLossLocation());
		claimHDRImpl.setClaimAmount(getClaimAmount());
		claimHDRImpl.setClaimIntmDate(getClaimIntmDate());
		claimHDRImpl.setClaimSetlDate(getClaimSetlDate());
		claimHDRImpl.setClaimantName(getClaimantName());
		claimHDRImpl.setDriverName(getDriverName());
		claimHDRImpl.setClaimantPhone(getClaimantPhone());
		claimHDRImpl.setIban(getIban());
		claimHDRImpl.setTpDriverName(getTpDriverName());
		claimHDRImpl.setTpAge(getTpAge());
		claimHDRImpl.setTpID(getTpID());
		claimHDRImpl.setTpPlateNo(getTpPlateNo());
		claimHDRImpl.setTpPlateL1(getTpPlateL1());
		claimHDRImpl.setTpPlateL2(getTpPlateL2());
		claimHDRImpl.setTpPlateL3(getTpPlateL3());
		claimHDRImpl.setTpInsuranceCo(getTpInsuranceCo());
		claimHDRImpl.setTpMobileNo(getTpMobileNo());
		claimHDRImpl.setTpNationality(getTpNationality());
		claimHDRImpl.setTpIban(getTpIban());
		claimHDRImpl.setProdCode(getProdCode());

		claimHDRImpl.resetOriginalValues();

		return claimHDRImpl;
	}

	@Override
	public int compareTo(ClaimHDR claimHDR) {
		ClaimHDRPK primaryKey = claimHDR.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof ClaimHDR)) {
			return false;
		}

		ClaimHDR claimHDR = (ClaimHDR)object;

		ClaimHDRPK primaryKey = claimHDR.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<ClaimHDR> toCacheModel() {
		ClaimHDRCacheModel claimHDRCacheModel = new ClaimHDRCacheModel();

		claimHDRCacheModel.claimHDRPK = getPrimaryKey();

		claimHDRCacheModel.policyNo = getPolicyNo();

		String policyNo = claimHDRCacheModel.policyNo;

		if ((policyNo != null) && (policyNo.length() == 0)) {
			claimHDRCacheModel.policyNo = null;
		}

		claimHDRCacheModel.claimNo = getClaimNo();

		String claimNo = claimHDRCacheModel.claimNo;

		if ((claimNo != null) && (claimNo.length() == 0)) {
			claimHDRCacheModel.claimNo = null;
		}

		claimHDRCacheModel.claimStatus = getClaimStatus();

		String claimStatus = claimHDRCacheModel.claimStatus;

		if ((claimStatus != null) && (claimStatus.length() == 0)) {
			claimHDRCacheModel.claimStatus = null;
		}

		claimHDRCacheModel.iqamaId = getIqamaId();

		String iqamaId = claimHDRCacheModel.iqamaId;

		if ((iqamaId != null) && (iqamaId.length() == 0)) {
			claimHDRCacheModel.iqamaId = null;
		}

		claimHDRCacheModel.reportType = getReportType();

		String reportType = claimHDRCacheModel.reportType;

		if ((reportType != null) && (reportType.length() == 0)) {
			claimHDRCacheModel.reportType = null;
		}

		claimHDRCacheModel.reportNo = getReportNo();

		String reportNo = claimHDRCacheModel.reportNo;

		if ((reportNo != null) && (reportNo.length() == 0)) {
			claimHDRCacheModel.reportNo = null;
		}

		claimHDRCacheModel.enPlateNo = getEnPlateNo();

		String enPlateNo = claimHDRCacheModel.enPlateNo;

		if ((enPlateNo != null) && (enPlateNo.length() == 0)) {
			claimHDRCacheModel.enPlateNo = null;
		}

		claimHDRCacheModel.enPlateL1 = getEnPlateL1();

		String enPlateL1 = claimHDRCacheModel.enPlateL1;

		if ((enPlateL1 != null) && (enPlateL1.length() == 0)) {
			claimHDRCacheModel.enPlateL1 = null;
		}

		claimHDRCacheModel.enPlateL2 = getEnPlateL2();

		String enPlateL2 = claimHDRCacheModel.enPlateL2;

		if ((enPlateL2 != null) && (enPlateL2.length() == 0)) {
			claimHDRCacheModel.enPlateL2 = null;
		}

		claimHDRCacheModel.enPlateL3 = getEnPlateL3();

		String enPlateL3 = claimHDRCacheModel.enPlateL3;

		if ((enPlateL3 != null) && (enPlateL3.length() == 0)) {
			claimHDRCacheModel.enPlateL3 = null;
		}

		claimHDRCacheModel.arPlateNo = getArPlateNo();

		String arPlateNo = claimHDRCacheModel.arPlateNo;

		if ((arPlateNo != null) && (arPlateNo.length() == 0)) {
			claimHDRCacheModel.arPlateNo = null;
		}

		claimHDRCacheModel.arPlateL1 = getArPlateL1();

		String arPlateL1 = claimHDRCacheModel.arPlateL1;

		if ((arPlateL1 != null) && (arPlateL1.length() == 0)) {
			claimHDRCacheModel.arPlateL1 = null;
		}

		claimHDRCacheModel.arPlateL2 = getArPlateL2();

		String arPlateL2 = claimHDRCacheModel.arPlateL2;

		if ((arPlateL2 != null) && (arPlateL2.length() == 0)) {
			claimHDRCacheModel.arPlateL2 = null;
		}

		claimHDRCacheModel.arPlateL3 = getArPlateL3();

		String arPlateL3 = claimHDRCacheModel.arPlateL3;

		if ((arPlateL3 != null) && (arPlateL3.length() == 0)) {
			claimHDRCacheModel.arPlateL3 = null;
		}

		claimHDRCacheModel.natureOfLoss = getNatureOfLoss();

		String natureOfLoss = claimHDRCacheModel.natureOfLoss;

		if ((natureOfLoss != null) && (natureOfLoss.length() == 0)) {
			claimHDRCacheModel.natureOfLoss = null;
		}

		claimHDRCacheModel.causeCode = getCauseCode();

		String causeCode = claimHDRCacheModel.causeCode;

		if ((causeCode != null) && (causeCode.length() == 0)) {
			claimHDRCacheModel.causeCode = null;
		}

		claimHDRCacheModel.typeOfClaim = getTypeOfClaim();

		String typeOfClaim = claimHDRCacheModel.typeOfClaim;

		if ((typeOfClaim != null) && (typeOfClaim.length() == 0)) {
			claimHDRCacheModel.typeOfClaim = null;
		}

		Date claimLossDate = getClaimLossDate();

		if (claimLossDate != null) {
			claimHDRCacheModel.claimLossDate = claimLossDate.getTime();
		}
		else {
			claimHDRCacheModel.claimLossDate = Long.MIN_VALUE;
		}

		claimHDRCacheModel.lossRemarks = getLossRemarks();

		String lossRemarks = claimHDRCacheModel.lossRemarks;

		if ((lossRemarks != null) && (lossRemarks.length() == 0)) {
			claimHDRCacheModel.lossRemarks = null;
		}

		claimHDRCacheModel.faultPercent = getFaultPercent();

		String faultPercent = claimHDRCacheModel.faultPercent;

		if ((faultPercent != null) && (faultPercent.length() == 0)) {
			claimHDRCacheModel.faultPercent = null;
		}

		claimHDRCacheModel.lossLocation = getLossLocation();

		String lossLocation = claimHDRCacheModel.lossLocation;

		if ((lossLocation != null) && (lossLocation.length() == 0)) {
			claimHDRCacheModel.lossLocation = null;
		}

		claimHDRCacheModel.claimAmount = getClaimAmount();

		String claimAmount = claimHDRCacheModel.claimAmount;

		if ((claimAmount != null) && (claimAmount.length() == 0)) {
			claimHDRCacheModel.claimAmount = null;
		}

		Date claimIntmDate = getClaimIntmDate();

		if (claimIntmDate != null) {
			claimHDRCacheModel.claimIntmDate = claimIntmDate.getTime();
		}
		else {
			claimHDRCacheModel.claimIntmDate = Long.MIN_VALUE;
		}

		Date claimSetlDate = getClaimSetlDate();

		if (claimSetlDate != null) {
			claimHDRCacheModel.claimSetlDate = claimSetlDate.getTime();
		}
		else {
			claimHDRCacheModel.claimSetlDate = Long.MIN_VALUE;
		}

		claimHDRCacheModel.claimantName = getClaimantName();

		String claimantName = claimHDRCacheModel.claimantName;

		if ((claimantName != null) && (claimantName.length() == 0)) {
			claimHDRCacheModel.claimantName = null;
		}

		claimHDRCacheModel.driverName = getDriverName();

		String driverName = claimHDRCacheModel.driverName;

		if ((driverName != null) && (driverName.length() == 0)) {
			claimHDRCacheModel.driverName = null;
		}

		claimHDRCacheModel.claimantPhone = getClaimantPhone();

		String claimantPhone = claimHDRCacheModel.claimantPhone;

		if ((claimantPhone != null) && (claimantPhone.length() == 0)) {
			claimHDRCacheModel.claimantPhone = null;
		}

		claimHDRCacheModel.iban = getIban();

		String iban = claimHDRCacheModel.iban;

		if ((iban != null) && (iban.length() == 0)) {
			claimHDRCacheModel.iban = null;
		}

		claimHDRCacheModel.tpDriverName = getTpDriverName();

		String tpDriverName = claimHDRCacheModel.tpDriverName;

		if ((tpDriverName != null) && (tpDriverName.length() == 0)) {
			claimHDRCacheModel.tpDriverName = null;
		}

		claimHDRCacheModel.tpAge = getTpAge();

		String tpAge = claimHDRCacheModel.tpAge;

		if ((tpAge != null) && (tpAge.length() == 0)) {
			claimHDRCacheModel.tpAge = null;
		}

		claimHDRCacheModel.tpID = getTpID();

		String tpID = claimHDRCacheModel.tpID;

		if ((tpID != null) && (tpID.length() == 0)) {
			claimHDRCacheModel.tpID = null;
		}

		claimHDRCacheModel.tpPlateNo = getTpPlateNo();

		String tpPlateNo = claimHDRCacheModel.tpPlateNo;

		if ((tpPlateNo != null) && (tpPlateNo.length() == 0)) {
			claimHDRCacheModel.tpPlateNo = null;
		}

		claimHDRCacheModel.tpPlateL1 = getTpPlateL1();

		String tpPlateL1 = claimHDRCacheModel.tpPlateL1;

		if ((tpPlateL1 != null) && (tpPlateL1.length() == 0)) {
			claimHDRCacheModel.tpPlateL1 = null;
		}

		claimHDRCacheModel.tpPlateL2 = getTpPlateL2();

		String tpPlateL2 = claimHDRCacheModel.tpPlateL2;

		if ((tpPlateL2 != null) && (tpPlateL2.length() == 0)) {
			claimHDRCacheModel.tpPlateL2 = null;
		}

		claimHDRCacheModel.tpPlateL3 = getTpPlateL3();

		String tpPlateL3 = claimHDRCacheModel.tpPlateL3;

		if ((tpPlateL3 != null) && (tpPlateL3.length() == 0)) {
			claimHDRCacheModel.tpPlateL3 = null;
		}

		claimHDRCacheModel.tpInsuranceCo = getTpInsuranceCo();

		String tpInsuranceCo = claimHDRCacheModel.tpInsuranceCo;

		if ((tpInsuranceCo != null) && (tpInsuranceCo.length() == 0)) {
			claimHDRCacheModel.tpInsuranceCo = null;
		}

		claimHDRCacheModel.tpMobileNo = getTpMobileNo();

		String tpMobileNo = claimHDRCacheModel.tpMobileNo;

		if ((tpMobileNo != null) && (tpMobileNo.length() == 0)) {
			claimHDRCacheModel.tpMobileNo = null;
		}

		claimHDRCacheModel.tpNationality = getTpNationality();

		String tpNationality = claimHDRCacheModel.tpNationality;

		if ((tpNationality != null) && (tpNationality.length() == 0)) {
			claimHDRCacheModel.tpNationality = null;
		}

		claimHDRCacheModel.tpIban = getTpIban();

		String tpIban = claimHDRCacheModel.tpIban;

		if ((tpIban != null) && (tpIban.length() == 0)) {
			claimHDRCacheModel.tpIban = null;
		}

		claimHDRCacheModel.prodCode = getProdCode();

		String prodCode = claimHDRCacheModel.prodCode;

		if ((prodCode != null) && (prodCode.length() == 0)) {
			claimHDRCacheModel.prodCode = null;
		}

		return claimHDRCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<ClaimHDR, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(4 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<ClaimHDR, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ClaimHDR, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((ClaimHDR)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<ClaimHDR, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<ClaimHDR, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ClaimHDR, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((ClaimHDR)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, ClaimHDR>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private String _policyNo;
	private String _claimNo;
	private String _claimStatus;
	private String _iqamaId;
	private String _reportType;
	private String _reportNo;
	private String _enPlateNo;
	private String _enPlateL1;
	private String _enPlateL2;
	private String _enPlateL3;
	private String _arPlateNo;
	private String _arPlateL1;
	private String _arPlateL2;
	private String _arPlateL3;
	private String _natureOfLoss;
	private String _causeCode;
	private String _typeOfClaim;
	private Date _claimLossDate;
	private String _lossRemarks;
	private String _faultPercent;
	private String _lossLocation;
	private String _claimAmount;
	private Date _claimIntmDate;
	private Date _claimSetlDate;
	private String _claimantName;
	private String _driverName;
	private String _claimantPhone;
	private String _iban;
	private String _tpDriverName;
	private String _tpAge;
	private String _tpID;
	private String _tpPlateNo;
	private String _tpPlateL1;
	private String _tpPlateL2;
	private String _tpPlateL3;
	private String _tpInsuranceCo;
	private String _tpMobileNo;
	private String _tpNationality;
	private String _tpIban;
	private String _prodCode;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<ClaimHDR, Object> function = _attributeGetterFunctions.get(
			columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((ClaimHDR)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("ODS_POLICY_NO", _policyNo);
		_columnOriginalValues.put("ODS_CLAIM_NO", _claimNo);
		_columnOriginalValues.put("ODS_CLAIM_STATUS", _claimStatus);
		_columnOriginalValues.put("ODS_IQAMA_ID", _iqamaId);
		_columnOriginalValues.put("ODS_REPORT_TYPE", _reportType);
		_columnOriginalValues.put("ODS_REPORT_NO", _reportNo);
		_columnOriginalValues.put("ODS_ENG_PLATE_NO", _enPlateNo);
		_columnOriginalValues.put("ODS_ENG_PLATE_L1", _enPlateL1);
		_columnOriginalValues.put("ODS_ENG_PLATE_L2", _enPlateL2);
		_columnOriginalValues.put("ODS_ENG_PLATE_L3", _enPlateL3);
		_columnOriginalValues.put("ODS_ARB_PLATE_NO", _arPlateNo);
		_columnOriginalValues.put("ODS_ARB_PLATE_L1", _arPlateL1);
		_columnOriginalValues.put("ODS_ARB_PLATE_L2", _arPlateL2);
		_columnOriginalValues.put("ODS_ARB_PLATE_L3", _arPlateL3);
		_columnOriginalValues.put("ODS_NATUREOF_LOSS", _natureOfLoss);
		_columnOriginalValues.put("ODS_CAUSE_CODE", _causeCode);
		_columnOriginalValues.put("ODS_TYPEOF_CLAIM", _typeOfClaim);
		_columnOriginalValues.put("ODS_CLAIM_LOSS_DT", _claimLossDate);
		_columnOriginalValues.put("ODS_LOSS_REMARKS", _lossRemarks);
		_columnOriginalValues.put("ODS_FAULT_PERCENT", _faultPercent);
		_columnOriginalValues.put("ODS_LOSS_LOCATION", _lossLocation);
		_columnOriginalValues.put("ODS_CLAIM_AMOUNT", _claimAmount);
		_columnOriginalValues.put("ODS_CLAIM_INTM_DT", _claimIntmDate);
		_columnOriginalValues.put("ODS_CLAIM_SETL_DT", _claimSetlDate);
		_columnOriginalValues.put("ODS_CLAIMANT_NAME", _claimantName);
		_columnOriginalValues.put("ODS_DRIVER_NAME", _driverName);
		_columnOriginalValues.put("ODS_CLAIMANT_PHONE", _claimantPhone);
		_columnOriginalValues.put("ODS_IBAN", _iban);
		_columnOriginalValues.put("ODS_TP_DRIVER_NAME", _tpDriverName);
		_columnOriginalValues.put("ODS_TP_AGE", _tpAge);
		_columnOriginalValues.put("ODS_TP_ID", _tpID);
		_columnOriginalValues.put("ODS_TP_PLATE_NO", _tpPlateNo);
		_columnOriginalValues.put("ODS_TP_PLATE_L1", _tpPlateL1);
		_columnOriginalValues.put("ODS_TP_PLATE_L2", _tpPlateL2);
		_columnOriginalValues.put("ODS_TP_PLATE_L3", _tpPlateL3);
		_columnOriginalValues.put("ODS_TP_INSURANCE_CO", _tpInsuranceCo);
		_columnOriginalValues.put("ODS_TP_MOBILE_NO", _tpMobileNo);
		_columnOriginalValues.put("ODS_TP_NATIONALITY", _tpNationality);
		_columnOriginalValues.put("ODS_TP_IBAN", _tpIban);
		_columnOriginalValues.put("ODS_PROD_CODE", _prodCode);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("ODS_POLICY_NO", "policyNo");
		attributeNames.put("ODS_CLAIM_NO", "claimNo");
		attributeNames.put("ODS_CLAIM_STATUS", "claimStatus");
		attributeNames.put("ODS_IQAMA_ID", "iqamaId");
		attributeNames.put("ODS_REPORT_TYPE", "reportType");
		attributeNames.put("ODS_REPORT_NO", "reportNo");
		attributeNames.put("ODS_ENG_PLATE_NO", "enPlateNo");
		attributeNames.put("ODS_ENG_PLATE_L1", "enPlateL1");
		attributeNames.put("ODS_ENG_PLATE_L2", "enPlateL2");
		attributeNames.put("ODS_ENG_PLATE_L3", "enPlateL3");
		attributeNames.put("ODS_ARB_PLATE_NO", "arPlateNo");
		attributeNames.put("ODS_ARB_PLATE_L1", "arPlateL1");
		attributeNames.put("ODS_ARB_PLATE_L2", "arPlateL2");
		attributeNames.put("ODS_ARB_PLATE_L3", "arPlateL3");
		attributeNames.put("ODS_NATUREOF_LOSS", "natureOfLoss");
		attributeNames.put("ODS_CAUSE_CODE", "causeCode");
		attributeNames.put("ODS_TYPEOF_CLAIM", "typeOfClaim");
		attributeNames.put("ODS_CLAIM_LOSS_DT", "claimLossDate");
		attributeNames.put("ODS_LOSS_REMARKS", "lossRemarks");
		attributeNames.put("ODS_FAULT_PERCENT", "faultPercent");
		attributeNames.put("ODS_LOSS_LOCATION", "lossLocation");
		attributeNames.put("ODS_CLAIM_AMOUNT", "claimAmount");
		attributeNames.put("ODS_CLAIM_INTM_DT", "claimIntmDate");
		attributeNames.put("ODS_CLAIM_SETL_DT", "claimSetlDate");
		attributeNames.put("ODS_CLAIMANT_NAME", "claimantName");
		attributeNames.put("ODS_DRIVER_NAME", "driverName");
		attributeNames.put("ODS_CLAIMANT_PHONE", "claimantPhone");
		attributeNames.put("ODS_IBAN", "iban");
		attributeNames.put("ODS_TP_DRIVER_NAME", "tpDriverName");
		attributeNames.put("ODS_TP_AGE", "tpAge");
		attributeNames.put("ODS_TP_ID", "tpID");
		attributeNames.put("ODS_TP_PLATE_NO", "tpPlateNo");
		attributeNames.put("ODS_TP_PLATE_L1", "tpPlateL1");
		attributeNames.put("ODS_TP_PLATE_L2", "tpPlateL2");
		attributeNames.put("ODS_TP_PLATE_L3", "tpPlateL3");
		attributeNames.put("ODS_TP_INSURANCE_CO", "tpInsuranceCo");
		attributeNames.put("ODS_TP_MOBILE_NO", "tpMobileNo");
		attributeNames.put("ODS_TP_NATIONALITY", "tpNationality");
		attributeNames.put("ODS_TP_IBAN", "tpIban");
		attributeNames.put("ODS_PROD_CODE", "prodCode");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("ODS_POLICY_NO", 1L);

		columnBitmasks.put("ODS_CLAIM_NO", 2L);

		columnBitmasks.put("ODS_CLAIM_STATUS", 4L);

		columnBitmasks.put("ODS_IQAMA_ID", 8L);

		columnBitmasks.put("ODS_REPORT_TYPE", 16L);

		columnBitmasks.put("ODS_REPORT_NO", 32L);

		columnBitmasks.put("ODS_ENG_PLATE_NO", 64L);

		columnBitmasks.put("ODS_ENG_PLATE_L1", 128L);

		columnBitmasks.put("ODS_ENG_PLATE_L2", 256L);

		columnBitmasks.put("ODS_ENG_PLATE_L3", 512L);

		columnBitmasks.put("ODS_ARB_PLATE_NO", 1024L);

		columnBitmasks.put("ODS_ARB_PLATE_L1", 2048L);

		columnBitmasks.put("ODS_ARB_PLATE_L2", 4096L);

		columnBitmasks.put("ODS_ARB_PLATE_L3", 8192L);

		columnBitmasks.put("ODS_NATUREOF_LOSS", 16384L);

		columnBitmasks.put("ODS_CAUSE_CODE", 32768L);

		columnBitmasks.put("ODS_TYPEOF_CLAIM", 65536L);

		columnBitmasks.put("ODS_CLAIM_LOSS_DT", 131072L);

		columnBitmasks.put("ODS_LOSS_REMARKS", 262144L);

		columnBitmasks.put("ODS_FAULT_PERCENT", 524288L);

		columnBitmasks.put("ODS_LOSS_LOCATION", 1048576L);

		columnBitmasks.put("ODS_CLAIM_AMOUNT", 2097152L);

		columnBitmasks.put("ODS_CLAIM_INTM_DT", 4194304L);

		columnBitmasks.put("ODS_CLAIM_SETL_DT", 8388608L);

		columnBitmasks.put("ODS_CLAIMANT_NAME", 16777216L);

		columnBitmasks.put("ODS_DRIVER_NAME", 33554432L);

		columnBitmasks.put("ODS_CLAIMANT_PHONE", 67108864L);

		columnBitmasks.put("ODS_IBAN", 134217728L);

		columnBitmasks.put("ODS_TP_DRIVER_NAME", 268435456L);

		columnBitmasks.put("ODS_TP_AGE", 536870912L);

		columnBitmasks.put("ODS_TP_ID", 1073741824L);

		columnBitmasks.put("ODS_TP_PLATE_NO", 2147483648L);

		columnBitmasks.put("ODS_TP_PLATE_L1", 4294967296L);

		columnBitmasks.put("ODS_TP_PLATE_L2", 8589934592L);

		columnBitmasks.put("ODS_TP_PLATE_L3", 17179869184L);

		columnBitmasks.put("ODS_TP_INSURANCE_CO", 34359738368L);

		columnBitmasks.put("ODS_TP_MOBILE_NO", 68719476736L);

		columnBitmasks.put("ODS_TP_NATIONALITY", 137438953472L);

		columnBitmasks.put("ODS_TP_IBAN", 274877906944L);

		columnBitmasks.put("ODS_PROD_CODE", 549755813888L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private ClaimHDR _escapedModel;

}