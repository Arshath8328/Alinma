/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ejada.atmc.acl.db.model.impl;

import com.ejada.atmc.acl.db.model.WorkshopVehicle;
import com.ejada.atmc.acl.db.model.WorkshopVehicleModel;
import com.ejada.atmc.acl.db.model.WorkshopVehicleSoap;

import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the WorkshopVehicle service. Represents a row in the &quot;EJD_WORKSHOP_VEHICLE&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>WorkshopVehicleModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link WorkshopVehicleImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see WorkshopVehicleImpl
 * @generated
 */
@JSON(strict = true)
public class WorkshopVehicleModelImpl
	extends BaseModelImpl<WorkshopVehicle> implements WorkshopVehicleModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a workshop vehicle model instance should use the <code>WorkshopVehicle</code> interface instead.
	 */
	public static final String TABLE_NAME = "EJD_WORKSHOP_VEHICLE";

	public static final Object[][] TABLE_COLUMNS = {
		{"ID", Types.INTEGER}, {"CUSTOMER_NAME", Types.VARCHAR},
		{"MANUFACTURE", Types.VARCHAR}, {"PLATE_NO", Types.VARCHAR},
		{"WORKSHOP_ID", Types.INTEGER}, {"CLAIM_REFERENCE_NO", Types.VARCHAR},
		{"STATUS", Types.VARCHAR}, {"CLAIM_DATE", Types.TIMESTAMP},
		{"SERVICE_TYPE", Types.VARCHAR}, {"DESCRIPTION", Types.VARCHAR},
		{"CUSTOMER_MOBILE", Types.VARCHAR}, {"VEHICLE_MAKE_EN", Types.VARCHAR},
		{"VEHICLE_MAKE_AR", Types.VARCHAR}, {"VEHICLE_MODEL_EN", Types.VARCHAR},
		{"VEHICLE_MODEL_AR", Types.VARCHAR},
		{"CUSTOMER_IQAMA_ID", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CUSTOMER_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MANUFACTURE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PLATE_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("WORKSHOP_ID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CLAIM_REFERENCE_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("STATUS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CLAIM_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("SERVICE_TYPE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("DESCRIPTION", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CUSTOMER_MOBILE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("VEHICLE_MAKE_EN", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("VEHICLE_MAKE_AR", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("VEHICLE_MODEL_EN", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("VEHICLE_MODEL_AR", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CUSTOMER_IQAMA_ID", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table EJD_WORKSHOP_VEHICLE (ID INTEGER not null primary key,CUSTOMER_NAME VARCHAR(75) null,MANUFACTURE VARCHAR(75) null,PLATE_NO VARCHAR(75) null,WORKSHOP_ID INTEGER,CLAIM_REFERENCE_NO VARCHAR(75) null,STATUS VARCHAR(75) null,CLAIM_DATE DATE null,SERVICE_TYPE VARCHAR(75) null,DESCRIPTION VARCHAR(75) null,CUSTOMER_MOBILE VARCHAR(75) null,VEHICLE_MAKE_EN VARCHAR(75) null,VEHICLE_MAKE_AR VARCHAR(75) null,VEHICLE_MODEL_EN VARCHAR(75) null,VEHICLE_MODEL_AR VARCHAR(75) null,CUSTOMER_IQAMA_ID VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP =
		"drop table EJD_WORKSHOP_VEHICLE";

	public static final String ORDER_BY_JPQL =
		" ORDER BY workshopVehicle.id ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY EJD_WORKSHOP_VEHICLE.ID ASC";

	public static final String DATA_SOURCE = "extDS";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long CUSTOMERIQAMAID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long STATUS_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long WORKSHOPID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)
	 */
	@Deprecated
	public static final long ID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static WorkshopVehicle toModel(WorkshopVehicleSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		WorkshopVehicle model = new WorkshopVehicleImpl();

		model.setId(soapModel.getId());
		model.setCustomerName(soapModel.getCustomerName());
		model.setManufacture(soapModel.getManufacture());
		model.setPlateNo(soapModel.getPlateNo());
		model.setWorkshopId(soapModel.getWorkshopId());
		model.setClaimRefNo(soapModel.getClaimRefNo());
		model.setStatus(soapModel.getStatus());
		model.setDate(soapModel.getDate());
		model.setServiceType(soapModel.getServiceType());
		model.setDescription(soapModel.getDescription());
		model.setCustomerMobile(soapModel.getCustomerMobile());
		model.setVehMakeEn(soapModel.getVehMakeEn());
		model.setVehMakeAr(soapModel.getVehMakeAr());
		model.setVehModelEn(soapModel.getVehModelEn());
		model.setVehModelAr(soapModel.getVehModelAr());
		model.setCustomerIqamaId(soapModel.getCustomerIqamaId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static List<WorkshopVehicle> toModels(
		WorkshopVehicleSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<WorkshopVehicle> models = new ArrayList<WorkshopVehicle>(
			soapModels.length);

		for (WorkshopVehicleSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public WorkshopVehicleModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return WorkshopVehicle.class;
	}

	@Override
	public String getModelClassName() {
		return WorkshopVehicle.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<WorkshopVehicle, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<WorkshopVehicle, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<WorkshopVehicle, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((WorkshopVehicle)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<WorkshopVehicle, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<WorkshopVehicle, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(WorkshopVehicle)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<WorkshopVehicle, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<WorkshopVehicle, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, WorkshopVehicle>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			WorkshopVehicle.class.getClassLoader(), WorkshopVehicle.class,
			ModelWrapper.class);

		try {
			Constructor<WorkshopVehicle> constructor =
				(Constructor<WorkshopVehicle>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<WorkshopVehicle, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<WorkshopVehicle, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<WorkshopVehicle, Object>>
			attributeGetterFunctions =
				new LinkedHashMap<String, Function<WorkshopVehicle, Object>>();
		Map<String, BiConsumer<WorkshopVehicle, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<WorkshopVehicle, ?>>();

		attributeGetterFunctions.put("id", WorkshopVehicle::getId);
		attributeSetterBiConsumers.put(
			"id", (BiConsumer<WorkshopVehicle, Integer>)WorkshopVehicle::setId);
		attributeGetterFunctions.put(
			"customerName", WorkshopVehicle::getCustomerName);
		attributeSetterBiConsumers.put(
			"customerName",
			(BiConsumer<WorkshopVehicle, String>)
				WorkshopVehicle::setCustomerName);
		attributeGetterFunctions.put(
			"manufacture", WorkshopVehicle::getManufacture);
		attributeSetterBiConsumers.put(
			"manufacture",
			(BiConsumer<WorkshopVehicle, String>)
				WorkshopVehicle::setManufacture);
		attributeGetterFunctions.put("plateNo", WorkshopVehicle::getPlateNo);
		attributeSetterBiConsumers.put(
			"plateNo",
			(BiConsumer<WorkshopVehicle, String>)WorkshopVehicle::setPlateNo);
		attributeGetterFunctions.put(
			"workshopId", WorkshopVehicle::getWorkshopId);
		attributeSetterBiConsumers.put(
			"workshopId",
			(BiConsumer<WorkshopVehicle, Integer>)
				WorkshopVehicle::setWorkshopId);
		attributeGetterFunctions.put(
			"claimRefNo", WorkshopVehicle::getClaimRefNo);
		attributeSetterBiConsumers.put(
			"claimRefNo",
			(BiConsumer<WorkshopVehicle, String>)
				WorkshopVehicle::setClaimRefNo);
		attributeGetterFunctions.put("status", WorkshopVehicle::getStatus);
		attributeSetterBiConsumers.put(
			"status",
			(BiConsumer<WorkshopVehicle, String>)WorkshopVehicle::setStatus);
		attributeGetterFunctions.put("date", WorkshopVehicle::getDate);
		attributeSetterBiConsumers.put(
			"date",
			(BiConsumer<WorkshopVehicle, Date>)WorkshopVehicle::setDate);
		attributeGetterFunctions.put(
			"serviceType", WorkshopVehicle::getServiceType);
		attributeSetterBiConsumers.put(
			"serviceType",
			(BiConsumer<WorkshopVehicle, String>)
				WorkshopVehicle::setServiceType);
		attributeGetterFunctions.put(
			"description", WorkshopVehicle::getDescription);
		attributeSetterBiConsumers.put(
			"description",
			(BiConsumer<WorkshopVehicle, String>)
				WorkshopVehicle::setDescription);
		attributeGetterFunctions.put(
			"customerMobile", WorkshopVehicle::getCustomerMobile);
		attributeSetterBiConsumers.put(
			"customerMobile",
			(BiConsumer<WorkshopVehicle, String>)
				WorkshopVehicle::setCustomerMobile);
		attributeGetterFunctions.put(
			"vehMakeEn", WorkshopVehicle::getVehMakeEn);
		attributeSetterBiConsumers.put(
			"vehMakeEn",
			(BiConsumer<WorkshopVehicle, String>)WorkshopVehicle::setVehMakeEn);
		attributeGetterFunctions.put(
			"vehMakeAr", WorkshopVehicle::getVehMakeAr);
		attributeSetterBiConsumers.put(
			"vehMakeAr",
			(BiConsumer<WorkshopVehicle, String>)WorkshopVehicle::setVehMakeAr);
		attributeGetterFunctions.put(
			"vehModelEn", WorkshopVehicle::getVehModelEn);
		attributeSetterBiConsumers.put(
			"vehModelEn",
			(BiConsumer<WorkshopVehicle, String>)
				WorkshopVehicle::setVehModelEn);
		attributeGetterFunctions.put(
			"vehModelAr", WorkshopVehicle::getVehModelAr);
		attributeSetterBiConsumers.put(
			"vehModelAr",
			(BiConsumer<WorkshopVehicle, String>)
				WorkshopVehicle::setVehModelAr);
		attributeGetterFunctions.put(
			"customerIqamaId", WorkshopVehicle::getCustomerIqamaId);
		attributeSetterBiConsumers.put(
			"customerIqamaId",
			(BiConsumer<WorkshopVehicle, String>)
				WorkshopVehicle::setCustomerIqamaId);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public int getId() {
		return _id;
	}

	@Override
	public void setId(int id) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_id = id;
	}

	@JSON
	@Override
	public String getCustomerName() {
		if (_customerName == null) {
			return "";
		}
		else {
			return _customerName;
		}
	}

	@Override
	public void setCustomerName(String customerName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_customerName = customerName;
	}

	@JSON
	@Override
	public String getManufacture() {
		if (_manufacture == null) {
			return "";
		}
		else {
			return _manufacture;
		}
	}

	@Override
	public void setManufacture(String manufacture) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_manufacture = manufacture;
	}

	@JSON
	@Override
	public String getPlateNo() {
		if (_plateNo == null) {
			return "";
		}
		else {
			return _plateNo;
		}
	}

	@Override
	public void setPlateNo(String plateNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_plateNo = plateNo;
	}

	@JSON
	@Override
	public int getWorkshopId() {
		return _workshopId;
	}

	@Override
	public void setWorkshopId(int workshopId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_workshopId = workshopId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public int getOriginalWorkshopId() {
		return GetterUtil.getInteger(
			this.<Integer>getColumnOriginalValue("WORKSHOP_ID"));
	}

	@JSON
	@Override
	public String getClaimRefNo() {
		if (_claimRefNo == null) {
			return "";
		}
		else {
			return _claimRefNo;
		}
	}

	@Override
	public void setClaimRefNo(String claimRefNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_claimRefNo = claimRefNo;
	}

	@JSON
	@Override
	public String getStatus() {
		if (_status == null) {
			return "";
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_status = status;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalStatus() {
		return getColumnOriginalValue("STATUS");
	}

	@JSON
	@Override
	public Date getDate() {
		return _date;
	}

	@Override
	public void setDate(Date date) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_date = date;
	}

	@JSON
	@Override
	public String getServiceType() {
		if (_serviceType == null) {
			return "";
		}
		else {
			return _serviceType;
		}
	}

	@Override
	public void setServiceType(String serviceType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_serviceType = serviceType;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return "";
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_description = description;
	}

	@JSON
	@Override
	public String getCustomerMobile() {
		if (_customerMobile == null) {
			return "";
		}
		else {
			return _customerMobile;
		}
	}

	@Override
	public void setCustomerMobile(String customerMobile) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_customerMobile = customerMobile;
	}

	@JSON
	@Override
	public String getVehMakeEn() {
		if (_vehMakeEn == null) {
			return "";
		}
		else {
			return _vehMakeEn;
		}
	}

	@Override
	public void setVehMakeEn(String vehMakeEn) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehMakeEn = vehMakeEn;
	}

	@JSON
	@Override
	public String getVehMakeAr() {
		if (_vehMakeAr == null) {
			return "";
		}
		else {
			return _vehMakeAr;
		}
	}

	@Override
	public void setVehMakeAr(String vehMakeAr) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehMakeAr = vehMakeAr;
	}

	@JSON
	@Override
	public String getVehModelEn() {
		if (_vehModelEn == null) {
			return "";
		}
		else {
			return _vehModelEn;
		}
	}

	@Override
	public void setVehModelEn(String vehModelEn) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehModelEn = vehModelEn;
	}

	@JSON
	@Override
	public String getVehModelAr() {
		if (_vehModelAr == null) {
			return "";
		}
		else {
			return _vehModelAr;
		}
	}

	@Override
	public void setVehModelAr(String vehModelAr) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehModelAr = vehModelAr;
	}

	@JSON
	@Override
	public String getCustomerIqamaId() {
		if (_customerIqamaId == null) {
			return "";
		}
		else {
			return _customerIqamaId;
		}
	}

	@Override
	public void setCustomerIqamaId(String customerIqamaId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_customerIqamaId = customerIqamaId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalCustomerIqamaId() {
		return getColumnOriginalValue("CUSTOMER_IQAMA_ID");
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (entry.getValue() != getColumnValue(entry.getKey())) {
				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public WorkshopVehicle toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, WorkshopVehicle>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		WorkshopVehicleImpl workshopVehicleImpl = new WorkshopVehicleImpl();

		workshopVehicleImpl.setId(getId());
		workshopVehicleImpl.setCustomerName(getCustomerName());
		workshopVehicleImpl.setManufacture(getManufacture());
		workshopVehicleImpl.setPlateNo(getPlateNo());
		workshopVehicleImpl.setWorkshopId(getWorkshopId());
		workshopVehicleImpl.setClaimRefNo(getClaimRefNo());
		workshopVehicleImpl.setStatus(getStatus());
		workshopVehicleImpl.setDate(getDate());
		workshopVehicleImpl.setServiceType(getServiceType());
		workshopVehicleImpl.setDescription(getDescription());
		workshopVehicleImpl.setCustomerMobile(getCustomerMobile());
		workshopVehicleImpl.setVehMakeEn(getVehMakeEn());
		workshopVehicleImpl.setVehMakeAr(getVehMakeAr());
		workshopVehicleImpl.setVehModelEn(getVehModelEn());
		workshopVehicleImpl.setVehModelAr(getVehModelAr());
		workshopVehicleImpl.setCustomerIqamaId(getCustomerIqamaId());

		workshopVehicleImpl.resetOriginalValues();

		return workshopVehicleImpl;
	}

	@Override
	public int compareTo(WorkshopVehicle workshopVehicle) {
		int primaryKey = workshopVehicle.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof WorkshopVehicle)) {
			return false;
		}

		WorkshopVehicle workshopVehicle = (WorkshopVehicle)object;

		int primaryKey = workshopVehicle.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<WorkshopVehicle> toCacheModel() {
		WorkshopVehicleCacheModel workshopVehicleCacheModel =
			new WorkshopVehicleCacheModel();

		workshopVehicleCacheModel.id = getId();

		workshopVehicleCacheModel.customerName = getCustomerName();

		String customerName = workshopVehicleCacheModel.customerName;

		if ((customerName != null) && (customerName.length() == 0)) {
			workshopVehicleCacheModel.customerName = null;
		}

		workshopVehicleCacheModel.manufacture = getManufacture();

		String manufacture = workshopVehicleCacheModel.manufacture;

		if ((manufacture != null) && (manufacture.length() == 0)) {
			workshopVehicleCacheModel.manufacture = null;
		}

		workshopVehicleCacheModel.plateNo = getPlateNo();

		String plateNo = workshopVehicleCacheModel.plateNo;

		if ((plateNo != null) && (plateNo.length() == 0)) {
			workshopVehicleCacheModel.plateNo = null;
		}

		workshopVehicleCacheModel.workshopId = getWorkshopId();

		workshopVehicleCacheModel.claimRefNo = getClaimRefNo();

		String claimRefNo = workshopVehicleCacheModel.claimRefNo;

		if ((claimRefNo != null) && (claimRefNo.length() == 0)) {
			workshopVehicleCacheModel.claimRefNo = null;
		}

		workshopVehicleCacheModel.status = getStatus();

		String status = workshopVehicleCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			workshopVehicleCacheModel.status = null;
		}

		Date date = getDate();

		if (date != null) {
			workshopVehicleCacheModel.date = date.getTime();
		}
		else {
			workshopVehicleCacheModel.date = Long.MIN_VALUE;
		}

		workshopVehicleCacheModel.serviceType = getServiceType();

		String serviceType = workshopVehicleCacheModel.serviceType;

		if ((serviceType != null) && (serviceType.length() == 0)) {
			workshopVehicleCacheModel.serviceType = null;
		}

		workshopVehicleCacheModel.description = getDescription();

		String description = workshopVehicleCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			workshopVehicleCacheModel.description = null;
		}

		workshopVehicleCacheModel.customerMobile = getCustomerMobile();

		String customerMobile = workshopVehicleCacheModel.customerMobile;

		if ((customerMobile != null) && (customerMobile.length() == 0)) {
			workshopVehicleCacheModel.customerMobile = null;
		}

		workshopVehicleCacheModel.vehMakeEn = getVehMakeEn();

		String vehMakeEn = workshopVehicleCacheModel.vehMakeEn;

		if ((vehMakeEn != null) && (vehMakeEn.length() == 0)) {
			workshopVehicleCacheModel.vehMakeEn = null;
		}

		workshopVehicleCacheModel.vehMakeAr = getVehMakeAr();

		String vehMakeAr = workshopVehicleCacheModel.vehMakeAr;

		if ((vehMakeAr != null) && (vehMakeAr.length() == 0)) {
			workshopVehicleCacheModel.vehMakeAr = null;
		}

		workshopVehicleCacheModel.vehModelEn = getVehModelEn();

		String vehModelEn = workshopVehicleCacheModel.vehModelEn;

		if ((vehModelEn != null) && (vehModelEn.length() == 0)) {
			workshopVehicleCacheModel.vehModelEn = null;
		}

		workshopVehicleCacheModel.vehModelAr = getVehModelAr();

		String vehModelAr = workshopVehicleCacheModel.vehModelAr;

		if ((vehModelAr != null) && (vehModelAr.length() == 0)) {
			workshopVehicleCacheModel.vehModelAr = null;
		}

		workshopVehicleCacheModel.customerIqamaId = getCustomerIqamaId();

		String customerIqamaId = workshopVehicleCacheModel.customerIqamaId;

		if ((customerIqamaId != null) && (customerIqamaId.length() == 0)) {
			workshopVehicleCacheModel.customerIqamaId = null;
		}

		return workshopVehicleCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<WorkshopVehicle, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(4 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<WorkshopVehicle, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<WorkshopVehicle, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((WorkshopVehicle)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<WorkshopVehicle, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<WorkshopVehicle, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<WorkshopVehicle, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((WorkshopVehicle)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, WorkshopVehicle>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private int _id;
	private String _customerName;
	private String _manufacture;
	private String _plateNo;
	private int _workshopId;
	private String _claimRefNo;
	private String _status;
	private Date _date;
	private String _serviceType;
	private String _description;
	private String _customerMobile;
	private String _vehMakeEn;
	private String _vehMakeAr;
	private String _vehModelEn;
	private String _vehModelAr;
	private String _customerIqamaId;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<WorkshopVehicle, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((WorkshopVehicle)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("ID", _id);
		_columnOriginalValues.put("CUSTOMER_NAME", _customerName);
		_columnOriginalValues.put("MANUFACTURE", _manufacture);
		_columnOriginalValues.put("PLATE_NO", _plateNo);
		_columnOriginalValues.put("WORKSHOP_ID", _workshopId);
		_columnOriginalValues.put("CLAIM_REFERENCE_NO", _claimRefNo);
		_columnOriginalValues.put("STATUS", _status);
		_columnOriginalValues.put("CLAIM_DATE", _date);
		_columnOriginalValues.put("SERVICE_TYPE", _serviceType);
		_columnOriginalValues.put("DESCRIPTION", _description);
		_columnOriginalValues.put("CUSTOMER_MOBILE", _customerMobile);
		_columnOriginalValues.put("VEHICLE_MAKE_EN", _vehMakeEn);
		_columnOriginalValues.put("VEHICLE_MAKE_AR", _vehMakeAr);
		_columnOriginalValues.put("VEHICLE_MODEL_EN", _vehModelEn);
		_columnOriginalValues.put("VEHICLE_MODEL_AR", _vehModelAr);
		_columnOriginalValues.put("CUSTOMER_IQAMA_ID", _customerIqamaId);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("ID", "id");
		attributeNames.put("CUSTOMER_NAME", "customerName");
		attributeNames.put("MANUFACTURE", "manufacture");
		attributeNames.put("PLATE_NO", "plateNo");
		attributeNames.put("WORKSHOP_ID", "workshopId");
		attributeNames.put("CLAIM_REFERENCE_NO", "claimRefNo");
		attributeNames.put("STATUS", "status");
		attributeNames.put("CLAIM_DATE", "date");
		attributeNames.put("SERVICE_TYPE", "serviceType");
		attributeNames.put("DESCRIPTION", "description");
		attributeNames.put("CUSTOMER_MOBILE", "customerMobile");
		attributeNames.put("VEHICLE_MAKE_EN", "vehMakeEn");
		attributeNames.put("VEHICLE_MAKE_AR", "vehMakeAr");
		attributeNames.put("VEHICLE_MODEL_EN", "vehModelEn");
		attributeNames.put("VEHICLE_MODEL_AR", "vehModelAr");
		attributeNames.put("CUSTOMER_IQAMA_ID", "customerIqamaId");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("ID", 1L);

		columnBitmasks.put("CUSTOMER_NAME", 2L);

		columnBitmasks.put("MANUFACTURE", 4L);

		columnBitmasks.put("PLATE_NO", 8L);

		columnBitmasks.put("WORKSHOP_ID", 16L);

		columnBitmasks.put("CLAIM_REFERENCE_NO", 32L);

		columnBitmasks.put("STATUS", 64L);

		columnBitmasks.put("CLAIM_DATE", 128L);

		columnBitmasks.put("SERVICE_TYPE", 256L);

		columnBitmasks.put("DESCRIPTION", 512L);

		columnBitmasks.put("CUSTOMER_MOBILE", 1024L);

		columnBitmasks.put("VEHICLE_MAKE_EN", 2048L);

		columnBitmasks.put("VEHICLE_MAKE_AR", 4096L);

		columnBitmasks.put("VEHICLE_MODEL_EN", 8192L);

		columnBitmasks.put("VEHICLE_MODEL_AR", 16384L);

		columnBitmasks.put("CUSTOMER_IQAMA_ID", 32768L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private WorkshopVehicle _escapedModel;

}