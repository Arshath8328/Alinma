/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ejada.atmc.acl.db.model.impl;

import com.ejada.atmc.acl.db.model.PolicyVEH;
import com.ejada.atmc.acl.db.model.PolicyVEHModel;
import com.ejada.atmc.acl.db.model.PolicyVEHSoap;
import com.ejada.atmc.acl.db.service.persistence.PolicyVEHPK;

import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the PolicyVEH service. Represents a row in the &quot;ODS_POLICY_VEH&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>PolicyVEHModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PolicyVEHImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PolicyVEHImpl
 * @generated
 */
@JSON(strict = true)
public class PolicyVEHModelImpl
	extends BaseModelImpl<PolicyVEH> implements PolicyVEHModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a policy veh model instance should use the <code>PolicyVEH</code> interface instead.
	 */
	public static final String TABLE_NAME = "ODS_POLICY_VEH";

	public static final Object[][] TABLE_COLUMNS = {
		{"ODS_POLICY_NO", Types.VARCHAR}, {"ODS_VEH_ID", Types.VARCHAR},
		{"ODS_VEHICLE_DEF_TYPE", Types.VARCHAR},
		{"ODS_VEHICLE_SEQ_CUSTOM", Types.VARCHAR},
		{"ODS_CHASSIS_NO", Types.VARCHAR}, {"ODS_BODY_TYPE", Types.VARCHAR},
		{"ODS_MAKE", Types.VARCHAR}, {"ODS_MODEL", Types.VARCHAR},
		{"ODS_MFG_YEAR", Types.BIGINT}, {"ODS_COLOR", Types.VARCHAR},
		{"ODS_AGENCY_REPAIR", Types.VARCHAR},
		{"ODS_NOOF_PASSENGERS", Types.BIGINT},
		{"ODS_ENG_PLATE_NO", Types.BIGINT}, {"ODS_ENG_PLATE_L1", Types.VARCHAR},
		{"ODS_ENG_PLATE_L2", Types.VARCHAR},
		{"ODS_ENG_PLATE_L3", Types.VARCHAR},
		{"ODS_ARB_PLATE_NO", Types.VARCHAR},
		{"ODS_ARB_PLATE_L1", Types.VARCHAR},
		{"ODS_ARB_PLATE_L2", Types.VARCHAR},
		{"ODS_ARB_PLATE_L3", Types.VARCHAR}, {"ODS_DEDUCTIBLE", Types.BIGINT},
		{"ODS_VEHICLE_VALUE", Types.BIGINT}, {"ODS_PREMIUM", Types.BIGINT},
		{"ODS_DISCOUNTS", Types.BIGINT}, {"ODS_LOADING", Types.BIGINT},
		{"ODS_TOTAL_PREMIUM", Types.BIGINT},
		{"ODS_NOOF_CLAIM_FREE_YEARS", Types.BIGINT},
		{"ODS_USEOF_VEHICLE", Types.VARCHAR},
		{"ODS_NAJM_PLATE_TYPE", Types.VARCHAR},
		{"ODS_NAJM_STATUS", Types.VARCHAR},
		{"ODS_ESTEMARA_EXP_DT", Types.VARCHAR},
		{"ODS_GEOLOCATION", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ODS_POLICY_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_VEH_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_VEHICLE_DEF_TYPE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_VEHICLE_SEQ_CUSTOM", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_CHASSIS_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_BODY_TYPE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_MAKE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_MODEL", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_MFG_YEAR", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ODS_COLOR", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_AGENCY_REPAIR", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_NOOF_PASSENGERS", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ODS_ENG_PLATE_NO", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ODS_ENG_PLATE_L1", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_ENG_PLATE_L2", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_ENG_PLATE_L3", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_ARB_PLATE_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_ARB_PLATE_L1", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_ARB_PLATE_L2", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_ARB_PLATE_L3", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_DEDUCTIBLE", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ODS_VEHICLE_VALUE", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ODS_PREMIUM", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ODS_DISCOUNTS", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ODS_LOADING", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ODS_TOTAL_PREMIUM", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ODS_NOOF_CLAIM_FREE_YEARS", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ODS_USEOF_VEHICLE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_NAJM_PLATE_TYPE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_NAJM_STATUS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_ESTEMARA_EXP_DT", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_GEOLOCATION", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table ODS_POLICY_VEH (ODS_POLICY_NO VARCHAR(75) not null,ODS_VEH_ID VARCHAR(75) not null,ODS_VEHICLE_DEF_TYPE VARCHAR(75) null,ODS_VEHICLE_SEQ_CUSTOM VARCHAR(75) null,ODS_CHASSIS_NO VARCHAR(75) null,ODS_BODY_TYPE VARCHAR(75) null,ODS_MAKE VARCHAR(75) null,ODS_MODEL VARCHAR(75) null,ODS_MFG_YEAR LONG,ODS_COLOR VARCHAR(75) null,ODS_AGENCY_REPAIR VARCHAR(75) null,ODS_NOOF_PASSENGERS LONG,ODS_ENG_PLATE_NO LONG,ODS_ENG_PLATE_L1 VARCHAR(75) null,ODS_ENG_PLATE_L2 VARCHAR(75) null,ODS_ENG_PLATE_L3 VARCHAR(75) null,ODS_ARB_PLATE_NO VARCHAR(75) null,ODS_ARB_PLATE_L1 VARCHAR(75) null,ODS_ARB_PLATE_L2 VARCHAR(75) null,ODS_ARB_PLATE_L3 VARCHAR(75) null,ODS_DEDUCTIBLE LONG,ODS_VEHICLE_VALUE LONG,ODS_PREMIUM LONG,ODS_DISCOUNTS LONG,ODS_LOADING LONG,ODS_TOTAL_PREMIUM LONG,ODS_NOOF_CLAIM_FREE_YEARS LONG,ODS_USEOF_VEHICLE VARCHAR(75) null,ODS_NAJM_PLATE_TYPE VARCHAR(75) null,ODS_NAJM_STATUS VARCHAR(75) null,ODS_ESTEMARA_EXP_DT VARCHAR(75) null,ODS_GEOLOCATION VARCHAR(75) null,primary key (ODS_POLICY_NO, ODS_VEH_ID))";

	public static final String TABLE_SQL_DROP = "drop table ODS_POLICY_VEH";

	public static final String ORDER_BY_JPQL =
		" ORDER BY policyVEH.id.policyNo ASC, policyVEH.id.vehId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY ODS_POLICY_VEH.ODS_POLICY_NO ASC, ODS_POLICY_VEH.ODS_VEH_ID ASC";

	public static final String DATA_SOURCE = "extDS";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long ARPLATEL1_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long ARPLATEL2_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long ARPLATEL3_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long ARPLATENO_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long ENPLATEL1_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long ENPLATEL2_COLUMN_BITMASK = 32L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long ENPLATEL3_COLUMN_BITMASK = 64L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long ENPLATENO_COLUMN_BITMASK = 128L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long POLICYNO_COLUMN_BITMASK = 256L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long VEHICLESEQCUSTOM_COLUMN_BITMASK = 512L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)
	 */
	@Deprecated
	public static final long VEHID_COLUMN_BITMASK = 1024L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static PolicyVEH toModel(PolicyVEHSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		PolicyVEH model = new PolicyVEHImpl();

		model.setPolicyNo(soapModel.getPolicyNo());
		model.setVehId(soapModel.getVehId());
		model.setVehicleDefType(soapModel.getVehicleDefType());
		model.setVehicleSeqCustom(soapModel.getVehicleSeqCustom());
		model.setChassisNo(soapModel.getChassisNo());
		model.setBodyType(soapModel.getBodyType());
		model.setMake(soapModel.getMake());
		model.setVehModel(soapModel.getVehModel());
		model.setMfgYear(soapModel.getMfgYear());
		model.setColor(soapModel.getColor());
		model.setAgencyRepair(soapModel.getAgencyRepair());
		model.setNoofPassengers(soapModel.getNoofPassengers());
		model.setEnPlateNo(soapModel.getEnPlateNo());
		model.setEnPlateL1(soapModel.getEnPlateL1());
		model.setEnPlateL2(soapModel.getEnPlateL2());
		model.setEnPlateL3(soapModel.getEnPlateL3());
		model.setArPlateNo(soapModel.getArPlateNo());
		model.setArPlateL1(soapModel.getArPlateL1());
		model.setArPlateL2(soapModel.getArPlateL2());
		model.setArPlateL3(soapModel.getArPlateL3());
		model.setDeductible(soapModel.getDeductible());
		model.setVehicleValue(soapModel.getVehicleValue());
		model.setPremium(soapModel.getPremium());
		model.setDiscounts(soapModel.getDiscounts());
		model.setLoading(soapModel.getLoading());
		model.setTotalPremium(soapModel.getTotalPremium());
		model.setNoofClaimFreeYears(soapModel.getNoofClaimFreeYears());
		model.setUseOfCehicle(soapModel.getUseOfCehicle());
		model.setNajmPlateType(soapModel.getNajmPlateType());
		model.setNajmStatus(soapModel.getNajmStatus());
		model.setEstemaraExpiryDate(soapModel.getEstemaraExpiryDate());
		model.setGeoLocation(soapModel.getGeoLocation());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static List<PolicyVEH> toModels(PolicyVEHSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<PolicyVEH> models = new ArrayList<PolicyVEH>(soapModels.length);

		for (PolicyVEHSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public PolicyVEHModelImpl() {
	}

	@Override
	public PolicyVEHPK getPrimaryKey() {
		return new PolicyVEHPK(_policyNo, _vehId);
	}

	@Override
	public void setPrimaryKey(PolicyVEHPK primaryKey) {
		setPolicyNo(primaryKey.policyNo);
		setVehId(primaryKey.vehId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new PolicyVEHPK(_policyNo, _vehId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((PolicyVEHPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return PolicyVEH.class;
	}

	@Override
	public String getModelClassName() {
		return PolicyVEH.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<PolicyVEH, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<PolicyVEH, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<PolicyVEH, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((PolicyVEH)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<PolicyVEH, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<PolicyVEH, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(PolicyVEH)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<PolicyVEH, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<PolicyVEH, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, PolicyVEH>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			PolicyVEH.class.getClassLoader(), PolicyVEH.class,
			ModelWrapper.class);

		try {
			Constructor<PolicyVEH> constructor =
				(Constructor<PolicyVEH>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<PolicyVEH, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<PolicyVEH, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<PolicyVEH, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<PolicyVEH, Object>>();
		Map<String, BiConsumer<PolicyVEH, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<PolicyVEH, ?>>();

		attributeGetterFunctions.put("policyNo", PolicyVEH::getPolicyNo);
		attributeSetterBiConsumers.put(
			"policyNo", (BiConsumer<PolicyVEH, String>)PolicyVEH::setPolicyNo);
		attributeGetterFunctions.put("vehId", PolicyVEH::getVehId);
		attributeSetterBiConsumers.put(
			"vehId", (BiConsumer<PolicyVEH, String>)PolicyVEH::setVehId);
		attributeGetterFunctions.put(
			"vehicleDefType", PolicyVEH::getVehicleDefType);
		attributeSetterBiConsumers.put(
			"vehicleDefType",
			(BiConsumer<PolicyVEH, String>)PolicyVEH::setVehicleDefType);
		attributeGetterFunctions.put(
			"vehicleSeqCustom", PolicyVEH::getVehicleSeqCustom);
		attributeSetterBiConsumers.put(
			"vehicleSeqCustom",
			(BiConsumer<PolicyVEH, String>)PolicyVEH::setVehicleSeqCustom);
		attributeGetterFunctions.put("chassisNo", PolicyVEH::getChassisNo);
		attributeSetterBiConsumers.put(
			"chassisNo",
			(BiConsumer<PolicyVEH, String>)PolicyVEH::setChassisNo);
		attributeGetterFunctions.put("bodyType", PolicyVEH::getBodyType);
		attributeSetterBiConsumers.put(
			"bodyType", (BiConsumer<PolicyVEH, String>)PolicyVEH::setBodyType);
		attributeGetterFunctions.put("make", PolicyVEH::getMake);
		attributeSetterBiConsumers.put(
			"make", (BiConsumer<PolicyVEH, String>)PolicyVEH::setMake);
		attributeGetterFunctions.put("vehModel", PolicyVEH::getVehModel);
		attributeSetterBiConsumers.put(
			"vehModel", (BiConsumer<PolicyVEH, String>)PolicyVEH::setVehModel);
		attributeGetterFunctions.put("mfgYear", PolicyVEH::getMfgYear);
		attributeSetterBiConsumers.put(
			"mfgYear", (BiConsumer<PolicyVEH, Long>)PolicyVEH::setMfgYear);
		attributeGetterFunctions.put("color", PolicyVEH::getColor);
		attributeSetterBiConsumers.put(
			"color", (BiConsumer<PolicyVEH, String>)PolicyVEH::setColor);
		attributeGetterFunctions.put(
			"agencyRepair", PolicyVEH::getAgencyRepair);
		attributeSetterBiConsumers.put(
			"agencyRepair",
			(BiConsumer<PolicyVEH, String>)PolicyVEH::setAgencyRepair);
		attributeGetterFunctions.put(
			"noofPassengers", PolicyVEH::getNoofPassengers);
		attributeSetterBiConsumers.put(
			"noofPassengers",
			(BiConsumer<PolicyVEH, Long>)PolicyVEH::setNoofPassengers);
		attributeGetterFunctions.put("enPlateNo", PolicyVEH::getEnPlateNo);
		attributeSetterBiConsumers.put(
			"enPlateNo", (BiConsumer<PolicyVEH, Long>)PolicyVEH::setEnPlateNo);
		attributeGetterFunctions.put("enPlateL1", PolicyVEH::getEnPlateL1);
		attributeSetterBiConsumers.put(
			"enPlateL1",
			(BiConsumer<PolicyVEH, String>)PolicyVEH::setEnPlateL1);
		attributeGetterFunctions.put("enPlateL2", PolicyVEH::getEnPlateL2);
		attributeSetterBiConsumers.put(
			"enPlateL2",
			(BiConsumer<PolicyVEH, String>)PolicyVEH::setEnPlateL2);
		attributeGetterFunctions.put("enPlateL3", PolicyVEH::getEnPlateL3);
		attributeSetterBiConsumers.put(
			"enPlateL3",
			(BiConsumer<PolicyVEH, String>)PolicyVEH::setEnPlateL3);
		attributeGetterFunctions.put("arPlateNo", PolicyVEH::getArPlateNo);
		attributeSetterBiConsumers.put(
			"arPlateNo",
			(BiConsumer<PolicyVEH, String>)PolicyVEH::setArPlateNo);
		attributeGetterFunctions.put("arPlateL1", PolicyVEH::getArPlateL1);
		attributeSetterBiConsumers.put(
			"arPlateL1",
			(BiConsumer<PolicyVEH, String>)PolicyVEH::setArPlateL1);
		attributeGetterFunctions.put("arPlateL2", PolicyVEH::getArPlateL2);
		attributeSetterBiConsumers.put(
			"arPlateL2",
			(BiConsumer<PolicyVEH, String>)PolicyVEH::setArPlateL2);
		attributeGetterFunctions.put("arPlateL3", PolicyVEH::getArPlateL3);
		attributeSetterBiConsumers.put(
			"arPlateL3",
			(BiConsumer<PolicyVEH, String>)PolicyVEH::setArPlateL3);
		attributeGetterFunctions.put("deductible", PolicyVEH::getDeductible);
		attributeSetterBiConsumers.put(
			"deductible",
			(BiConsumer<PolicyVEH, Long>)PolicyVEH::setDeductible);
		attributeGetterFunctions.put(
			"vehicleValue", PolicyVEH::getVehicleValue);
		attributeSetterBiConsumers.put(
			"vehicleValue",
			(BiConsumer<PolicyVEH, Long>)PolicyVEH::setVehicleValue);
		attributeGetterFunctions.put("premium", PolicyVEH::getPremium);
		attributeSetterBiConsumers.put(
			"premium", (BiConsumer<PolicyVEH, Long>)PolicyVEH::setPremium);
		attributeGetterFunctions.put("discounts", PolicyVEH::getDiscounts);
		attributeSetterBiConsumers.put(
			"discounts", (BiConsumer<PolicyVEH, Long>)PolicyVEH::setDiscounts);
		attributeGetterFunctions.put("loading", PolicyVEH::getLoading);
		attributeSetterBiConsumers.put(
			"loading", (BiConsumer<PolicyVEH, Long>)PolicyVEH::setLoading);
		attributeGetterFunctions.put(
			"totalPremium", PolicyVEH::getTotalPremium);
		attributeSetterBiConsumers.put(
			"totalPremium",
			(BiConsumer<PolicyVEH, Long>)PolicyVEH::setTotalPremium);
		attributeGetterFunctions.put(
			"noofClaimFreeYears", PolicyVEH::getNoofClaimFreeYears);
		attributeSetterBiConsumers.put(
			"noofClaimFreeYears",
			(BiConsumer<PolicyVEH, Long>)PolicyVEH::setNoofClaimFreeYears);
		attributeGetterFunctions.put(
			"useOfCehicle", PolicyVEH::getUseOfCehicle);
		attributeSetterBiConsumers.put(
			"useOfCehicle",
			(BiConsumer<PolicyVEH, String>)PolicyVEH::setUseOfCehicle);
		attributeGetterFunctions.put(
			"najmPlateType", PolicyVEH::getNajmPlateType);
		attributeSetterBiConsumers.put(
			"najmPlateType",
			(BiConsumer<PolicyVEH, String>)PolicyVEH::setNajmPlateType);
		attributeGetterFunctions.put("najmStatus", PolicyVEH::getNajmStatus);
		attributeSetterBiConsumers.put(
			"najmStatus",
			(BiConsumer<PolicyVEH, String>)PolicyVEH::setNajmStatus);
		attributeGetterFunctions.put(
			"estemaraExpiryDate", PolicyVEH::getEstemaraExpiryDate);
		attributeSetterBiConsumers.put(
			"estemaraExpiryDate",
			(BiConsumer<PolicyVEH, String>)PolicyVEH::setEstemaraExpiryDate);
		attributeGetterFunctions.put("geoLocation", PolicyVEH::getGeoLocation);
		attributeSetterBiConsumers.put(
			"geoLocation",
			(BiConsumer<PolicyVEH, String>)PolicyVEH::setGeoLocation);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getPolicyNo() {
		if (_policyNo == null) {
			return "";
		}
		else {
			return _policyNo;
		}
	}

	@Override
	public void setPolicyNo(String policyNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_policyNo = policyNo;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalPolicyNo() {
		return getColumnOriginalValue("ODS_POLICY_NO");
	}

	@JSON
	@Override
	public String getVehId() {
		if (_vehId == null) {
			return "";
		}
		else {
			return _vehId;
		}
	}

	@Override
	public void setVehId(String vehId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehId = vehId;
	}

	@JSON
	@Override
	public String getVehicleDefType() {
		if (_vehicleDefType == null) {
			return "";
		}
		else {
			return _vehicleDefType;
		}
	}

	@Override
	public void setVehicleDefType(String vehicleDefType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehicleDefType = vehicleDefType;
	}

	@JSON
	@Override
	public String getVehicleSeqCustom() {
		if (_vehicleSeqCustom == null) {
			return "";
		}
		else {
			return _vehicleSeqCustom;
		}
	}

	@Override
	public void setVehicleSeqCustom(String vehicleSeqCustom) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehicleSeqCustom = vehicleSeqCustom;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalVehicleSeqCustom() {
		return getColumnOriginalValue("ODS_VEHICLE_SEQ_CUSTOM");
	}

	@JSON
	@Override
	public String getChassisNo() {
		if (_chassisNo == null) {
			return "";
		}
		else {
			return _chassisNo;
		}
	}

	@Override
	public void setChassisNo(String chassisNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_chassisNo = chassisNo;
	}

	@JSON
	@Override
	public String getBodyType() {
		if (_bodyType == null) {
			return "";
		}
		else {
			return _bodyType;
		}
	}

	@Override
	public void setBodyType(String bodyType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bodyType = bodyType;
	}

	@JSON
	@Override
	public String getMake() {
		if (_make == null) {
			return "";
		}
		else {
			return _make;
		}
	}

	@Override
	public void setMake(String make) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_make = make;
	}

	@JSON
	@Override
	public String getVehModel() {
		if (_vehModel == null) {
			return "";
		}
		else {
			return _vehModel;
		}
	}

	@Override
	public void setVehModel(String vehModel) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehModel = vehModel;
	}

	@JSON
	@Override
	public long getMfgYear() {
		return _mfgYear;
	}

	@Override
	public void setMfgYear(long mfgYear) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_mfgYear = mfgYear;
	}

	@JSON
	@Override
	public String getColor() {
		if (_color == null) {
			return "";
		}
		else {
			return _color;
		}
	}

	@Override
	public void setColor(String color) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_color = color;
	}

	@JSON
	@Override
	public String getAgencyRepair() {
		if (_agencyRepair == null) {
			return "";
		}
		else {
			return _agencyRepair;
		}
	}

	@Override
	public void setAgencyRepair(String agencyRepair) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_agencyRepair = agencyRepair;
	}

	@JSON
	@Override
	public long getNoofPassengers() {
		return _noofPassengers;
	}

	@Override
	public void setNoofPassengers(long noofPassengers) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_noofPassengers = noofPassengers;
	}

	@JSON
	@Override
	public long getEnPlateNo() {
		return _enPlateNo;
	}

	@Override
	public void setEnPlateNo(long enPlateNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_enPlateNo = enPlateNo;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalEnPlateNo() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("ODS_ENG_PLATE_NO"));
	}

	@JSON
	@Override
	public String getEnPlateL1() {
		if (_enPlateL1 == null) {
			return "";
		}
		else {
			return _enPlateL1;
		}
	}

	@Override
	public void setEnPlateL1(String enPlateL1) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_enPlateL1 = enPlateL1;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalEnPlateL1() {
		return getColumnOriginalValue("ODS_ENG_PLATE_L1");
	}

	@JSON
	@Override
	public String getEnPlateL2() {
		if (_enPlateL2 == null) {
			return "";
		}
		else {
			return _enPlateL2;
		}
	}

	@Override
	public void setEnPlateL2(String enPlateL2) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_enPlateL2 = enPlateL2;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalEnPlateL2() {
		return getColumnOriginalValue("ODS_ENG_PLATE_L2");
	}

	@JSON
	@Override
	public String getEnPlateL3() {
		if (_enPlateL3 == null) {
			return "";
		}
		else {
			return _enPlateL3;
		}
	}

	@Override
	public void setEnPlateL3(String enPlateL3) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_enPlateL3 = enPlateL3;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalEnPlateL3() {
		return getColumnOriginalValue("ODS_ENG_PLATE_L3");
	}

	@JSON
	@Override
	public String getArPlateNo() {
		if (_arPlateNo == null) {
			return "";
		}
		else {
			return _arPlateNo;
		}
	}

	@Override
	public void setArPlateNo(String arPlateNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_arPlateNo = arPlateNo;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalArPlateNo() {
		return getColumnOriginalValue("ODS_ARB_PLATE_NO");
	}

	@JSON
	@Override
	public String getArPlateL1() {
		if (_arPlateL1 == null) {
			return "";
		}
		else {
			return _arPlateL1;
		}
	}

	@Override
	public void setArPlateL1(String arPlateL1) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_arPlateL1 = arPlateL1;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalArPlateL1() {
		return getColumnOriginalValue("ODS_ARB_PLATE_L1");
	}

	@JSON
	@Override
	public String getArPlateL2() {
		if (_arPlateL2 == null) {
			return "";
		}
		else {
			return _arPlateL2;
		}
	}

	@Override
	public void setArPlateL2(String arPlateL2) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_arPlateL2 = arPlateL2;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalArPlateL2() {
		return getColumnOriginalValue("ODS_ARB_PLATE_L2");
	}

	@JSON
	@Override
	public String getArPlateL3() {
		if (_arPlateL3 == null) {
			return "";
		}
		else {
			return _arPlateL3;
		}
	}

	@Override
	public void setArPlateL3(String arPlateL3) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_arPlateL3 = arPlateL3;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalArPlateL3() {
		return getColumnOriginalValue("ODS_ARB_PLATE_L3");
	}

	@JSON
	@Override
	public long getDeductible() {
		return _deductible;
	}

	@Override
	public void setDeductible(long deductible) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_deductible = deductible;
	}

	@JSON
	@Override
	public long getVehicleValue() {
		return _vehicleValue;
	}

	@Override
	public void setVehicleValue(long vehicleValue) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehicleValue = vehicleValue;
	}

	@JSON
	@Override
	public long getPremium() {
		return _premium;
	}

	@Override
	public void setPremium(long premium) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_premium = premium;
	}

	@JSON
	@Override
	public long getDiscounts() {
		return _discounts;
	}

	@Override
	public void setDiscounts(long discounts) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_discounts = discounts;
	}

	@JSON
	@Override
	public long getLoading() {
		return _loading;
	}

	@Override
	public void setLoading(long loading) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_loading = loading;
	}

	@JSON
	@Override
	public long getTotalPremium() {
		return _totalPremium;
	}

	@Override
	public void setTotalPremium(long totalPremium) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_totalPremium = totalPremium;
	}

	@JSON
	@Override
	public long getNoofClaimFreeYears() {
		return _noofClaimFreeYears;
	}

	@Override
	public void setNoofClaimFreeYears(long noofClaimFreeYears) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_noofClaimFreeYears = noofClaimFreeYears;
	}

	@JSON
	@Override
	public String getUseOfCehicle() {
		if (_useOfCehicle == null) {
			return "";
		}
		else {
			return _useOfCehicle;
		}
	}

	@Override
	public void setUseOfCehicle(String useOfCehicle) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_useOfCehicle = useOfCehicle;
	}

	@JSON
	@Override
	public String getNajmPlateType() {
		if (_najmPlateType == null) {
			return "";
		}
		else {
			return _najmPlateType;
		}
	}

	@Override
	public void setNajmPlateType(String najmPlateType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_najmPlateType = najmPlateType;
	}

	@JSON
	@Override
	public String getNajmStatus() {
		if (_najmStatus == null) {
			return "";
		}
		else {
			return _najmStatus;
		}
	}

	@Override
	public void setNajmStatus(String najmStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_najmStatus = najmStatus;
	}

	@JSON
	@Override
	public String getEstemaraExpiryDate() {
		if (_estemaraExpiryDate == null) {
			return "";
		}
		else {
			return _estemaraExpiryDate;
		}
	}

	@Override
	public void setEstemaraExpiryDate(String estemaraExpiryDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_estemaraExpiryDate = estemaraExpiryDate;
	}

	@JSON
	@Override
	public String getGeoLocation() {
		if (_geoLocation == null) {
			return "";
		}
		else {
			return _geoLocation;
		}
	}

	@Override
	public void setGeoLocation(String geoLocation) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_geoLocation = geoLocation;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (entry.getValue() != getColumnValue(entry.getKey())) {
				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public PolicyVEH toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, PolicyVEH>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PolicyVEHImpl policyVEHImpl = new PolicyVEHImpl();

		policyVEHImpl.setPolicyNo(getPolicyNo());
		policyVEHImpl.setVehId(getVehId());
		policyVEHImpl.setVehicleDefType(getVehicleDefType());
		policyVEHImpl.setVehicleSeqCustom(getVehicleSeqCustom());
		policyVEHImpl.setChassisNo(getChassisNo());
		policyVEHImpl.setBodyType(getBodyType());
		policyVEHImpl.setMake(getMake());
		policyVEHImpl.setVehModel(getVehModel());
		policyVEHImpl.setMfgYear(getMfgYear());
		policyVEHImpl.setColor(getColor());
		policyVEHImpl.setAgencyRepair(getAgencyRepair());
		policyVEHImpl.setNoofPassengers(getNoofPassengers());
		policyVEHImpl.setEnPlateNo(getEnPlateNo());
		policyVEHImpl.setEnPlateL1(getEnPlateL1());
		policyVEHImpl.setEnPlateL2(getEnPlateL2());
		policyVEHImpl.setEnPlateL3(getEnPlateL3());
		policyVEHImpl.setArPlateNo(getArPlateNo());
		policyVEHImpl.setArPlateL1(getArPlateL1());
		policyVEHImpl.setArPlateL2(getArPlateL2());
		policyVEHImpl.setArPlateL3(getArPlateL3());
		policyVEHImpl.setDeductible(getDeductible());
		policyVEHImpl.setVehicleValue(getVehicleValue());
		policyVEHImpl.setPremium(getPremium());
		policyVEHImpl.setDiscounts(getDiscounts());
		policyVEHImpl.setLoading(getLoading());
		policyVEHImpl.setTotalPremium(getTotalPremium());
		policyVEHImpl.setNoofClaimFreeYears(getNoofClaimFreeYears());
		policyVEHImpl.setUseOfCehicle(getUseOfCehicle());
		policyVEHImpl.setNajmPlateType(getNajmPlateType());
		policyVEHImpl.setNajmStatus(getNajmStatus());
		policyVEHImpl.setEstemaraExpiryDate(getEstemaraExpiryDate());
		policyVEHImpl.setGeoLocation(getGeoLocation());

		policyVEHImpl.resetOriginalValues();

		return policyVEHImpl;
	}

	@Override
	public int compareTo(PolicyVEH policyVEH) {
		PolicyVEHPK primaryKey = policyVEH.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof PolicyVEH)) {
			return false;
		}

		PolicyVEH policyVEH = (PolicyVEH)object;

		PolicyVEHPK primaryKey = policyVEH.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<PolicyVEH> toCacheModel() {
		PolicyVEHCacheModel policyVEHCacheModel = new PolicyVEHCacheModel();

		policyVEHCacheModel.policyVEHPK = getPrimaryKey();

		policyVEHCacheModel.policyNo = getPolicyNo();

		String policyNo = policyVEHCacheModel.policyNo;

		if ((policyNo != null) && (policyNo.length() == 0)) {
			policyVEHCacheModel.policyNo = null;
		}

		policyVEHCacheModel.vehId = getVehId();

		String vehId = policyVEHCacheModel.vehId;

		if ((vehId != null) && (vehId.length() == 0)) {
			policyVEHCacheModel.vehId = null;
		}

		policyVEHCacheModel.vehicleDefType = getVehicleDefType();

		String vehicleDefType = policyVEHCacheModel.vehicleDefType;

		if ((vehicleDefType != null) && (vehicleDefType.length() == 0)) {
			policyVEHCacheModel.vehicleDefType = null;
		}

		policyVEHCacheModel.vehicleSeqCustom = getVehicleSeqCustom();

		String vehicleSeqCustom = policyVEHCacheModel.vehicleSeqCustom;

		if ((vehicleSeqCustom != null) && (vehicleSeqCustom.length() == 0)) {
			policyVEHCacheModel.vehicleSeqCustom = null;
		}

		policyVEHCacheModel.chassisNo = getChassisNo();

		String chassisNo = policyVEHCacheModel.chassisNo;

		if ((chassisNo != null) && (chassisNo.length() == 0)) {
			policyVEHCacheModel.chassisNo = null;
		}

		policyVEHCacheModel.bodyType = getBodyType();

		String bodyType = policyVEHCacheModel.bodyType;

		if ((bodyType != null) && (bodyType.length() == 0)) {
			policyVEHCacheModel.bodyType = null;
		}

		policyVEHCacheModel.make = getMake();

		String make = policyVEHCacheModel.make;

		if ((make != null) && (make.length() == 0)) {
			policyVEHCacheModel.make = null;
		}

		policyVEHCacheModel.vehModel = getVehModel();

		String vehModel = policyVEHCacheModel.vehModel;

		if ((vehModel != null) && (vehModel.length() == 0)) {
			policyVEHCacheModel.vehModel = null;
		}

		policyVEHCacheModel.mfgYear = getMfgYear();

		policyVEHCacheModel.color = getColor();

		String color = policyVEHCacheModel.color;

		if ((color != null) && (color.length() == 0)) {
			policyVEHCacheModel.color = null;
		}

		policyVEHCacheModel.agencyRepair = getAgencyRepair();

		String agencyRepair = policyVEHCacheModel.agencyRepair;

		if ((agencyRepair != null) && (agencyRepair.length() == 0)) {
			policyVEHCacheModel.agencyRepair = null;
		}

		policyVEHCacheModel.noofPassengers = getNoofPassengers();

		policyVEHCacheModel.enPlateNo = getEnPlateNo();

		policyVEHCacheModel.enPlateL1 = getEnPlateL1();

		String enPlateL1 = policyVEHCacheModel.enPlateL1;

		if ((enPlateL1 != null) && (enPlateL1.length() == 0)) {
			policyVEHCacheModel.enPlateL1 = null;
		}

		policyVEHCacheModel.enPlateL2 = getEnPlateL2();

		String enPlateL2 = policyVEHCacheModel.enPlateL2;

		if ((enPlateL2 != null) && (enPlateL2.length() == 0)) {
			policyVEHCacheModel.enPlateL2 = null;
		}

		policyVEHCacheModel.enPlateL3 = getEnPlateL3();

		String enPlateL3 = policyVEHCacheModel.enPlateL3;

		if ((enPlateL3 != null) && (enPlateL3.length() == 0)) {
			policyVEHCacheModel.enPlateL3 = null;
		}

		policyVEHCacheModel.arPlateNo = getArPlateNo();

		String arPlateNo = policyVEHCacheModel.arPlateNo;

		if ((arPlateNo != null) && (arPlateNo.length() == 0)) {
			policyVEHCacheModel.arPlateNo = null;
		}

		policyVEHCacheModel.arPlateL1 = getArPlateL1();

		String arPlateL1 = policyVEHCacheModel.arPlateL1;

		if ((arPlateL1 != null) && (arPlateL1.length() == 0)) {
			policyVEHCacheModel.arPlateL1 = null;
		}

		policyVEHCacheModel.arPlateL2 = getArPlateL2();

		String arPlateL2 = policyVEHCacheModel.arPlateL2;

		if ((arPlateL2 != null) && (arPlateL2.length() == 0)) {
			policyVEHCacheModel.arPlateL2 = null;
		}

		policyVEHCacheModel.arPlateL3 = getArPlateL3();

		String arPlateL3 = policyVEHCacheModel.arPlateL3;

		if ((arPlateL3 != null) && (arPlateL3.length() == 0)) {
			policyVEHCacheModel.arPlateL3 = null;
		}

		policyVEHCacheModel.deductible = getDeductible();

		policyVEHCacheModel.vehicleValue = getVehicleValue();

		policyVEHCacheModel.premium = getPremium();

		policyVEHCacheModel.discounts = getDiscounts();

		policyVEHCacheModel.loading = getLoading();

		policyVEHCacheModel.totalPremium = getTotalPremium();

		policyVEHCacheModel.noofClaimFreeYears = getNoofClaimFreeYears();

		policyVEHCacheModel.useOfCehicle = getUseOfCehicle();

		String useOfCehicle = policyVEHCacheModel.useOfCehicle;

		if ((useOfCehicle != null) && (useOfCehicle.length() == 0)) {
			policyVEHCacheModel.useOfCehicle = null;
		}

		policyVEHCacheModel.najmPlateType = getNajmPlateType();

		String najmPlateType = policyVEHCacheModel.najmPlateType;

		if ((najmPlateType != null) && (najmPlateType.length() == 0)) {
			policyVEHCacheModel.najmPlateType = null;
		}

		policyVEHCacheModel.najmStatus = getNajmStatus();

		String najmStatus = policyVEHCacheModel.najmStatus;

		if ((najmStatus != null) && (najmStatus.length() == 0)) {
			policyVEHCacheModel.najmStatus = null;
		}

		policyVEHCacheModel.estemaraExpiryDate = getEstemaraExpiryDate();

		String estemaraExpiryDate = policyVEHCacheModel.estemaraExpiryDate;

		if ((estemaraExpiryDate != null) &&
			(estemaraExpiryDate.length() == 0)) {

			policyVEHCacheModel.estemaraExpiryDate = null;
		}

		policyVEHCacheModel.geoLocation = getGeoLocation();

		String geoLocation = policyVEHCacheModel.geoLocation;

		if ((geoLocation != null) && (geoLocation.length() == 0)) {
			policyVEHCacheModel.geoLocation = null;
		}

		return policyVEHCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<PolicyVEH, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(4 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<PolicyVEH, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<PolicyVEH, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((PolicyVEH)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<PolicyVEH, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<PolicyVEH, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<PolicyVEH, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((PolicyVEH)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, PolicyVEH>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private String _policyNo;
	private String _vehId;
	private String _vehicleDefType;
	private String _vehicleSeqCustom;
	private String _chassisNo;
	private String _bodyType;
	private String _make;
	private String _vehModel;
	private long _mfgYear;
	private String _color;
	private String _agencyRepair;
	private long _noofPassengers;
	private long _enPlateNo;
	private String _enPlateL1;
	private String _enPlateL2;
	private String _enPlateL3;
	private String _arPlateNo;
	private String _arPlateL1;
	private String _arPlateL2;
	private String _arPlateL3;
	private long _deductible;
	private long _vehicleValue;
	private long _premium;
	private long _discounts;
	private long _loading;
	private long _totalPremium;
	private long _noofClaimFreeYears;
	private String _useOfCehicle;
	private String _najmPlateType;
	private String _najmStatus;
	private String _estemaraExpiryDate;
	private String _geoLocation;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<PolicyVEH, Object> function = _attributeGetterFunctions.get(
			columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((PolicyVEH)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("ODS_POLICY_NO", _policyNo);
		_columnOriginalValues.put("ODS_VEH_ID", _vehId);
		_columnOriginalValues.put("ODS_VEHICLE_DEF_TYPE", _vehicleDefType);
		_columnOriginalValues.put("ODS_VEHICLE_SEQ_CUSTOM", _vehicleSeqCustom);
		_columnOriginalValues.put("ODS_CHASSIS_NO", _chassisNo);
		_columnOriginalValues.put("ODS_BODY_TYPE", _bodyType);
		_columnOriginalValues.put("ODS_MAKE", _make);
		_columnOriginalValues.put("ODS_MODEL", _vehModel);
		_columnOriginalValues.put("ODS_MFG_YEAR", _mfgYear);
		_columnOriginalValues.put("ODS_COLOR", _color);
		_columnOriginalValues.put("ODS_AGENCY_REPAIR", _agencyRepair);
		_columnOriginalValues.put("ODS_NOOF_PASSENGERS", _noofPassengers);
		_columnOriginalValues.put("ODS_ENG_PLATE_NO", _enPlateNo);
		_columnOriginalValues.put("ODS_ENG_PLATE_L1", _enPlateL1);
		_columnOriginalValues.put("ODS_ENG_PLATE_L2", _enPlateL2);
		_columnOriginalValues.put("ODS_ENG_PLATE_L3", _enPlateL3);
		_columnOriginalValues.put("ODS_ARB_PLATE_NO", _arPlateNo);
		_columnOriginalValues.put("ODS_ARB_PLATE_L1", _arPlateL1);
		_columnOriginalValues.put("ODS_ARB_PLATE_L2", _arPlateL2);
		_columnOriginalValues.put("ODS_ARB_PLATE_L3", _arPlateL3);
		_columnOriginalValues.put("ODS_DEDUCTIBLE", _deductible);
		_columnOriginalValues.put("ODS_VEHICLE_VALUE", _vehicleValue);
		_columnOriginalValues.put("ODS_PREMIUM", _premium);
		_columnOriginalValues.put("ODS_DISCOUNTS", _discounts);
		_columnOriginalValues.put("ODS_LOADING", _loading);
		_columnOriginalValues.put("ODS_TOTAL_PREMIUM", _totalPremium);
		_columnOriginalValues.put(
			"ODS_NOOF_CLAIM_FREE_YEARS", _noofClaimFreeYears);
		_columnOriginalValues.put("ODS_USEOF_VEHICLE", _useOfCehicle);
		_columnOriginalValues.put("ODS_NAJM_PLATE_TYPE", _najmPlateType);
		_columnOriginalValues.put("ODS_NAJM_STATUS", _najmStatus);
		_columnOriginalValues.put("ODS_ESTEMARA_EXP_DT", _estemaraExpiryDate);
		_columnOriginalValues.put("ODS_GEOLOCATION", _geoLocation);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("ODS_POLICY_NO", "policyNo");
		attributeNames.put("ODS_VEH_ID", "vehId");
		attributeNames.put("ODS_VEHICLE_DEF_TYPE", "vehicleDefType");
		attributeNames.put("ODS_VEHICLE_SEQ_CUSTOM", "vehicleSeqCustom");
		attributeNames.put("ODS_CHASSIS_NO", "chassisNo");
		attributeNames.put("ODS_BODY_TYPE", "bodyType");
		attributeNames.put("ODS_MAKE", "make");
		attributeNames.put("ODS_MODEL", "vehModel");
		attributeNames.put("ODS_MFG_YEAR", "mfgYear");
		attributeNames.put("ODS_COLOR", "color");
		attributeNames.put("ODS_AGENCY_REPAIR", "agencyRepair");
		attributeNames.put("ODS_NOOF_PASSENGERS", "noofPassengers");
		attributeNames.put("ODS_ENG_PLATE_NO", "enPlateNo");
		attributeNames.put("ODS_ENG_PLATE_L1", "enPlateL1");
		attributeNames.put("ODS_ENG_PLATE_L2", "enPlateL2");
		attributeNames.put("ODS_ENG_PLATE_L3", "enPlateL3");
		attributeNames.put("ODS_ARB_PLATE_NO", "arPlateNo");
		attributeNames.put("ODS_ARB_PLATE_L1", "arPlateL1");
		attributeNames.put("ODS_ARB_PLATE_L2", "arPlateL2");
		attributeNames.put("ODS_ARB_PLATE_L3", "arPlateL3");
		attributeNames.put("ODS_DEDUCTIBLE", "deductible");
		attributeNames.put("ODS_VEHICLE_VALUE", "vehicleValue");
		attributeNames.put("ODS_PREMIUM", "premium");
		attributeNames.put("ODS_DISCOUNTS", "discounts");
		attributeNames.put("ODS_LOADING", "loading");
		attributeNames.put("ODS_TOTAL_PREMIUM", "totalPremium");
		attributeNames.put("ODS_NOOF_CLAIM_FREE_YEARS", "noofClaimFreeYears");
		attributeNames.put("ODS_USEOF_VEHICLE", "useOfCehicle");
		attributeNames.put("ODS_NAJM_PLATE_TYPE", "najmPlateType");
		attributeNames.put("ODS_NAJM_STATUS", "najmStatus");
		attributeNames.put("ODS_ESTEMARA_EXP_DT", "estemaraExpiryDate");
		attributeNames.put("ODS_GEOLOCATION", "geoLocation");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("ODS_POLICY_NO", 1L);

		columnBitmasks.put("ODS_VEH_ID", 2L);

		columnBitmasks.put("ODS_VEHICLE_DEF_TYPE", 4L);

		columnBitmasks.put("ODS_VEHICLE_SEQ_CUSTOM", 8L);

		columnBitmasks.put("ODS_CHASSIS_NO", 16L);

		columnBitmasks.put("ODS_BODY_TYPE", 32L);

		columnBitmasks.put("ODS_MAKE", 64L);

		columnBitmasks.put("ODS_MODEL", 128L);

		columnBitmasks.put("ODS_MFG_YEAR", 256L);

		columnBitmasks.put("ODS_COLOR", 512L);

		columnBitmasks.put("ODS_AGENCY_REPAIR", 1024L);

		columnBitmasks.put("ODS_NOOF_PASSENGERS", 2048L);

		columnBitmasks.put("ODS_ENG_PLATE_NO", 4096L);

		columnBitmasks.put("ODS_ENG_PLATE_L1", 8192L);

		columnBitmasks.put("ODS_ENG_PLATE_L2", 16384L);

		columnBitmasks.put("ODS_ENG_PLATE_L3", 32768L);

		columnBitmasks.put("ODS_ARB_PLATE_NO", 65536L);

		columnBitmasks.put("ODS_ARB_PLATE_L1", 131072L);

		columnBitmasks.put("ODS_ARB_PLATE_L2", 262144L);

		columnBitmasks.put("ODS_ARB_PLATE_L3", 524288L);

		columnBitmasks.put("ODS_DEDUCTIBLE", 1048576L);

		columnBitmasks.put("ODS_VEHICLE_VALUE", 2097152L);

		columnBitmasks.put("ODS_PREMIUM", 4194304L);

		columnBitmasks.put("ODS_DISCOUNTS", 8388608L);

		columnBitmasks.put("ODS_LOADING", 16777216L);

		columnBitmasks.put("ODS_TOTAL_PREMIUM", 33554432L);

		columnBitmasks.put("ODS_NOOF_CLAIM_FREE_YEARS", 67108864L);

		columnBitmasks.put("ODS_USEOF_VEHICLE", 134217728L);

		columnBitmasks.put("ODS_NAJM_PLATE_TYPE", 268435456L);

		columnBitmasks.put("ODS_NAJM_STATUS", 536870912L);

		columnBitmasks.put("ODS_ESTEMARA_EXP_DT", 1073741824L);

		columnBitmasks.put("ODS_GEOLOCATION", 2147483648L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private PolicyVEH _escapedModel;

}