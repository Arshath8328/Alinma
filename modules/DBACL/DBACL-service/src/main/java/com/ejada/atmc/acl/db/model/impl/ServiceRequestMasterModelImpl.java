/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ejada.atmc.acl.db.model.impl;

import com.ejada.atmc.acl.db.model.ServiceRequestMaster;
import com.ejada.atmc.acl.db.model.ServiceRequestMasterModel;
import com.ejada.atmc.acl.db.model.ServiceRequestMasterSoap;

import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the ServiceRequestMaster service. Represents a row in the &quot;SERVICE_REQUEST_MASTER&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>ServiceRequestMasterModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ServiceRequestMasterImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ServiceRequestMasterImpl
 * @generated
 */
@JSON(strict = true)
public class ServiceRequestMasterModelImpl
	extends BaseModelImpl<ServiceRequestMaster>
	implements ServiceRequestMasterModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a service request master model instance should use the <code>ServiceRequestMaster</code> interface instead.
	 */
	public static final String TABLE_NAME = "SERVICE_REQUEST_MASTER";

	public static final Object[][] TABLE_COLUMNS = {
		{"REFERENCE_NO", Types.VARCHAR}, {"SOURCE", Types.VARCHAR},
		{"REQUEST_CATEGORY", Types.VARCHAR}, {"REQUEST_TYPE", Types.VARCHAR},
		{"PRODUCT_TYPE", Types.VARCHAR}, {"REQUEST_MESSAGE", Types.VARCHAR},
		{"IQAMA_ID", Types.VARCHAR}, {"EMAIL", Types.VARCHAR},
		{"MOBILE", Types.VARCHAR}, {"REQUEST_STATUS", Types.VARCHAR},
		{"EMAIL_FLAG", Types.BOOLEAN}, {"CREATOR_USER_ID", Types.VARCHAR},
		{"CREATION_DATE", Types.TIMESTAMP},
		{"CREATOR_USER_TYPE", Types.VARCHAR}, {"ASSIGNED_TO", Types.VARCHAR},
		{"USER_NAME", Types.VARCHAR}, {"IBAN_NUMBER", Types.VARCHAR},
		{"ESCALATION_FLAG", Types.BOOLEAN}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("REFERENCE_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SOURCE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("REQUEST_CATEGORY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("REQUEST_TYPE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PRODUCT_TYPE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("REQUEST_MESSAGE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("IQAMA_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("EMAIL", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MOBILE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("REQUEST_STATUS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("EMAIL_FLAG", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("CREATOR_USER_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CREATION_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CREATOR_USER_TYPE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ASSIGNED_TO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("USER_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("IBAN_NUMBER", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ESCALATION_FLAG", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE =
		"create table SERVICE_REQUEST_MASTER (REFERENCE_NO VARCHAR(75) not null primary key,SOURCE VARCHAR(75) null,REQUEST_CATEGORY VARCHAR(75) null,REQUEST_TYPE VARCHAR(75) null,PRODUCT_TYPE VARCHAR(75) null,REQUEST_MESSAGE VARCHAR(75) null,IQAMA_ID VARCHAR(75) null,EMAIL VARCHAR(75) null,MOBILE VARCHAR(75) null,REQUEST_STATUS VARCHAR(75) null,EMAIL_FLAG BOOLEAN,CREATOR_USER_ID VARCHAR(75) null,CREATION_DATE DATE null,CREATOR_USER_TYPE VARCHAR(75) null,ASSIGNED_TO VARCHAR(75) null,USER_NAME VARCHAR(75) null,IBAN_NUMBER VARCHAR(75) null,ESCALATION_FLAG BOOLEAN)";

	public static final String TABLE_SQL_DROP =
		"drop table SERVICE_REQUEST_MASTER";

	public static final String ORDER_BY_JPQL =
		" ORDER BY serviceRequestMaster.REFERENCE_NO ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY SERVICE_REQUEST_MASTER.REFERENCE_NO ASC";

	public static final String DATA_SOURCE = "extDS";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long ESCALATION_FLAG_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long IQAMA_ID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long REQUEST_STATUS_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)
	 */
	@Deprecated
	public static final long REFERENCE_NO_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static ServiceRequestMaster toModel(
		ServiceRequestMasterSoap soapModel) {

		if (soapModel == null) {
			return null;
		}

		ServiceRequestMaster model = new ServiceRequestMasterImpl();

		model.setREFERENCE_NO(soapModel.getREFERENCE_NO());
		model.setSOURCE(soapModel.getSOURCE());
		model.setREQUEST_CATEGORY(soapModel.getREQUEST_CATEGORY());
		model.setREQUEST_TYPE(soapModel.getREQUEST_TYPE());
		model.setPRODUCT_TYPE(soapModel.getPRODUCT_TYPE());
		model.setREQUEST_MESSAGE(soapModel.getREQUEST_MESSAGE());
		model.setIQAMA_ID(soapModel.getIQAMA_ID());
		model.setEMAIL(soapModel.getEMAIL());
		model.setMOBILE(soapModel.getMOBILE());
		model.setREQUEST_STATUS(soapModel.getREQUEST_STATUS());
		model.setEMAIL_FLAG(soapModel.isEMAIL_FLAG());
		model.setCREATOR_USER_ID(soapModel.getCREATOR_USER_ID());
		model.setCREATION_DATE(soapModel.getCREATION_DATE());
		model.setCREATOR_USER_TYPE(soapModel.getCREATOR_USER_TYPE());
		model.setASSIGNED_TO(soapModel.getASSIGNED_TO());
		model.setUSER_NAME(soapModel.getUSER_NAME());
		model.setIBAN_NUMBER(soapModel.getIBAN_NUMBER());
		model.setESCALATION_FLAG(soapModel.isESCALATION_FLAG());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static List<ServiceRequestMaster> toModels(
		ServiceRequestMasterSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<ServiceRequestMaster> models = new ArrayList<ServiceRequestMaster>(
			soapModels.length);

		for (ServiceRequestMasterSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public ServiceRequestMasterModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _REFERENCE_NO;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setREFERENCE_NO(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _REFERENCE_NO;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return ServiceRequestMaster.class;
	}

	@Override
	public String getModelClassName() {
		return ServiceRequestMaster.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<ServiceRequestMaster, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<ServiceRequestMaster, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ServiceRequestMaster, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((ServiceRequestMaster)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<ServiceRequestMaster, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<ServiceRequestMaster, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(ServiceRequestMaster)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<ServiceRequestMaster, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<ServiceRequestMaster, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, ServiceRequestMaster>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			ServiceRequestMaster.class.getClassLoader(),
			ServiceRequestMaster.class, ModelWrapper.class);

		try {
			Constructor<ServiceRequestMaster> constructor =
				(Constructor<ServiceRequestMaster>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<ServiceRequestMaster, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<ServiceRequestMaster, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<ServiceRequestMaster, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<ServiceRequestMaster, Object>>();
		Map<String, BiConsumer<ServiceRequestMaster, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap
					<String, BiConsumer<ServiceRequestMaster, ?>>();

		attributeGetterFunctions.put(
			"REFERENCE_NO", ServiceRequestMaster::getREFERENCE_NO);
		attributeSetterBiConsumers.put(
			"REFERENCE_NO",
			(BiConsumer<ServiceRequestMaster, String>)
				ServiceRequestMaster::setREFERENCE_NO);
		attributeGetterFunctions.put("SOURCE", ServiceRequestMaster::getSOURCE);
		attributeSetterBiConsumers.put(
			"SOURCE",
			(BiConsumer<ServiceRequestMaster, String>)
				ServiceRequestMaster::setSOURCE);
		attributeGetterFunctions.put(
			"REQUEST_CATEGORY", ServiceRequestMaster::getREQUEST_CATEGORY);
		attributeSetterBiConsumers.put(
			"REQUEST_CATEGORY",
			(BiConsumer<ServiceRequestMaster, String>)
				ServiceRequestMaster::setREQUEST_CATEGORY);
		attributeGetterFunctions.put(
			"REQUEST_TYPE", ServiceRequestMaster::getREQUEST_TYPE);
		attributeSetterBiConsumers.put(
			"REQUEST_TYPE",
			(BiConsumer<ServiceRequestMaster, String>)
				ServiceRequestMaster::setREQUEST_TYPE);
		attributeGetterFunctions.put(
			"PRODUCT_TYPE", ServiceRequestMaster::getPRODUCT_TYPE);
		attributeSetterBiConsumers.put(
			"PRODUCT_TYPE",
			(BiConsumer<ServiceRequestMaster, String>)
				ServiceRequestMaster::setPRODUCT_TYPE);
		attributeGetterFunctions.put(
			"REQUEST_MESSAGE", ServiceRequestMaster::getREQUEST_MESSAGE);
		attributeSetterBiConsumers.put(
			"REQUEST_MESSAGE",
			(BiConsumer<ServiceRequestMaster, String>)
				ServiceRequestMaster::setREQUEST_MESSAGE);
		attributeGetterFunctions.put(
			"IQAMA_ID", ServiceRequestMaster::getIQAMA_ID);
		attributeSetterBiConsumers.put(
			"IQAMA_ID",
			(BiConsumer<ServiceRequestMaster, String>)
				ServiceRequestMaster::setIQAMA_ID);
		attributeGetterFunctions.put("EMAIL", ServiceRequestMaster::getEMAIL);
		attributeSetterBiConsumers.put(
			"EMAIL",
			(BiConsumer<ServiceRequestMaster, String>)
				ServiceRequestMaster::setEMAIL);
		attributeGetterFunctions.put("MOBILE", ServiceRequestMaster::getMOBILE);
		attributeSetterBiConsumers.put(
			"MOBILE",
			(BiConsumer<ServiceRequestMaster, String>)
				ServiceRequestMaster::setMOBILE);
		attributeGetterFunctions.put(
			"REQUEST_STATUS", ServiceRequestMaster::getREQUEST_STATUS);
		attributeSetterBiConsumers.put(
			"REQUEST_STATUS",
			(BiConsumer<ServiceRequestMaster, String>)
				ServiceRequestMaster::setREQUEST_STATUS);
		attributeGetterFunctions.put(
			"EMAIL_FLAG", ServiceRequestMaster::getEMAIL_FLAG);
		attributeSetterBiConsumers.put(
			"EMAIL_FLAG",
			(BiConsumer<ServiceRequestMaster, Boolean>)
				ServiceRequestMaster::setEMAIL_FLAG);
		attributeGetterFunctions.put(
			"CREATOR_USER_ID", ServiceRequestMaster::getCREATOR_USER_ID);
		attributeSetterBiConsumers.put(
			"CREATOR_USER_ID",
			(BiConsumer<ServiceRequestMaster, String>)
				ServiceRequestMaster::setCREATOR_USER_ID);
		attributeGetterFunctions.put(
			"CREATION_DATE", ServiceRequestMaster::getCREATION_DATE);
		attributeSetterBiConsumers.put(
			"CREATION_DATE",
			(BiConsumer<ServiceRequestMaster, Date>)
				ServiceRequestMaster::setCREATION_DATE);
		attributeGetterFunctions.put(
			"CREATOR_USER_TYPE", ServiceRequestMaster::getCREATOR_USER_TYPE);
		attributeSetterBiConsumers.put(
			"CREATOR_USER_TYPE",
			(BiConsumer<ServiceRequestMaster, String>)
				ServiceRequestMaster::setCREATOR_USER_TYPE);
		attributeGetterFunctions.put(
			"ASSIGNED_TO", ServiceRequestMaster::getASSIGNED_TO);
		attributeSetterBiConsumers.put(
			"ASSIGNED_TO",
			(BiConsumer<ServiceRequestMaster, String>)
				ServiceRequestMaster::setASSIGNED_TO);
		attributeGetterFunctions.put(
			"USER_NAME", ServiceRequestMaster::getUSER_NAME);
		attributeSetterBiConsumers.put(
			"USER_NAME",
			(BiConsumer<ServiceRequestMaster, String>)
				ServiceRequestMaster::setUSER_NAME);
		attributeGetterFunctions.put(
			"IBAN_NUMBER", ServiceRequestMaster::getIBAN_NUMBER);
		attributeSetterBiConsumers.put(
			"IBAN_NUMBER",
			(BiConsumer<ServiceRequestMaster, String>)
				ServiceRequestMaster::setIBAN_NUMBER);
		attributeGetterFunctions.put(
			"ESCALATION_FLAG", ServiceRequestMaster::getESCALATION_FLAG);
		attributeSetterBiConsumers.put(
			"ESCALATION_FLAG",
			(BiConsumer<ServiceRequestMaster, Boolean>)
				ServiceRequestMaster::setESCALATION_FLAG);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getREFERENCE_NO() {
		if (_REFERENCE_NO == null) {
			return "";
		}
		else {
			return _REFERENCE_NO;
		}
	}

	@Override
	public void setREFERENCE_NO(String REFERENCE_NO) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_REFERENCE_NO = REFERENCE_NO;
	}

	@JSON
	@Override
	public String getSOURCE() {
		if (_SOURCE == null) {
			return "";
		}
		else {
			return _SOURCE;
		}
	}

	@Override
	public void setSOURCE(String SOURCE) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_SOURCE = SOURCE;
	}

	@JSON
	@Override
	public String getREQUEST_CATEGORY() {
		if (_REQUEST_CATEGORY == null) {
			return "";
		}
		else {
			return _REQUEST_CATEGORY;
		}
	}

	@Override
	public void setREQUEST_CATEGORY(String REQUEST_CATEGORY) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_REQUEST_CATEGORY = REQUEST_CATEGORY;
	}

	@JSON
	@Override
	public String getREQUEST_TYPE() {
		if (_REQUEST_TYPE == null) {
			return "";
		}
		else {
			return _REQUEST_TYPE;
		}
	}

	@Override
	public void setREQUEST_TYPE(String REQUEST_TYPE) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_REQUEST_TYPE = REQUEST_TYPE;
	}

	@JSON
	@Override
	public String getPRODUCT_TYPE() {
		if (_PRODUCT_TYPE == null) {
			return "";
		}
		else {
			return _PRODUCT_TYPE;
		}
	}

	@Override
	public void setPRODUCT_TYPE(String PRODUCT_TYPE) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_PRODUCT_TYPE = PRODUCT_TYPE;
	}

	@JSON
	@Override
	public String getREQUEST_MESSAGE() {
		if (_REQUEST_MESSAGE == null) {
			return "";
		}
		else {
			return _REQUEST_MESSAGE;
		}
	}

	@Override
	public void setREQUEST_MESSAGE(String REQUEST_MESSAGE) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_REQUEST_MESSAGE = REQUEST_MESSAGE;
	}

	@JSON
	@Override
	public String getIQAMA_ID() {
		if (_IQAMA_ID == null) {
			return "";
		}
		else {
			return _IQAMA_ID;
		}
	}

	@Override
	public void setIQAMA_ID(String IQAMA_ID) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_IQAMA_ID = IQAMA_ID;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalIQAMA_ID() {
		return getColumnOriginalValue("IQAMA_ID");
	}

	@JSON
	@Override
	public String getEMAIL() {
		if (_EMAIL == null) {
			return "";
		}
		else {
			return _EMAIL;
		}
	}

	@Override
	public void setEMAIL(String EMAIL) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_EMAIL = EMAIL;
	}

	@JSON
	@Override
	public String getMOBILE() {
		if (_MOBILE == null) {
			return "";
		}
		else {
			return _MOBILE;
		}
	}

	@Override
	public void setMOBILE(String MOBILE) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_MOBILE = MOBILE;
	}

	@JSON
	@Override
	public String getREQUEST_STATUS() {
		if (_REQUEST_STATUS == null) {
			return "";
		}
		else {
			return _REQUEST_STATUS;
		}
	}

	@Override
	public void setREQUEST_STATUS(String REQUEST_STATUS) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_REQUEST_STATUS = REQUEST_STATUS;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalREQUEST_STATUS() {
		return getColumnOriginalValue("REQUEST_STATUS");
	}

	@JSON
	@Override
	public boolean getEMAIL_FLAG() {
		return _EMAIL_FLAG;
	}

	@JSON
	@Override
	public boolean isEMAIL_FLAG() {
		return _EMAIL_FLAG;
	}

	@Override
	public void setEMAIL_FLAG(boolean EMAIL_FLAG) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_EMAIL_FLAG = EMAIL_FLAG;
	}

	@JSON
	@Override
	public String getCREATOR_USER_ID() {
		if (_CREATOR_USER_ID == null) {
			return "";
		}
		else {
			return _CREATOR_USER_ID;
		}
	}

	@Override
	public void setCREATOR_USER_ID(String CREATOR_USER_ID) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_CREATOR_USER_ID = CREATOR_USER_ID;
	}

	@JSON
	@Override
	public Date getCREATION_DATE() {
		return _CREATION_DATE;
	}

	@Override
	public void setCREATION_DATE(Date CREATION_DATE) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_CREATION_DATE = CREATION_DATE;
	}

	@JSON
	@Override
	public String getCREATOR_USER_TYPE() {
		if (_CREATOR_USER_TYPE == null) {
			return "";
		}
		else {
			return _CREATOR_USER_TYPE;
		}
	}

	@Override
	public void setCREATOR_USER_TYPE(String CREATOR_USER_TYPE) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_CREATOR_USER_TYPE = CREATOR_USER_TYPE;
	}

	@JSON
	@Override
	public String getASSIGNED_TO() {
		if (_ASSIGNED_TO == null) {
			return "";
		}
		else {
			return _ASSIGNED_TO;
		}
	}

	@Override
	public void setASSIGNED_TO(String ASSIGNED_TO) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ASSIGNED_TO = ASSIGNED_TO;
	}

	@JSON
	@Override
	public String getUSER_NAME() {
		if (_USER_NAME == null) {
			return "";
		}
		else {
			return _USER_NAME;
		}
	}

	@Override
	public void setUSER_NAME(String USER_NAME) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_USER_NAME = USER_NAME;
	}

	@JSON
	@Override
	public String getIBAN_NUMBER() {
		if (_IBAN_NUMBER == null) {
			return "";
		}
		else {
			return _IBAN_NUMBER;
		}
	}

	@Override
	public void setIBAN_NUMBER(String IBAN_NUMBER) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_IBAN_NUMBER = IBAN_NUMBER;
	}

	@JSON
	@Override
	public boolean getESCALATION_FLAG() {
		return _ESCALATION_FLAG;
	}

	@JSON
	@Override
	public boolean isESCALATION_FLAG() {
		return _ESCALATION_FLAG;
	}

	@Override
	public void setESCALATION_FLAG(boolean ESCALATION_FLAG) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ESCALATION_FLAG = ESCALATION_FLAG;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public boolean getOriginalESCALATION_FLAG() {
		return GetterUtil.getBoolean(
			this.<Boolean>getColumnOriginalValue("ESCALATION_FLAG"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (entry.getValue() != getColumnValue(entry.getKey())) {
				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ServiceRequestMaster toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, ServiceRequestMaster>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ServiceRequestMasterImpl serviceRequestMasterImpl =
			new ServiceRequestMasterImpl();

		serviceRequestMasterImpl.setREFERENCE_NO(getREFERENCE_NO());
		serviceRequestMasterImpl.setSOURCE(getSOURCE());
		serviceRequestMasterImpl.setREQUEST_CATEGORY(getREQUEST_CATEGORY());
		serviceRequestMasterImpl.setREQUEST_TYPE(getREQUEST_TYPE());
		serviceRequestMasterImpl.setPRODUCT_TYPE(getPRODUCT_TYPE());
		serviceRequestMasterImpl.setREQUEST_MESSAGE(getREQUEST_MESSAGE());
		serviceRequestMasterImpl.setIQAMA_ID(getIQAMA_ID());
		serviceRequestMasterImpl.setEMAIL(getEMAIL());
		serviceRequestMasterImpl.setMOBILE(getMOBILE());
		serviceRequestMasterImpl.setREQUEST_STATUS(getREQUEST_STATUS());
		serviceRequestMasterImpl.setEMAIL_FLAG(isEMAIL_FLAG());
		serviceRequestMasterImpl.setCREATOR_USER_ID(getCREATOR_USER_ID());
		serviceRequestMasterImpl.setCREATION_DATE(getCREATION_DATE());
		serviceRequestMasterImpl.setCREATOR_USER_TYPE(getCREATOR_USER_TYPE());
		serviceRequestMasterImpl.setASSIGNED_TO(getASSIGNED_TO());
		serviceRequestMasterImpl.setUSER_NAME(getUSER_NAME());
		serviceRequestMasterImpl.setIBAN_NUMBER(getIBAN_NUMBER());
		serviceRequestMasterImpl.setESCALATION_FLAG(isESCALATION_FLAG());

		serviceRequestMasterImpl.resetOriginalValues();

		return serviceRequestMasterImpl;
	}

	@Override
	public int compareTo(ServiceRequestMaster serviceRequestMaster) {
		String primaryKey = serviceRequestMaster.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof ServiceRequestMaster)) {
			return false;
		}

		ServiceRequestMaster serviceRequestMaster =
			(ServiceRequestMaster)object;

		String primaryKey = serviceRequestMaster.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<ServiceRequestMaster> toCacheModel() {
		ServiceRequestMasterCacheModel serviceRequestMasterCacheModel =
			new ServiceRequestMasterCacheModel();

		serviceRequestMasterCacheModel.REFERENCE_NO = getREFERENCE_NO();

		String REFERENCE_NO = serviceRequestMasterCacheModel.REFERENCE_NO;

		if ((REFERENCE_NO != null) && (REFERENCE_NO.length() == 0)) {
			serviceRequestMasterCacheModel.REFERENCE_NO = null;
		}

		serviceRequestMasterCacheModel.SOURCE = getSOURCE();

		String SOURCE = serviceRequestMasterCacheModel.SOURCE;

		if ((SOURCE != null) && (SOURCE.length() == 0)) {
			serviceRequestMasterCacheModel.SOURCE = null;
		}

		serviceRequestMasterCacheModel.REQUEST_CATEGORY = getREQUEST_CATEGORY();

		String REQUEST_CATEGORY =
			serviceRequestMasterCacheModel.REQUEST_CATEGORY;

		if ((REQUEST_CATEGORY != null) && (REQUEST_CATEGORY.length() == 0)) {
			serviceRequestMasterCacheModel.REQUEST_CATEGORY = null;
		}

		serviceRequestMasterCacheModel.REQUEST_TYPE = getREQUEST_TYPE();

		String REQUEST_TYPE = serviceRequestMasterCacheModel.REQUEST_TYPE;

		if ((REQUEST_TYPE != null) && (REQUEST_TYPE.length() == 0)) {
			serviceRequestMasterCacheModel.REQUEST_TYPE = null;
		}

		serviceRequestMasterCacheModel.PRODUCT_TYPE = getPRODUCT_TYPE();

		String PRODUCT_TYPE = serviceRequestMasterCacheModel.PRODUCT_TYPE;

		if ((PRODUCT_TYPE != null) && (PRODUCT_TYPE.length() == 0)) {
			serviceRequestMasterCacheModel.PRODUCT_TYPE = null;
		}

		serviceRequestMasterCacheModel.REQUEST_MESSAGE = getREQUEST_MESSAGE();

		String REQUEST_MESSAGE = serviceRequestMasterCacheModel.REQUEST_MESSAGE;

		if ((REQUEST_MESSAGE != null) && (REQUEST_MESSAGE.length() == 0)) {
			serviceRequestMasterCacheModel.REQUEST_MESSAGE = null;
		}

		serviceRequestMasterCacheModel.IQAMA_ID = getIQAMA_ID();

		String IQAMA_ID = serviceRequestMasterCacheModel.IQAMA_ID;

		if ((IQAMA_ID != null) && (IQAMA_ID.length() == 0)) {
			serviceRequestMasterCacheModel.IQAMA_ID = null;
		}

		serviceRequestMasterCacheModel.EMAIL = getEMAIL();

		String EMAIL = serviceRequestMasterCacheModel.EMAIL;

		if ((EMAIL != null) && (EMAIL.length() == 0)) {
			serviceRequestMasterCacheModel.EMAIL = null;
		}

		serviceRequestMasterCacheModel.MOBILE = getMOBILE();

		String MOBILE = serviceRequestMasterCacheModel.MOBILE;

		if ((MOBILE != null) && (MOBILE.length() == 0)) {
			serviceRequestMasterCacheModel.MOBILE = null;
		}

		serviceRequestMasterCacheModel.REQUEST_STATUS = getREQUEST_STATUS();

		String REQUEST_STATUS = serviceRequestMasterCacheModel.REQUEST_STATUS;

		if ((REQUEST_STATUS != null) && (REQUEST_STATUS.length() == 0)) {
			serviceRequestMasterCacheModel.REQUEST_STATUS = null;
		}

		serviceRequestMasterCacheModel.EMAIL_FLAG = isEMAIL_FLAG();

		serviceRequestMasterCacheModel.CREATOR_USER_ID = getCREATOR_USER_ID();

		String CREATOR_USER_ID = serviceRequestMasterCacheModel.CREATOR_USER_ID;

		if ((CREATOR_USER_ID != null) && (CREATOR_USER_ID.length() == 0)) {
			serviceRequestMasterCacheModel.CREATOR_USER_ID = null;
		}

		Date CREATION_DATE = getCREATION_DATE();

		if (CREATION_DATE != null) {
			serviceRequestMasterCacheModel.CREATION_DATE =
				CREATION_DATE.getTime();
		}
		else {
			serviceRequestMasterCacheModel.CREATION_DATE = Long.MIN_VALUE;
		}

		serviceRequestMasterCacheModel.CREATOR_USER_TYPE =
			getCREATOR_USER_TYPE();

		String CREATOR_USER_TYPE =
			serviceRequestMasterCacheModel.CREATOR_USER_TYPE;

		if ((CREATOR_USER_TYPE != null) && (CREATOR_USER_TYPE.length() == 0)) {
			serviceRequestMasterCacheModel.CREATOR_USER_TYPE = null;
		}

		serviceRequestMasterCacheModel.ASSIGNED_TO = getASSIGNED_TO();

		String ASSIGNED_TO = serviceRequestMasterCacheModel.ASSIGNED_TO;

		if ((ASSIGNED_TO != null) && (ASSIGNED_TO.length() == 0)) {
			serviceRequestMasterCacheModel.ASSIGNED_TO = null;
		}

		serviceRequestMasterCacheModel.USER_NAME = getUSER_NAME();

		String USER_NAME = serviceRequestMasterCacheModel.USER_NAME;

		if ((USER_NAME != null) && (USER_NAME.length() == 0)) {
			serviceRequestMasterCacheModel.USER_NAME = null;
		}

		serviceRequestMasterCacheModel.IBAN_NUMBER = getIBAN_NUMBER();

		String IBAN_NUMBER = serviceRequestMasterCacheModel.IBAN_NUMBER;

		if ((IBAN_NUMBER != null) && (IBAN_NUMBER.length() == 0)) {
			serviceRequestMasterCacheModel.IBAN_NUMBER = null;
		}

		serviceRequestMasterCacheModel.ESCALATION_FLAG = isESCALATION_FLAG();

		return serviceRequestMasterCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<ServiceRequestMaster, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(4 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<ServiceRequestMaster, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ServiceRequestMaster, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(
				attributeGetterFunction.apply((ServiceRequestMaster)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<ServiceRequestMaster, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<ServiceRequestMaster, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ServiceRequestMaster, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(
				attributeGetterFunction.apply((ServiceRequestMaster)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, ServiceRequestMaster>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private String _REFERENCE_NO;

	private String _SOURCE;

	private String _REQUEST_CATEGORY;

	private String _REQUEST_TYPE;

	private String _PRODUCT_TYPE;

	private String _REQUEST_MESSAGE;

	private String _IQAMA_ID;

	private String _EMAIL;

	private String _MOBILE;

	private String _REQUEST_STATUS;

	private boolean _EMAIL_FLAG;

	private String _CREATOR_USER_ID;

	private Date _CREATION_DATE;

	private String _CREATOR_USER_TYPE;

	private String _ASSIGNED_TO;

	private String _USER_NAME;

	private String _IBAN_NUMBER;

	private boolean _ESCALATION_FLAG;

	public <T> T getColumnValue(String columnName) {
		Function<ServiceRequestMaster, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((ServiceRequestMaster)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("REFERENCE_NO", _REFERENCE_NO);
		_columnOriginalValues.put("SOURCE", _SOURCE);
		_columnOriginalValues.put("REQUEST_CATEGORY", _REQUEST_CATEGORY);
		_columnOriginalValues.put("REQUEST_TYPE", _REQUEST_TYPE);
		_columnOriginalValues.put("PRODUCT_TYPE", _PRODUCT_TYPE);
		_columnOriginalValues.put("REQUEST_MESSAGE", _REQUEST_MESSAGE);
		_columnOriginalValues.put("IQAMA_ID", _IQAMA_ID);
		_columnOriginalValues.put("EMAIL", _EMAIL);
		_columnOriginalValues.put("MOBILE", _MOBILE);
		_columnOriginalValues.put("REQUEST_STATUS", _REQUEST_STATUS);
		_columnOriginalValues.put("EMAIL_FLAG", _EMAIL_FLAG);
		_columnOriginalValues.put("CREATOR_USER_ID", _CREATOR_USER_ID);
		_columnOriginalValues.put("CREATION_DATE", _CREATION_DATE);
		_columnOriginalValues.put("CREATOR_USER_TYPE", _CREATOR_USER_TYPE);
		_columnOriginalValues.put("ASSIGNED_TO", _ASSIGNED_TO);
		_columnOriginalValues.put("USER_NAME", _USER_NAME);
		_columnOriginalValues.put("IBAN_NUMBER", _IBAN_NUMBER);
		_columnOriginalValues.put("ESCALATION_FLAG", _ESCALATION_FLAG);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("REFERENCE_NO", 1L);

		columnBitmasks.put("SOURCE", 2L);

		columnBitmasks.put("REQUEST_CATEGORY", 4L);

		columnBitmasks.put("REQUEST_TYPE", 8L);

		columnBitmasks.put("PRODUCT_TYPE", 16L);

		columnBitmasks.put("REQUEST_MESSAGE", 32L);

		columnBitmasks.put("IQAMA_ID", 64L);

		columnBitmasks.put("EMAIL", 128L);

		columnBitmasks.put("MOBILE", 256L);

		columnBitmasks.put("REQUEST_STATUS", 512L);

		columnBitmasks.put("EMAIL_FLAG", 1024L);

		columnBitmasks.put("CREATOR_USER_ID", 2048L);

		columnBitmasks.put("CREATION_DATE", 4096L);

		columnBitmasks.put("CREATOR_USER_TYPE", 8192L);

		columnBitmasks.put("ASSIGNED_TO", 16384L);

		columnBitmasks.put("USER_NAME", 32768L);

		columnBitmasks.put("IBAN_NUMBER", 65536L);

		columnBitmasks.put("ESCALATION_FLAG", 131072L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private ServiceRequestMaster _escapedModel;

}