/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ejada.atmc.acl.db.model.impl;

import com.ejada.atmc.acl.db.model.BeneficiaryDetails;
import com.ejada.atmc.acl.db.model.BeneficiaryDetailsModel;
import com.ejada.atmc.acl.db.model.BeneficiaryDetailsSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.ProxyUtil;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the BeneficiaryDetails service. Represents a row in the &quot;ODS_BENF_DETAILS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>BeneficiaryDetailsModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BeneficiaryDetailsImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see BeneficiaryDetailsImpl
 * @generated
 */
@JSON(strict = true)
public class BeneficiaryDetailsModelImpl
	extends BaseModelImpl<BeneficiaryDetails>
	implements BeneficiaryDetailsModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a beneficiary details model instance should use the <code>BeneficiaryDetails</code> interface instead.
	 */
	public static final String TABLE_NAME = "ODS_BENF_DETAILS";

	public static final Object[][] TABLE_COLUMNS = {
		{"ODS_POLICY_NO", Types.VARCHAR}, {"ODS_BENF_NAME", Types.VARCHAR},
		{"ODS_BENF_PCT", Types.VARCHAR}, {"ODS_BENF_REL", Types.VARCHAR},
		{"ODS_BENF_ID", Types.BIGINT}, {"ODS_BENF_AGE", Types.VARCHAR},
		{"ODS_BENF_TYPE", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ODS_POLICY_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_BENF_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_BENF_PCT", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_BENF_REL", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_BENF_ID", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ODS_BENF_AGE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ODS_BENF_TYPE", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table ODS_BENF_DETAILS (ODS_POLICY_NO VARCHAR(75) null,ODS_BENF_NAME VARCHAR(75) null,ODS_BENF_PCT VARCHAR(75) null,ODS_BENF_REL VARCHAR(75) null,ODS_BENF_ID LONG not null primary key,ODS_BENF_AGE VARCHAR(75) null,ODS_BENF_TYPE VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP = "drop table ODS_BENF_DETAILS";

	public static final String ORDER_BY_JPQL =
		" ORDER BY beneficiaryDetails.benfId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY ODS_BENF_DETAILS.ODS_BENF_ID ASC";

	public static final String DATA_SOURCE = "extDS";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long POLICYNO_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)
	 */
	@Deprecated
	public static final long BENFID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static BeneficiaryDetails toModel(BeneficiaryDetailsSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		BeneficiaryDetails model = new BeneficiaryDetailsImpl();

		model.setPolicyNo(soapModel.getPolicyNo());
		model.setBenfName(soapModel.getBenfName());
		model.setBenfPct(soapModel.getBenfPct());
		model.setBenfRel(soapModel.getBenfRel());
		model.setBenfId(soapModel.getBenfId());
		model.setBenfAge(soapModel.getBenfAge());
		model.setBenfType(soapModel.getBenfType());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static List<BeneficiaryDetails> toModels(
		BeneficiaryDetailsSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<BeneficiaryDetails> models = new ArrayList<BeneficiaryDetails>(
			soapModels.length);

		for (BeneficiaryDetailsSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public BeneficiaryDetailsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _benfId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setBenfId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _benfId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return BeneficiaryDetails.class;
	}

	@Override
	public String getModelClassName() {
		return BeneficiaryDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<BeneficiaryDetails, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<BeneficiaryDetails, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<BeneficiaryDetails, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((BeneficiaryDetails)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<BeneficiaryDetails, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<BeneficiaryDetails, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(BeneficiaryDetails)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<BeneficiaryDetails, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<BeneficiaryDetails, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, BeneficiaryDetails>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			BeneficiaryDetails.class.getClassLoader(), BeneficiaryDetails.class,
			ModelWrapper.class);

		try {
			Constructor<BeneficiaryDetails> constructor =
				(Constructor<BeneficiaryDetails>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<BeneficiaryDetails, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<BeneficiaryDetails, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<BeneficiaryDetails, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<BeneficiaryDetails, Object>>();
		Map<String, BiConsumer<BeneficiaryDetails, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap<String, BiConsumer<BeneficiaryDetails, ?>>();

		attributeGetterFunctions.put(
			"policyNo", BeneficiaryDetails::getPolicyNo);
		attributeSetterBiConsumers.put(
			"policyNo",
			(BiConsumer<BeneficiaryDetails, String>)
				BeneficiaryDetails::setPolicyNo);
		attributeGetterFunctions.put(
			"benfName", BeneficiaryDetails::getBenfName);
		attributeSetterBiConsumers.put(
			"benfName",
			(BiConsumer<BeneficiaryDetails, String>)
				BeneficiaryDetails::setBenfName);
		attributeGetterFunctions.put("benfPct", BeneficiaryDetails::getBenfPct);
		attributeSetterBiConsumers.put(
			"benfPct",
			(BiConsumer<BeneficiaryDetails, String>)
				BeneficiaryDetails::setBenfPct);
		attributeGetterFunctions.put("benfRel", BeneficiaryDetails::getBenfRel);
		attributeSetterBiConsumers.put(
			"benfRel",
			(BiConsumer<BeneficiaryDetails, String>)
				BeneficiaryDetails::setBenfRel);
		attributeGetterFunctions.put("benfId", BeneficiaryDetails::getBenfId);
		attributeSetterBiConsumers.put(
			"benfId",
			(BiConsumer<BeneficiaryDetails, Long>)
				BeneficiaryDetails::setBenfId);
		attributeGetterFunctions.put("benfAge", BeneficiaryDetails::getBenfAge);
		attributeSetterBiConsumers.put(
			"benfAge",
			(BiConsumer<BeneficiaryDetails, String>)
				BeneficiaryDetails::setBenfAge);
		attributeGetterFunctions.put(
			"benfType", BeneficiaryDetails::getBenfType);
		attributeSetterBiConsumers.put(
			"benfType",
			(BiConsumer<BeneficiaryDetails, String>)
				BeneficiaryDetails::setBenfType);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getPolicyNo() {
		if (_policyNo == null) {
			return "";
		}
		else {
			return _policyNo;
		}
	}

	@Override
	public void setPolicyNo(String policyNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_policyNo = policyNo;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalPolicyNo() {
		return getColumnOriginalValue("ODS_POLICY_NO");
	}

	@JSON
	@Override
	public String getBenfName() {
		if (_benfName == null) {
			return "";
		}
		else {
			return _benfName;
		}
	}

	@Override
	public void setBenfName(String benfName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_benfName = benfName;
	}

	@JSON
	@Override
	public String getBenfPct() {
		if (_benfPct == null) {
			return "";
		}
		else {
			return _benfPct;
		}
	}

	@Override
	public void setBenfPct(String benfPct) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_benfPct = benfPct;
	}

	@JSON
	@Override
	public String getBenfRel() {
		if (_benfRel == null) {
			return "";
		}
		else {
			return _benfRel;
		}
	}

	@Override
	public void setBenfRel(String benfRel) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_benfRel = benfRel;
	}

	@JSON
	@Override
	public long getBenfId() {
		return _benfId;
	}

	@Override
	public void setBenfId(long benfId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_benfId = benfId;
	}

	@JSON
	@Override
	public String getBenfAge() {
		if (_benfAge == null) {
			return "";
		}
		else {
			return _benfAge;
		}
	}

	@Override
	public void setBenfAge(String benfAge) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_benfAge = benfAge;
	}

	@JSON
	@Override
	public String getBenfType() {
		if (_benfType == null) {
			return "";
		}
		else {
			return _benfType;
		}
	}

	@Override
	public void setBenfType(String benfType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_benfType = benfType;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (entry.getValue() != getColumnValue(entry.getKey())) {
				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, BeneficiaryDetails.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public BeneficiaryDetails toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, BeneficiaryDetails>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		BeneficiaryDetailsImpl beneficiaryDetailsImpl =
			new BeneficiaryDetailsImpl();

		beneficiaryDetailsImpl.setPolicyNo(getPolicyNo());
		beneficiaryDetailsImpl.setBenfName(getBenfName());
		beneficiaryDetailsImpl.setBenfPct(getBenfPct());
		beneficiaryDetailsImpl.setBenfRel(getBenfRel());
		beneficiaryDetailsImpl.setBenfId(getBenfId());
		beneficiaryDetailsImpl.setBenfAge(getBenfAge());
		beneficiaryDetailsImpl.setBenfType(getBenfType());

		beneficiaryDetailsImpl.resetOriginalValues();

		return beneficiaryDetailsImpl;
	}

	@Override
	public int compareTo(BeneficiaryDetails beneficiaryDetails) {
		long primaryKey = beneficiaryDetails.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof BeneficiaryDetails)) {
			return false;
		}

		BeneficiaryDetails beneficiaryDetails = (BeneficiaryDetails)object;

		long primaryKey = beneficiaryDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<BeneficiaryDetails> toCacheModel() {
		BeneficiaryDetailsCacheModel beneficiaryDetailsCacheModel =
			new BeneficiaryDetailsCacheModel();

		beneficiaryDetailsCacheModel.policyNo = getPolicyNo();

		String policyNo = beneficiaryDetailsCacheModel.policyNo;

		if ((policyNo != null) && (policyNo.length() == 0)) {
			beneficiaryDetailsCacheModel.policyNo = null;
		}

		beneficiaryDetailsCacheModel.benfName = getBenfName();

		String benfName = beneficiaryDetailsCacheModel.benfName;

		if ((benfName != null) && (benfName.length() == 0)) {
			beneficiaryDetailsCacheModel.benfName = null;
		}

		beneficiaryDetailsCacheModel.benfPct = getBenfPct();

		String benfPct = beneficiaryDetailsCacheModel.benfPct;

		if ((benfPct != null) && (benfPct.length() == 0)) {
			beneficiaryDetailsCacheModel.benfPct = null;
		}

		beneficiaryDetailsCacheModel.benfRel = getBenfRel();

		String benfRel = beneficiaryDetailsCacheModel.benfRel;

		if ((benfRel != null) && (benfRel.length() == 0)) {
			beneficiaryDetailsCacheModel.benfRel = null;
		}

		beneficiaryDetailsCacheModel.benfId = getBenfId();

		beneficiaryDetailsCacheModel.benfAge = getBenfAge();

		String benfAge = beneficiaryDetailsCacheModel.benfAge;

		if ((benfAge != null) && (benfAge.length() == 0)) {
			beneficiaryDetailsCacheModel.benfAge = null;
		}

		beneficiaryDetailsCacheModel.benfType = getBenfType();

		String benfType = beneficiaryDetailsCacheModel.benfType;

		if ((benfType != null) && (benfType.length() == 0)) {
			beneficiaryDetailsCacheModel.benfType = null;
		}

		return beneficiaryDetailsCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<BeneficiaryDetails, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(4 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<BeneficiaryDetails, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<BeneficiaryDetails, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((BeneficiaryDetails)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<BeneficiaryDetails, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<BeneficiaryDetails, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<BeneficiaryDetails, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((BeneficiaryDetails)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, BeneficiaryDetails>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private String _policyNo;
	private String _benfName;
	private String _benfPct;
	private String _benfRel;
	private long _benfId;
	private String _benfAge;
	private String _benfType;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<BeneficiaryDetails, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((BeneficiaryDetails)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("ODS_POLICY_NO", _policyNo);
		_columnOriginalValues.put("ODS_BENF_NAME", _benfName);
		_columnOriginalValues.put("ODS_BENF_PCT", _benfPct);
		_columnOriginalValues.put("ODS_BENF_REL", _benfRel);
		_columnOriginalValues.put("ODS_BENF_ID", _benfId);
		_columnOriginalValues.put("ODS_BENF_AGE", _benfAge);
		_columnOriginalValues.put("ODS_BENF_TYPE", _benfType);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("ODS_POLICY_NO", "policyNo");
		attributeNames.put("ODS_BENF_NAME", "benfName");
		attributeNames.put("ODS_BENF_PCT", "benfPct");
		attributeNames.put("ODS_BENF_REL", "benfRel");
		attributeNames.put("ODS_BENF_ID", "benfId");
		attributeNames.put("ODS_BENF_AGE", "benfAge");
		attributeNames.put("ODS_BENF_TYPE", "benfType");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("ODS_POLICY_NO", 1L);

		columnBitmasks.put("ODS_BENF_NAME", 2L);

		columnBitmasks.put("ODS_BENF_PCT", 4L);

		columnBitmasks.put("ODS_BENF_REL", 8L);

		columnBitmasks.put("ODS_BENF_ID", 16L);

		columnBitmasks.put("ODS_BENF_AGE", 32L);

		columnBitmasks.put("ODS_BENF_TYPE", 64L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private BeneficiaryDetails _escapedModel;

}